{"ast":null,"code":"var _jsxFileName = \"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/pages/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { Suspense, useEffect, useState } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport styled from 'styled-components';\nimport VersionBar from 'components/VersionBar';\nimport Popups from '../components/Popups';\nimport Web3ReactManager from '../components/Web3ReactManager';\nimport { RedirectDuplicateTokenIds, RedirectOldAddLiquidityPathStructure } from './AddLiquidity/redirects';\nimport { RedirectOldRemoveLiquidityPathStructure } from './RemoveLiquidity/redirects';\nimport AddLiquidity from './AddLiquidity';\nimport Pool from './Pool';\nimport PoolFinder from './PoolFinder';\nimport RemoveLiquidity from './RemoveLiquidity';\nimport Swap from './Swap';\nimport Migration from './Migration';\nimport { RedirectPathToSwapOnly } from './Swap/redirects';\nimport { EN, allLanguages } from '../constants/localisation/languageCodes';\nimport { LanguageContext } from '../hooks/LanguageContext';\nimport { TranslationsContext } from '../hooks/TranslationsContext';\nimport Menu from '../components/Menu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppWrapper = styled.div`\n  display: flex;\n  flex-flow: column;\n  align-items: flex-start;\n  overflow-x: hidden;\n`;\n_c = AppWrapper;\nconst BodyWrapper = styled.div`\n  overflow-y: auto;\n  overflow-x: hidden;\n  z-index: 1;\n  margin-bottom: 64px;\n  ${({\n  theme\n}) => theme.mediaQueries.lg} {\n    margin-bottom: 0;\n  }\n`;\n_c2 = BodyWrapper;\nconst CACHE_KEY = 'pancakeSwapLanguage';\nexport default function App() {\n  _s();\n\n  const [selectedLanguage, setSelectedLanguage] = useState(undefined);\n  const [translatedLanguage, setTranslatedLanguage] = useState(undefined);\n  const [translations, setTranslations] = useState([]);\n\n  const getStoredLang = storedLangCode => {\n    return allLanguages.filter(language => {\n      return language.code === storedLangCode;\n    })[0];\n  };\n\n  useEffect(() => {\n    const storedLangCode = localStorage.getItem(CACHE_KEY);\n\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode);\n      setSelectedLanguage(storedLang);\n    } else {\n      setSelectedLanguage(EN);\n    }\n  }, []);\n\n  const handleLanguageSelect = langObject => {\n    setSelectedLanguage(langObject);\n    localStorage.setItem(CACHE_KEY, langObject.code);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: null,\n    children: /*#__PURE__*/_jsxDEV(HashRouter, {\n      children: /*#__PURE__*/_jsxDEV(AppWrapper, {\n        children: /*#__PURE__*/_jsxDEV(LanguageContext.Provider, {\n          value: {\n            selectedLanguage,\n            setSelectedLanguage: handleLanguageSelect,\n            translatedLanguage,\n            setTranslatedLanguage\n          },\n          children: /*#__PURE__*/_jsxDEV(TranslationsContext.Provider, {\n            value: {\n              translations,\n              setTranslations\n            },\n            children: [/*#__PURE__*/_jsxDEV(Menu, {\n              children: /*#__PURE__*/_jsxDEV(BodyWrapper, {\n                children: [/*#__PURE__*/_jsxDEV(Popups, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Web3ReactManager, {\n                  children: /*#__PURE__*/_jsxDEV(Switch, {\n                    children: [/*#__PURE__*/_jsxDEV(Route, {\n                      exact: true,\n                      strict: true,\n                      path: \"/swap\",\n                      component: Swap\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 86,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Route, {\n                      exact: true,\n                      strict: true,\n                      path: \"/find\",\n                      component: PoolFinder\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 87,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Route, {\n                      exact: true,\n                      strict: true,\n                      path: \"/pool\",\n                      component: Pool\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 88,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Route, {\n                      exact: true,\n                      path: \"/add\",\n                      component: AddLiquidity\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 89,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Route, {\n                      exact: true,\n                      path: \"/migrate\",\n                      component: Migration\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Route, {\n                      exact: true,\n                      strict: true,\n                      path: \"/remove/:currencyIdA/:currencyIdB\",\n                      component: RemoveLiquidity\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 91,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Route, {\n                      exact: true,\n                      path: \"/add/:currencyIdA\",\n                      component: RedirectOldAddLiquidityPathStructure\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 94,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Route, {\n                      exact: true,\n                      path: \"/add/:currencyIdA/:currencyIdB\",\n                      component: RedirectDuplicateTokenIds\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 95,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Route, {\n                      exact: true,\n                      strict: true,\n                      path: \"/remove/:tokens\",\n                      component: RedirectOldRemoveLiquidityPathStructure\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Route, {\n                      component: RedirectPathToSwapOnly\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 98,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(VersionBar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Tlh5F6Og8ct45z7uyBrzgZ9T1u0=\");\n\n_c3 = App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"AppWrapper\");\n$RefreshReg$(_c2, \"BodyWrapper\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/pages/App.tsx"],"names":["React","Suspense","useEffect","useState","HashRouter","Route","Switch","styled","VersionBar","Popups","Web3ReactManager","RedirectDuplicateTokenIds","RedirectOldAddLiquidityPathStructure","RedirectOldRemoveLiquidityPathStructure","AddLiquidity","Pool","PoolFinder","RemoveLiquidity","Swap","Migration","RedirectPathToSwapOnly","EN","allLanguages","LanguageContext","TranslationsContext","Menu","AppWrapper","div","BodyWrapper","theme","mediaQueries","lg","CACHE_KEY","App","selectedLanguage","setSelectedLanguage","undefined","translatedLanguage","setTranslatedLanguage","translations","setTranslations","getStoredLang","storedLangCode","filter","language","code","localStorage","getItem","storedLang","handleLanguageSelect","langObject","setItem"],"mappings":"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","sourcesContent":["import React, { Suspense, useEffect, useState } from 'react'\nimport { HashRouter, Route, Switch } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Language } from '@nguyenphu27/uikit'\nimport VersionBar from 'components/VersionBar'\nimport Popups from '../components/Popups'\nimport Web3ReactManager from '../components/Web3ReactManager'\nimport { RedirectDuplicateTokenIds, RedirectOldAddLiquidityPathStructure } from './AddLiquidity/redirects'\nimport { RedirectOldRemoveLiquidityPathStructure } from './RemoveLiquidity/redirects'\nimport AddLiquidity from './AddLiquidity'\nimport Pool from './Pool'\nimport PoolFinder from './PoolFinder'\nimport RemoveLiquidity from './RemoveLiquidity'\nimport Swap from './Swap'\nimport Migration from './Migration'\nimport { RedirectPathToSwapOnly } from './Swap/redirects'\nimport { EN, allLanguages } from '../constants/localisation/languageCodes'\nimport { LanguageContext } from '../hooks/LanguageContext'\nimport { TranslationsContext } from '../hooks/TranslationsContext'\n\nimport Menu from '../components/Menu'\n\nconst AppWrapper = styled.div`\n  display: flex;\n  flex-flow: column;\n  align-items: flex-start;\n  overflow-x: hidden;\n`\n\nconst BodyWrapper = styled.div`\n  overflow-y: auto;\n  overflow-x: hidden;\n  z-index: 1;\n  margin-bottom: 64px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin-bottom: 0;\n  }\n`\n\nconst CACHE_KEY = 'pancakeSwapLanguage'\n\nexport default function App() {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(undefined)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(undefined)\n  const [translations, setTranslations] = useState<Array<any>>([])\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  useEffect(() => {\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode)\n      setSelectedLanguage(storedLang)\n    } else {\n      setSelectedLanguage(EN)\n    }\n  }, [])\n\n  const handleLanguageSelect = (langObject: Language) => {\n    setSelectedLanguage(langObject)\n    localStorage.setItem(CACHE_KEY, langObject.code)\n  }\n\n  return (\n    <Suspense fallback={null}>\n      <HashRouter>\n        <AppWrapper>\n          <LanguageContext.Provider\n            value={{\n              selectedLanguage,\n              setSelectedLanguage: handleLanguageSelect,\n              translatedLanguage,\n              setTranslatedLanguage,\n            }}\n          >\n            <TranslationsContext.Provider value={{ translations, setTranslations }}>\n              <Menu>\n                <BodyWrapper>\n                  <Popups />\n                  <Web3ReactManager>\n                    <Switch>\n                      <Route exact strict path=\"/swap\" component={Swap} />\n                      <Route exact strict path=\"/find\" component={PoolFinder} />\n                      <Route exact strict path=\"/pool\" component={Pool} />\n                      <Route exact path=\"/add\" component={AddLiquidity} />\n                      <Route exact path=\"/migrate\" component={Migration} />\n                      <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\" component={RemoveLiquidity} />\n\n                      {/* Redirection: These old routes are still used in the code base */}\n                      <Route exact path=\"/add/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n                      <Route exact path=\"/add/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n                      <Route exact strict path=\"/remove/:tokens\" component={RedirectOldRemoveLiquidityPathStructure} />\n\n                      <Route component={RedirectPathToSwapOnly} />\n                    </Switch>\n                  </Web3ReactManager>\n                </BodyWrapper>\n              </Menu>\n              <VersionBar />\n            </TranslationsContext.Provider>\n          </LanguageContext.Provider>\n        </AppWrapper>\n      </HashRouter>\n    </Suspense>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}