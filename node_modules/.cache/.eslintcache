[{"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/index.tsx":"1","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/i18n.ts":"2","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/style/Global.ts":"3","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/application/updater.ts":"4","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/lists/updater.ts":"5","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/Providers.tsx":"6","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/pages/App.tsx":"7","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/multicall/updater.tsx":"8","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/transactions/updater.tsx":"9","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/application/actions.ts":"10","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/lists/actions.ts":"11","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useDebounce.ts":"12","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useIsWindowVisible.ts":"13","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useFetchListCallback.ts":"14","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useInterval.ts":"15","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/LanguageContext.ts":"16","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/TranslationsContext.ts":"17","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/utils/getLibrary.ts":"18","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useContract.ts":"19","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/utils/chunkArray.ts":"20","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/utils/retry.ts":"21","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/application/hooks.ts":"22","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/multicall/actions.ts":"23","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/transactions/actions.ts":"24","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/ToastListener/index.tsx":"25","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/ThemeContext.tsx":"26","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/constants/localisation/languageCodes.ts":"27","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/pages/AddLiquidity/redirects.tsx":"28","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/pages/RemoveLiquidity/redirects.tsx":"29","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/pages/Swap/redirects.tsx":"30","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/index.ts":"31","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/index.ts":"32","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/constants/index.ts":"33","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/utils/getTokenList.ts":"34","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/utils/resolveENSContentHash.ts":"35","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/constants/abis/erc20.ts":"36","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/pages/AddLiquidity/index.tsx":"37","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/pages/RemoveLiquidity/index.tsx":"38","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/pages/Swap/index.tsx":"39","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/Popups/index.tsx":"40","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/Web3ReactManager/index.tsx":"41","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/pages/Pool/index.tsx":"42","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/pages/PoolFinder/index.tsx":"43","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/pages/Migration/index.tsx":"44","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/Menu/index.tsx":"45","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/utils/theme.ts":"46","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/multicall/reducer.ts":"47","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/lists/reducer.ts":"48","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/transactions/reducer.ts":"49","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/application/reducer.ts":"50","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/utils/index.ts":"51","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/constants/lists.ts":"52","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/utils/uriToHttp.ts":"53","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/utils/parseENSAddress.ts":"54","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/utils/contenthashToUri.ts":"55","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/connectors/index.ts":"56","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/burn/reducer.ts":"57","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/mint/reducer.ts":"58","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/swap/reducer.ts":"59","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/user/reducer.ts":"60","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/global/actions.ts":"61","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/constants/multicall/index.ts":"62","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useToast.ts":"63","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/Menu/config.ts":"64","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/VersionBar/index.tsx":"65","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/pages/AddLiquidity/PoolPriceBar.tsx":"66","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/user/hooks.tsx":"67","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/pages/AppBody.tsx":"68","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/pages/Migration/FAQ.tsx":"69","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/pages/Migration/FirstCard.tsx":"70","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/pages/Migration/SecondCard.tsx":"71","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/pages/Pool/styleds.tsx":"72","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/toasts/index.ts":"73","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/connectors/NetworkConnector.ts":"74","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/burn/actions.ts":"75","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/mint/actions.ts":"76","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/swap/actions.ts":"77","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/user/actions.ts":"78","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useAuth.ts":"79","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useGetLocalProfile.ts":"80","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useTheme.ts":"81","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/utils/useGetCakeBusdLpPrice.ts":"82","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/Tokens.ts":"83","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useI18n.ts":"84","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/utils/currencyId.ts":"85","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/pages/Migration/config.ts":"86","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/Container.tsx":"87","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/actions.ts":"88","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/multicall/hooks.ts":"89","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/lists/hooks.ts":"90","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/Row/index.tsx":"91","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/Column/index.tsx":"92","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/data/Reserves.ts":"93","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/Trades.ts":"94","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/swap/hooks.ts":"95","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/utils/translateTextHelpers.ts":"96","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/wallet/hooks.ts":"97","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/utils/wrappedCurrency.ts":"98","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/PositionCard/index.tsx":"99","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/Shared/index.tsx":"100","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/utils/prices.ts":"101","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useParsedQueryString.ts":"102","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useENS.ts":"103","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/FoldableText/index.tsx":"104","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/Shared/Common.tsx":"105","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/swap/styleds.tsx":"106","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/SearchModal/CurrencySearchModal.tsx":"107","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useENSName.ts":"108","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useENSAddress.ts":"109","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/data/TotalSupply.ts":"110","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/DoubleLogo/index.tsx":"111","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/CurrencyLogo/index.tsx":"112","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/Popups/PopupItem.tsx":"113","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/NavigationTabs/index.tsx":"114","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/Card/index.tsx":"115","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/CardNav/index.tsx":"116","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/PageHeader/index.tsx":"117","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useLast.ts":"118","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/SearchModal/ListSelect.tsx":"119","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/SearchModal/CurrencySearch.tsx":"120","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/utils/isZero.ts":"121","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/utils/maxAmountSpend.ts":"122","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useWrapCallback.ts":"123","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useSwapCallback.ts":"124","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useHttpLocations.ts":"125","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/Loader/index.tsx":"126","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/pancake/CoinLogo.ts":"127","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/Popups/TransactionPopup.tsx":"128","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/Popups/ListUpdatePopup.tsx":"129","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/utils/listVersionLabel.ts":"130","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/PageHeader/SettingsModal.tsx":"131","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/PageHeader/RecentTransactionsModal.tsx":"132","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/SearchModal/sorting.ts":"133","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/SearchModal/filtering.ts":"134","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useToggle.ts":"135","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/Modal/index.tsx":"136","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useApproveCallback.ts":"137","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/SearchModal/styleds.tsx":"138","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/SearchModal/SortButton.tsx":"139","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/SearchModal/CurrencyList.tsx":"140","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/SearchModal/CommonBases.tsx":"141","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useOnClickOutside.tsx":"142","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useENSContentHash.ts":"143","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/QuestionHelper/index.tsx":"144","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/ConnectWalletButton/index.tsx":"145","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/transactions/hooks.tsx":"146","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/Logo/index.tsx":"147","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/data/Allowances.ts":"148","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/PageHeader/AudioSetting.tsx":"149","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/ListLogo/index.tsx":"150","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/PageHeader/TransactionDeadlineSetting.tsx":"151","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/PageHeader/SlippageToleranceSetting.tsx":"152","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/SafeMoonWarningModal/index.tsx":"153","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/ProgressSteps/index.tsx":"154","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/Tooltip/index.tsx":"155","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/Popover/index.tsx":"156","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/burn/hooks.ts":"157","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/utils/useDebouncedChangeHandler.ts":"158","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/pages/AddLiquidity/ConfirmAddModalBottom.tsx":"159","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/swap/confirmPriceImpactWithoutFee.ts":"160","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/swap/TradePrice.tsx":"161","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/swap/AdvancedSwapDetailsDropdown.tsx":"162","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/swap/ConfirmSwapModal.tsx":"163","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/Slider/index.tsx":"164","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/CurrencyInputPanel/index.tsx":"165","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/TransactionConfirmationModal/index.tsx":"166","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/mint/hooks.ts":"167","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/SyrupWarningModal/index.tsx":"168","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/TokenWarningModal/index.tsx":"169","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/AddressInputPanel/index.tsx":"170","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/swap/AdvancedSwapDetails.tsx":"171","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/swap/SwapModalFooter.tsx":"172","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/swap/SwapModalHeader.tsx":"173","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/TransactionConfirmationModal/ConfirmationModalContent.tsx":"174","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/TransactionConfirmationModal/ConfirmationPendingContent.tsx":"175","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/TransactionConfirmationModal/TransactionErrorContent.tsx":"176","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/TransactionConfirmationModal/TransactionSubmittedContent.tsx":"177","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/TransactionConfirmationModal/TransactionConfirmationModal.tsx":"178","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/Pane/index.tsx":"179","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/NumericalInput/index.tsx":"180","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/swap/SwapRoute.tsx":"181","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/swap/FormattedPriceImpact.tsx":"182","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/TransactionConfirmationModal/helpers.tsx":"183"},{"size":1082,"mtime":1626198392000,"results":"184","hashOfConfig":"185"},{"size":509,"mtime":1626198392000,"results":"186","hashOfConfig":"185"},{"size":467,"mtime":1626198392000,"results":"187","hashOfConfig":"185"},{"size":1895,"mtime":1626198392000,"results":"188","hashOfConfig":"185"},{"size":3614,"mtime":1626198392000,"results":"189","hashOfConfig":"185"},{"size":854,"mtime":1626198392000,"results":"190","hashOfConfig":"185"},{"size":4094,"mtime":1626198392000,"results":"191","hashOfConfig":"185"},{"size":7636,"mtime":1626198392000,"results":"192","hashOfConfig":"185"},{"size":3043,"mtime":1626198392000,"results":"193","hashOfConfig":"185"},{"size":844,"mtime":1626198392000,"results":"194","hashOfConfig":"185"},{"size":982,"mtime":1626198392000,"results":"195","hashOfConfig":"185"},{"size":711,"mtime":1626198392000,"results":"196","hashOfConfig":"185"},{"size":786,"mtime":1626198392000,"results":"197","hashOfConfig":"185"},{"size":1892,"mtime":1626198392000,"results":"198","hashOfConfig":"185"},{"size":642,"mtime":1626198392000,"results":"199","hashOfConfig":"185"},{"size":720,"mtime":1626198392000,"results":"200","hashOfConfig":"185"},{"size":420,"mtime":1626198392000,"results":"201","hashOfConfig":"185"},{"size":221,"mtime":1626198392000,"results":"202","hashOfConfig":"185"},{"size":2725,"mtime":1626198392000,"results":"203","hashOfConfig":"185"},{"size":523,"mtime":1626198392000,"results":"204","hashOfConfig":"185"},{"size":1858,"mtime":1626198392000,"results":"205","hashOfConfig":"185"},{"size":1874,"mtime":1626198392000,"results":"206","hashOfConfig":"185"},{"size":1683,"mtime":1626198392000,"results":"207","hashOfConfig":"185"},{"size":930,"mtime":1626198392000,"results":"208","hashOfConfig":"185"},{"size":497,"mtime":1626198392000,"results":"209","hashOfConfig":"185"},{"size":1023,"mtime":1626198392000,"results":"210","hashOfConfig":"185"},{"size":1884,"mtime":1626198392000,"results":"211","hashOfConfig":"185"},{"size":924,"mtime":1626198392000,"results":"212","hashOfConfig":"185"},{"size":562,"mtime":1626198392000,"results":"213","hashOfConfig":"185"},{"size":322,"mtime":1626198392000,"results":"214","hashOfConfig":"185"},{"size":1372,"mtime":1626198392000,"results":"215","hashOfConfig":"185"},{"size":3113,"mtime":1626198392000,"results":"216","hashOfConfig":"185"},{"size":3674,"mtime":1626198392000,"results":"217","hashOfConfig":"185"},{"size":2728,"mtime":1626198392000,"results":"218","hashOfConfig":"185"},{"size":1694,"mtime":1626198392000,"results":"219","hashOfConfig":"185"},{"size":259,"mtime":1626198392000,"results":"220","hashOfConfig":"185"},{"size":17487,"mtime":1626198392000,"results":"221","hashOfConfig":"185"},{"size":27055,"mtime":1626198392000,"results":"222","hashOfConfig":"185"},{"size":19899,"mtime":1626198392000,"results":"223","hashOfConfig":"185"},{"size":1785,"mtime":1626198392000,"results":"224","hashOfConfig":"185"},{"size":2301,"mtime":1626198392000,"results":"225","hashOfConfig":"185"},{"size":5221,"mtime":1626198392000,"results":"226","hashOfConfig":"185"},{"size":6789,"mtime":1626198392000,"results":"227","hashOfConfig":"185"},{"size":2601,"mtime":1626198392000,"results":"228","hashOfConfig":"185"},{"size":1217,"mtime":1626198392000,"results":"229","hashOfConfig":"185"},{"size":456,"mtime":1626198392000,"results":"230","hashOfConfig":"185"},{"size":3940,"mtime":1626198392000,"results":"231","hashOfConfig":"185"},{"size":5332,"mtime":1626198392000,"results":"232","hashOfConfig":"185"},{"size":1901,"mtime":1626198392000,"results":"233","hashOfConfig":"185"},{"size":1714,"mtime":1626198392000,"results":"234","hashOfConfig":"185"},{"size":3764,"mtime":1626198392000,"results":"235","hashOfConfig":"185"},{"size":125,"mtime":1626198392000,"results":"236","hashOfConfig":"185"},{"size":775,"mtime":1626198392000,"results":"237","hashOfConfig":"185"},{"size":360,"mtime":1626198392000,"results":"238","hashOfConfig":"185"},{"size":1418,"mtime":1626198392000,"results":"239","hashOfConfig":"185"},{"size":1917,"mtime":1626198392000,"results":"240","hashOfConfig":"185"},{"size":525,"mtime":1626198392000,"results":"241","hashOfConfig":"185"},{"size":1272,"mtime":1626198392000,"results":"242","hashOfConfig":"185"},{"size":2459,"mtime":1626198392000,"results":"243","hashOfConfig":"185"},{"size":4788,"mtime":1626198392000,"results":"244","hashOfConfig":"185"},{"size":287,"mtime":1626198392000,"results":"245","hashOfConfig":"185"},{"size":335,"mtime":1626198392000,"results":"246","hashOfConfig":"185"},{"size":1270,"mtime":1626198392000,"results":"247","hashOfConfig":"185"},{"size":2941,"mtime":1626198392000,"results":"248","hashOfConfig":"185"},{"size":894,"mtime":1626198392000,"results":"249","hashOfConfig":"185"},{"size":1659,"mtime":1626198392000,"results":"250","hashOfConfig":"185"},{"size":8278,"mtime":1626198392000,"results":"251","hashOfConfig":"185"},{"size":442,"mtime":1626198392000,"results":"252","hashOfConfig":"185"},{"size":1589,"mtime":1626198392000,"results":"253","hashOfConfig":"185"},{"size":3996,"mtime":1626198392000,"results":"254","hashOfConfig":"185"},{"size":3867,"mtime":1626198392000,"results":"255","hashOfConfig":"185"},{"size":586,"mtime":1626198392000,"results":"256","hashOfConfig":"185"},{"size":1148,"mtime":1626198392000,"results":"257","hashOfConfig":"185"},{"size":5667,"mtime":1626198392000,"results":"258","hashOfConfig":"185"},{"size":297,"mtime":1626198392000,"results":"259","hashOfConfig":"185"},{"size":321,"mtime":1626198392000,"results":"260","hashOfConfig":"185"},{"size":670,"mtime":1626198392000,"results":"261","hashOfConfig":"185"},{"size":1429,"mtime":1626198392000,"results":"262","hashOfConfig":"185"},{"size":2071,"mtime":1626198392000,"results":"263","hashOfConfig":"185"},{"size":1028,"mtime":1626198392000,"results":"264","hashOfConfig":"185"},{"size":354,"mtime":1626198392000,"results":"265","hashOfConfig":"185"},{"size":722,"mtime":1626198392000,"results":"266","hashOfConfig":"185"},{"size":4001,"mtime":1626198392000,"results":"267","hashOfConfig":"185"},{"size":846,"mtime":1626198392000,"results":"268","hashOfConfig":"185"},{"size":279,"mtime":1626198392000,"results":"269","hashOfConfig":"185"},{"size":3026,"mtime":1626198392000,"results":"270","hashOfConfig":"185"},{"size":852,"mtime":1626198392000,"results":"271","hashOfConfig":"185"},{"size":46,"mtime":1626198392000,"results":"272","hashOfConfig":"185"},{"size":7869,"mtime":1626198392000,"results":"273","hashOfConfig":"185"},{"size":3635,"mtime":1626198392000,"results":"274","hashOfConfig":"185"},{"size":999,"mtime":1626198392000,"results":"275","hashOfConfig":"185"},{"size":647,"mtime":1626198392000,"results":"276","hashOfConfig":"185"},{"size":2073,"mtime":1626198392000,"results":"277","hashOfConfig":"185"},{"size":4370,"mtime":1626198392000,"results":"278","hashOfConfig":"185"},{"size":9705,"mtime":1626198392000,"results":"279","hashOfConfig":"185"},{"size":1408,"mtime":1626198392000,"results":"280","hashOfConfig":"185"},{"size":4700,"mtime":1626198392000,"results":"281","hashOfConfig":"185"},{"size":847,"mtime":1626198392000,"results":"282","hashOfConfig":"185"},{"size":8315,"mtime":1626198392000,"results":"283","hashOfConfig":"185"},{"size":25,"mtime":1626198392000,"results":"284","hashOfConfig":"185"},{"size":3200,"mtime":1626198392000,"results":"285","hashOfConfig":"185"},{"size":359,"mtime":1626198392000,"results":"286","hashOfConfig":"185"},{"size":765,"mtime":1626198392000,"results":"287","hashOfConfig":"185"},{"size":1604,"mtime":1626198392000,"results":"288","hashOfConfig":"185"},{"size":2290,"mtime":1626198392000,"results":"289","hashOfConfig":"185"},{"size":3225,"mtime":1626198392000,"results":"290","hashOfConfig":"185"},{"size":2358,"mtime":1626198392000,"results":"291","hashOfConfig":"185"},{"size":1596,"mtime":1626198392000,"results":"292","hashOfConfig":"185"},{"size":1394,"mtime":1626198392000,"results":"293","hashOfConfig":"185"},{"size":704,"mtime":1626198392000,"results":"294","hashOfConfig":"185"},{"size":1107,"mtime":1626198392000,"results":"295","hashOfConfig":"185"},{"size":1882,"mtime":1626198392000,"results":"296","hashOfConfig":"185"},{"size":2539,"mtime":1629959862000,"results":"297","hashOfConfig":"185"},{"size":2130,"mtime":1626198392000,"results":"298","hashOfConfig":"185"},{"size":565,"mtime":1626198392000,"results":"299","hashOfConfig":"185"},{"size":793,"mtime":1626198392000,"results":"300","hashOfConfig":"185"},{"size":1763,"mtime":1626198392000,"results":"301","hashOfConfig":"185"},{"size":1024,"mtime":1626198392000,"results":"302","hashOfConfig":"185"},{"size":10794,"mtime":1626198392000,"results":"303","hashOfConfig":"185"},{"size":7685,"mtime":1626198392000,"results":"304","hashOfConfig":"185"},{"size":185,"mtime":1626198392000,"results":"305","hashOfConfig":"185"},{"size":647,"mtime":1626198392000,"results":"306","hashOfConfig":"185"},{"size":3135,"mtime":1626198392000,"results":"307","hashOfConfig":"185"},{"size":8771,"mtime":1626198392000,"results":"308","hashOfConfig":"185"},{"size":717,"mtime":1626198392000,"results":"309","hashOfConfig":"185"},{"size":1094,"mtime":1626198392000,"results":"310","hashOfConfig":"185"},{"size":208,"mtime":1626198392000,"results":"311","hashOfConfig":"185"},{"size":1221,"mtime":1626198392000,"results":"312","hashOfConfig":"185"},{"size":3546,"mtime":1626198392000,"results":"313","hashOfConfig":"185"},{"size":182,"mtime":1626198392000,"results":"314","hashOfConfig":"185"},{"size":872,"mtime":1626198392000,"results":"315","hashOfConfig":"185"},{"size":3071,"mtime":1626198392000,"results":"316","hashOfConfig":"185"},{"size":1679,"mtime":1626198392000,"results":"317","hashOfConfig":"185"},{"size":972,"mtime":1626198392000,"results":"318","hashOfConfig":"185"},{"size":272,"mtime":1626198392000,"results":"319","hashOfConfig":"185"},{"size":3178,"mtime":1626198392000,"results":"320","hashOfConfig":"185"},{"size":3980,"mtime":1626198392000,"results":"321","hashOfConfig":"185"},{"size":1709,"mtime":1626198392000,"results":"322","hashOfConfig":"185"},{"size":715,"mtime":1626198392000,"results":"323","hashOfConfig":"185"},{"size":6253,"mtime":1626198392000,"results":"324","hashOfConfig":"185"},{"size":2335,"mtime":1626198392000,"results":"325","hashOfConfig":"185"},{"size":741,"mtime":1626198392000,"results":"326","hashOfConfig":"185"},{"size":1245,"mtime":1626198392000,"results":"327","hashOfConfig":"185"},{"size":1073,"mtime":1626198392000,"results":"328","hashOfConfig":"185"},{"size":531,"mtime":1626198392000,"results":"329","hashOfConfig":"185"},{"size":2798,"mtime":1626198392000,"results":"330","hashOfConfig":"185"},{"size":781,"mtime":1626198392000,"results":"331","hashOfConfig":"185"},{"size":696,"mtime":1626198392000,"results":"332","hashOfConfig":"185"},{"size":788,"mtime":1626198392000,"results":"333","hashOfConfig":"185"},{"size":574,"mtime":1626198392000,"results":"334","hashOfConfig":"185"},{"size":2035,"mtime":1626198392000,"results":"335","hashOfConfig":"185"},{"size":3776,"mtime":1626198392000,"results":"336","hashOfConfig":"185"},{"size":2626,"mtime":1626198392000,"results":"337","hashOfConfig":"185"},{"size":2449,"mtime":1626198392000,"results":"338","hashOfConfig":"185"},{"size":902,"mtime":1626198392000,"results":"339","hashOfConfig":"185"},{"size":3100,"mtime":1626198392000,"results":"340","hashOfConfig":"185"},{"size":5293,"mtime":1626198392000,"results":"341","hashOfConfig":"185"},{"size":1143,"mtime":1626198392000,"results":"342","hashOfConfig":"185"},{"size":2223,"mtime":1626198392000,"results":"343","hashOfConfig":"185"},{"size":991,"mtime":1626198392000,"results":"344","hashOfConfig":"185"},{"size":1156,"mtime":1626198392000,"results":"345","hashOfConfig":"185"},{"size":960,"mtime":1626198392000,"results":"346","hashOfConfig":"185"},{"size":3218,"mtime":1626198392000,"results":"347","hashOfConfig":"185"},{"size":3207,"mtime":1626198392000,"results":"348","hashOfConfig":"185"},{"size":6295,"mtime":1626198392000,"results":"349","hashOfConfig":"185"},{"size":452,"mtime":1626198392000,"results":"350","hashOfConfig":"185"},{"size":7128,"mtime":1626198392000,"results":"351","hashOfConfig":"185"},{"size":2724,"mtime":1626198392000,"results":"352","hashOfConfig":"185"},{"size":5368,"mtime":1626198392000,"results":"353","hashOfConfig":"185"},{"size":3793,"mtime":1626198392000,"results":"354","hashOfConfig":"185"},{"size":4090,"mtime":1626198392000,"results":"355","hashOfConfig":"185"},{"size":4585,"mtime":1626198392000,"results":"356","hashOfConfig":"185"},{"size":4750,"mtime":1626198392000,"results":"357","hashOfConfig":"185"},{"size":656,"mtime":1626198392000,"results":"358","hashOfConfig":"185"},{"size":1247,"mtime":1626198392000,"results":"359","hashOfConfig":"185"},{"size":1157,"mtime":1626198392000,"results":"360","hashOfConfig":"185"},{"size":1312,"mtime":1626198392000,"results":"361","hashOfConfig":"185"},{"size":1079,"mtime":1626198392000,"results":"362","hashOfConfig":"185"},{"size":191,"mtime":1626198392000,"results":"363","hashOfConfig":"185"},{"size":2134,"mtime":1626198392000,"results":"364","hashOfConfig":"185"},{"size":1266,"mtime":1626198392000,"results":"365","hashOfConfig":"185"},{"size":574,"mtime":1626198392000,"results":"366","hashOfConfig":"185"},{"size":1146,"mtime":1626198392000,"results":"367","hashOfConfig":"185"},{"filePath":"368","messages":"369","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370"},"lxdic1",{"filePath":"371","messages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"373","messages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"377","messages":"378","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379"},{"filePath":"380","messages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"384","messages":"385","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386"},{"filePath":"387","messages":"388","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389"},{"filePath":"390","messages":"391","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392"},{"filePath":"393","messages":"394","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395"},{"filePath":"396","messages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"398","messages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"400","messages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"404","messages":"405","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406"},{"filePath":"407","messages":"408","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409"},{"filePath":"410","messages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"412","messages":"413","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"414","messages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"416","messages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"418","messages":"419","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420"},{"filePath":"421","messages":"422","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423"},{"filePath":"424","messages":"425","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426"},{"filePath":"427","messages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"429","messages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"431","messages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"433","messages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"435","messages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"437","messages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"439","messages":"440","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441"},{"filePath":"442","messages":"443","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444"},{"filePath":"445","messages":"446","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447"},{"filePath":"448","messages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"450","messages":"451","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"452","messages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"454","messages":"455","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456"},{"filePath":"457","messages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"459","messages":"460","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461"},{"filePath":"462","messages":"463","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"464","messages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"466","messages":"467","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468"},{"filePath":"469","messages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"471","messages":"472","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"473","messages":"474","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475"},{"filePath":"476","messages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"478","messages":"479","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480"},{"filePath":"481","messages":"482","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"483"},{"filePath":"484","messages":"485","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486"},{"filePath":"487","messages":"488","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489"},{"filePath":"490","messages":"491","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492"},{"filePath":"493","messages":"494","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"495","messages":"496","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"497","messages":"498","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"499","messages":"500","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501"},{"filePath":"502","messages":"503","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504"},{"filePath":"505","messages":"506","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507"},{"filePath":"508","messages":"509","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"510"},{"filePath":"511","messages":"512","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"513"},{"filePath":"514","messages":"515","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"516"},{"filePath":"517","messages":"518","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"519","messages":"520","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"521"},{"filePath":"522","messages":"523","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"524","messages":"525","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"526","messages":"527","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"528","messages":"529","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"530"},{"filePath":"531","messages":"532","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"533"},{"filePath":"534","messages":"535","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"536","messages":"537","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"538","messages":"539","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"540","messages":"541","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"542"},{"filePath":"543","messages":"544","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"545","messages":"546","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"547","messages":"548","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549"},{"filePath":"550","messages":"551","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"552","messages":"553","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"554","messages":"555","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"556"},{"filePath":"557","messages":"558","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"559"},{"filePath":"560","messages":"561","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"562"},{"filePath":"563","messages":"564","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"565","messages":"566","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"567","messages":"568","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"569","messages":"570","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"571"},{"filePath":"572","messages":"573","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"574","messages":"575","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"576","messages":"577","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"578","messages":"579","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"580","messages":"581","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"582","messages":"583","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"584"},{"filePath":"585","messages":"586","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"587"},{"filePath":"588","messages":"589","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"590"},{"filePath":"591","messages":"592","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"593"},{"filePath":"594","messages":"595","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"596","messages":"597","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"598"},{"filePath":"599","messages":"600","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"601"},{"filePath":"602","messages":"603","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"604"},{"filePath":"605","messages":"606","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"607"},{"filePath":"608","messages":"609","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"610","messages":"611","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"612"},{"filePath":"613","messages":"614","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"615","messages":"616","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"617"},{"filePath":"618","messages":"619","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"620","messages":"621","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"622","messages":"623","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"624"},{"filePath":"625","messages":"626","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"627"},{"filePath":"628","messages":"629","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"630"},{"filePath":"631","messages":"632","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"633"},{"filePath":"634","messages":"635","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"636","messages":"637","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"638","messages":"639","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"640","messages":"641","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"642"},{"filePath":"643","messages":"644","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"645"},{"filePath":"646","messages":"647","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"648"},{"filePath":"649","messages":"650","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"651","messages":"652","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"653","messages":"654","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"655","messages":"656","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"657"},{"filePath":"658","messages":"659","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"660"},{"filePath":"661","messages":"662","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"663"},{"filePath":"664","messages":"665","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"666"},{"filePath":"667","messages":"668","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"669","messages":"670","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"671","messages":"672","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"673","messages":"674","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"675"},{"filePath":"676","messages":"677","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"678","messages":"679","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"680"},{"filePath":"681","messages":"682","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"683","messages":"684","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"685"},{"filePath":"686","messages":"687","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"688"},{"filePath":"689","messages":"690","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"691","messages":"692","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"693"},{"filePath":"694","messages":"695","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"696"},{"filePath":"697","messages":"698","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"699","messages":"700","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"701","messages":"702","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"703","messages":"704","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"705"},{"filePath":"706","messages":"707","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"708","messages":"709","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"710","messages":"711","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"712"},{"filePath":"713","messages":"714","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"715"},{"filePath":"716","messages":"717","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"718"},{"filePath":"719","messages":"720","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"721"},{"filePath":"722","messages":"723","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"724","messages":"725","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"726","messages":"727","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"728","messages":"729","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"730"},{"filePath":"731","messages":"732","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"733"},{"filePath":"734","messages":"735","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"736","messages":"737","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"738","messages":"739","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"740"},{"filePath":"741","messages":"742","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"743","messages":"744","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"745","messages":"746","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"747","messages":"748","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"749"},{"filePath":"750","messages":"751","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"752","messages":"753","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"754"},{"filePath":"755","messages":"756","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"757"},{"filePath":"758","messages":"759","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"760","messages":"761","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"762"},{"filePath":"763","messages":"764","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"765","messages":"766","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"767"},{"filePath":"768","messages":"769","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"770","messages":"771","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"772"},{"filePath":"773","messages":"774","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"775"},{"filePath":"776","messages":"777","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"778"},{"filePath":"779","messages":"780","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"781","messages":"782","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"783"},{"filePath":"784","messages":"785","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"786"},{"filePath":"787","messages":"788","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"789"},{"filePath":"790","messages":"791","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"792"},{"filePath":"793","messages":"794","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"795","messages":"796","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"797"},{"filePath":"798","messages":"799","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"800"},{"filePath":"801","messages":"802","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"803"},{"filePath":"804","messages":"805","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"806","messages":"807","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"808","messages":"809","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"810"},{"filePath":"811","messages":"812","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"813"},{"filePath":"814","messages":"815","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"816","messages":"817","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"818"},{"filePath":"819","messages":"820","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"821","messages":"822","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"823","messages":"824","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"825"},"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/index.tsx",["826"],"import React, { StrictMode } from 'react'\nimport ReactDOM from 'react-dom'\nimport { ResetCSS } from '@nguyenphu27/uikit'\nimport GlobalStyle from './style/Global'\nimport App from './pages/App'\nimport ApplicationUpdater from './state/application/updater'\nimport ListsUpdater from './state/lists/updater'\nimport MulticallUpdater from './state/multicall/updater'\nimport TransactionUpdater from './state/transactions/updater'\nimport ToastListener from './components/ToastListener'\nimport Providers from './Providers'\nimport 'inter-ui'\nimport './i18n'\n\nif ('ethereum' in window) {\n  (window.ethereum as any).autoRefreshOnNetworkChange = false\n}\n\nwindow.addEventListener('error', () => {\n   localStorage?.removeItem('redux_localstorage_simple_lists')\n})\n\nReactDOM.render(\n  <StrictMode>\n    <Providers>\n      <>\n        <ListsUpdater />\n        <ApplicationUpdater />\n        <TransactionUpdater />\n        <MulticallUpdater />\n        <ToastListener />\n      </>\n      <ResetCSS />\n      <GlobalStyle />\n      <App />\n    </Providers>\n  </StrictMode>,\n  document.getElementById('root')\n)\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/i18n.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/style/Global.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/application/updater.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/lists/updater.ts",["827"],"import { getVersionUpgrade, minVersionBump, VersionUpgrade } from '@uniswap/token-lists'\nimport { useCallback, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useFetchListCallback } from '../../hooks/useFetchListCallback'\nimport useInterval from '../../hooks/useInterval'\nimport useIsWindowVisible from '../../hooks/useIsWindowVisible'\nimport { addPopup } from '../application/actions'\nimport { AppDispatch, AppState } from '../index'\nimport { acceptListUpdate } from './actions'\n\nexport default function Updater(): null {\n  const { library } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const lists = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n\n  const isWindowVisible = useIsWindowVisible()\n\n  const fetchList = useFetchListCallback()\n\n  const fetchAllListsCallback = useCallback(() => {\n    if (!isWindowVisible) return\n    Object.keys(lists).forEach((url) =>\n      fetchList(url).catch((error) => console.error('interval list fetching error', error))\n    )\n  }, [fetchList, isWindowVisible, lists])\n\n  // fetch all lists every 10 minutes, but only after we initialize library\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\n\n  // whenever a list is not loaded and not loading, try again to load it\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n\n      if (!list.current && !list.loadingRequestId && !list.error) {\n        fetchList(listUrl).catch((error) => console.error('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // automatically update lists if versions are minor/patch\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (list.current && list.pendingUpdate) {\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\n        switch (bump) {\n          case VersionUpgrade.NONE:\n            throw new Error('unexpected no version bump')\n          case VersionUpgrade.PATCH:\n          case VersionUpgrade.MINOR:\n            const min = minVersionBump(list.current.tokens, list.pendingUpdate.tokens)\n            // automatically update minor/patch as long as bump matches the min update\n            if (bump >= min) {\n              dispatch(acceptListUpdate(listUrl))\n              dispatch(\n                addPopup({\n                  key: listUrl,\n                  content: {\n                    listUpdate: {\n                      listUrl,\n                      oldList: list.current,\n                      newList: list.pendingUpdate,\n                      auto: true,\n                    },\n                  },\n                })\n              )\n            } else {\n              console.error(\n                `List at url ${listUrl} could not automatically update because the version bump was only PATCH/MINOR while the update had breaking changes and should have been MAJOR`\n              )\n            }\n            break\n\n          case VersionUpgrade.MAJOR:\n            dispatch(\n              addPopup({\n                key: listUrl,\n                content: {\n                  listUpdate: {\n                    listUrl,\n                    auto: false,\n                    oldList: list.current,\n                    newList: list.pendingUpdate,\n                  },\n                },\n                removeAfterMs: null,\n              })\n            )\n        }\n      }\n    })\n  }, [dispatch, lists])\n\n  return null\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/Providers.tsx",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/pages/App.tsx",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/multicall/updater.tsx",["828"],"import { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useMulticallContract } from '../../hooks/useContract'\nimport useDebounce from '../../hooks/useDebounce'\nimport chunkArray from '../../utils/chunkArray'\nimport { CancelledError, retry, RetryableError } from '../../utils/retry'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  Call,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  parseCallKey,\n  updateMulticallResults,\n} from './actions'\n\n// chunk calls so we do not exceed the gas limit\nconst CALL_CHUNK_SIZE = 500\n\n/**\n * Fetches a chunk of calls, enforcing a minimum block number constraint\n * @param multicallContract multicall contract to fetch against\n * @param chunk chunk of calls to make\n * @param minBlockNumber minimum block number of the result set\n */\nasync function fetchChunk(\n  multicallContract: Contract,\n  chunk: Call[],\n  minBlockNumber: number\n): Promise<{ results: string[]; blockNumber: number }> {\n  let resultsBlockNumber\n  let returnData\n  try {\n    [resultsBlockNumber, returnData] = await multicallContract.aggregate(\n      chunk.map((obj) => [obj.address, obj.callData])\n    )\n  } catch (error) {\n    console.info('Failed to fetch chunk inside retry', error)\n    throw error\n  }\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\n    throw new RetryableError('Fetched for old block number')\n  }\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() }\n}\n\n/**\n * From the current all listeners state, return each call key mapped to the\n * minimum number of blocks per fetch. This is how often each key must be fetched.\n * @param allListeners the all listeners state\n * @param chainId the current chain id\n */\nexport function activeListeningKeys(\n  allListeners: AppState['multicall']['callListeners'],\n  chainId?: number\n): { [callKey: string]: number } {\n  if (!allListeners || !chainId) return {}\n  const listeners = allListeners[chainId]\n  if (!listeners) return {}\n\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\n    const keyListeners = listeners[callKey]\n\n    memo[callKey] = Object.keys(keyListeners)\n      .filter((key) => {\n        const blocksPerFetch = parseInt(key)\n        if (blocksPerFetch <= 0) return false\n        return keyListeners[blocksPerFetch] > 0\n      })\n      .reduce((previousMin, current) => {\n        return Math.min(previousMin, parseInt(current))\n      }, Infinity)\n    return memo\n  }, {})\n}\n\n/**\n * Return the keys that need to be refetched\n * @param callResults current call result state\n * @param listeningKeys each call key mapped to how old the data can be in blocks\n * @param chainId the current chain id\n * @param latestBlockNumber the latest block number\n */\nexport function outdatedListeningKeys(\n  callResults: AppState['multicall']['callResults'],\n  listeningKeys: { [callKey: string]: number },\n  chainId: number | undefined,\n  latestBlockNumber: number | undefined\n): string[] {\n  if (!chainId || !latestBlockNumber) return []\n  const results = callResults[chainId]\n  // no results at all, load everything\n  if (!results) return Object.keys(listeningKeys)\n\n  return Object.keys(listeningKeys).filter((callKey) => {\n    const blocksPerFetch = listeningKeys[callKey]\n\n    const data = callResults[chainId][callKey]\n    // no data, must fetch\n    if (!data) return true\n\n    const minDataBlockNumber = latestBlockNumber - (blocksPerFetch - 1)\n\n    // already fetching it for a recent enough block, don't refetch it\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false\n\n    // if data is older than minDataBlockNumber, fetch it\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber\n  })\n}\n\nexport default function Updater(): null {\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['multicall']>((s) => s.multicall)\n  // wait for listeners to settle before triggering updates\n  const debouncedListeners = useDebounce(state.callListeners, 100)\n  const latestBlockNumber = useBlockNumber()\n  const { chainId } = useActiveWeb3React()\n  const multicallContract = useMulticallContract()\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>()\n\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\n    return activeListeningKeys(debouncedListeners, chainId)\n  }, [debouncedListeners, chainId])\n\n  const unserializedOutdatedCallKeys = useMemo(() => {\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, latestBlockNumber)\n  }, [chainId, state.callResults, listeningKeys, latestBlockNumber])\n\n  const serializedOutdatedCallKeys = useMemo(() => JSON.stringify(unserializedOutdatedCallKeys.sort()), [\n    unserializedOutdatedCallKeys,\n  ])\n\n  useEffect(() => {\n    if (!latestBlockNumber || !chainId || !multicallContract) return\n\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys)\n    if (outdatedCallKeys.length === 0) return\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key))\n    // .filter(item => item.address.toLowerCase() !== '0xBCfCcbde45cE874adCB698cC183deBcF17952812'.toLowerCase())\n\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE)\n\n    if (cancellations.current?.blockNumber !== latestBlockNumber) {\n      cancellations.current?.cancellations?.forEach((c) => c())\n    }\n\n    dispatch(\n      fetchingMulticallResults({\n        calls,\n        chainId,\n        fetchingBlockNumber: latestBlockNumber,\n      })\n    )\n\n    cancellations.current = {\n      blockNumber: latestBlockNumber,\n      cancellations: chunkedCalls.map((chunk, index) => {\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, latestBlockNumber), {\n          n: Infinity,\n          minWait: 2500,\n          maxWait: 3500,\n        })\n        promise\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\n            cancellations.current = { cancellations: [], blockNumber: latestBlockNumber }\n\n            // accumulates the length of all previous indices\n            const firstCallKeyIndex = chunkedCalls.slice(0, index).reduce<number>((memo, curr) => memo + curr.length, 0)\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length\n\n            dispatch(\n              updateMulticallResults({\n                chainId,\n                results: outdatedCallKeys\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\n                  .reduce<{ [callKey: string]: string | null }>((memo, callKey, i) => {\n                    memo[callKey] = returnData[i] ?? null\n                    return memo\n                  }, {}),\n                blockNumber: fetchBlockNumber,\n              })\n            )\n          })\n          .catch((error: any) => {\n            if (error instanceof CancelledError) {\n              console.error('Cancelled fetch for blockNumber', latestBlockNumber)\n              return\n            }\n            console.error('Failed to fetch multicall chunk', chunk, chainId, error)\n            dispatch(\n              errorFetchingMulticallResults({\n                calls: chunk,\n                chainId,\n                fetchingBlockNumber: latestBlockNumber,\n              })\n            )\n          })\n        return cancel\n      }),\n    }\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, latestBlockNumber])\n\n  return null\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/transactions/updater.tsx",["829"],"import { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useAddPopup, useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport { checkedTransaction, finalizeTransaction } from './actions'\n\nexport function shouldCheck(\n  lastBlockNumber: number,\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number }\n): boolean {\n  if (tx.receipt) return false\n  if (!tx.lastCheckedBlockNumber) return true\n  const blocksSinceCheck = lastBlockNumber - tx.lastCheckedBlockNumber\n  if (blocksSinceCheck < 1) return false\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9\n  }\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2\n  }\n  // otherwise every block\n  return true\n}\n\nexport default function Updater(): null {\n  const { chainId, library } = useActiveWeb3React()\n\n  const lastBlockNumber = useBlockNumber()\n\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const transactions = chainId ? state[chainId] ?? {} : {}\n\n  // show popup on confirm\n  const addPopup = useAddPopup()\n\n  useEffect(() => {\n    if (!chainId || !library || !lastBlockNumber) return\n\n    Object.keys(transactions)\n      .filter((hash) => shouldCheck(lastBlockNumber, transactions[hash]))\n      .forEach((hash) => {\n        library\n          .getTransactionReceipt(hash)\n          .then((receipt) => {\n            if (receipt) {\n              dispatch(\n                finalizeTransaction({\n                  chainId,\n                  hash,\n                  receipt: {\n                    blockHash: receipt.blockHash,\n                    blockNumber: receipt.blockNumber,\n                    contractAddress: receipt.contractAddress,\n                    from: receipt.from,\n                    status: receipt.status,\n                    to: receipt.to,\n                    transactionHash: receipt.transactionHash,\n                    transactionIndex: receipt.transactionIndex,\n                  },\n                })\n              )\n\n              addPopup(\n                {\n                  txn: {\n                    hash,\n                    success: receipt.status === 1,\n                    summary: transactions[hash]?.summary,\n                  },\n                },\n                hash\n              )\n            } else {\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: lastBlockNumber }))\n            }\n          })\n          .catch((error) => {\n            console.error(`failed to check transaction hash: ${hash}`, error)\n          })\n      })\n  }, [chainId, library, transactions, lastBlockNumber, dispatch, addPopup])\n\n  return null\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/application/actions.ts",["830"],"import { createAction } from '@reduxjs/toolkit'\nimport { TokenList } from '@uniswap/token-lists'\n\nexport type PopupContent =\n  | {\n      txn: {\n        hash: string\n        success: boolean\n        summary?: string\n      }\n    }\n  | {\n      listUpdate: {\n        listUrl: string\n        oldList: TokenList\n        newList: TokenList\n        auto: boolean\n      }\n    }\n\nexport const updateBlockNumber = createAction<{ chainId: number; blockNumber: number }>('app/updateBlockNumber')\nexport const toggleWalletModal = createAction<void>('app/toggleWalletModal')\nexport const toggleSettingsMenu = createAction<void>('app/toggleSettingsMenu')\nexport const addPopup = createAction<{ key?: string; removeAfterMs?: number | null; content: PopupContent }>(\n  'app/addPopup'\n)\nexport const removePopup = createAction<{ key: string }>('app/removePopup')\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/lists/actions.ts",["831"],"import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\nimport { TokenList, Version } from '@uniswap/token-lists'\n\nexport const fetchTokenList: Readonly<{\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\n}> = {\n  pending: createAction('lists/fetchTokenList/pending'),\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\n  rejected: createAction('lists/fetchTokenList/rejected')\n}\n\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\nexport const addList = createAction<string>('lists/addList')\nexport const removeList = createAction<string>('lists/removeList')\nexport const selectList = createAction<string>('lists/selectList')\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useDebounce.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useIsWindowVisible.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useFetchListCallback.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useInterval.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/LanguageContext.ts",["832"],"import React, { createContext } from 'react'\nimport { Language } from '@nguyenphu27/uikit'\n\nexport interface LanguageObject {\n  code: string\n  language: string\n}\ninterface LanguageState {\n  selectedLanguage: LanguageObject\n  setSelectedLanguage: (langObject: Language) => void\n  translatedLanguage: LanguageObject\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LanguageObject>>\n}\n\nconst defaultLanguageState: LanguageState = {\n  selectedLanguage: { code: '', language: '' },\n  setSelectedLanguage: (): void => undefined,\n  translatedLanguage: { code: '', language: '' },\n  setTranslatedLanguage: (): void => undefined,\n}\n\nexport const LanguageContext = createContext(defaultLanguageState as LanguageState)\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/TranslationsContext.ts",["833"],"import React, { createContext } from 'react'\n\ninterface TranslationState {\n  translations: Array<any>\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\n}\n\nconst defaultTranslationState: TranslationState = {\n  translations: [],\n  setTranslations: (): void => undefined,\n}\n\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\n\nexport default TranslationsContext\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/utils/getLibrary.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useContract.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/utils/chunkArray.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/utils/retry.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/application/hooks.ts",["834"],"import { useCallback, useMemo } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useActiveWeb3React } from '../../hooks'\nimport { addPopup, PopupContent, removePopup, toggleWalletModal, toggleSettingsMenu } from './actions'\nimport { AppState } from '../index'\n\nexport function useBlockNumber(): number | undefined {\n  const { chainId } = useActiveWeb3React()\n\n  return useSelector((state: AppState) => state.application.blockNumber[chainId ?? -1])\n}\n\nexport function useWalletModalOpen(): boolean {\n  return useSelector((state: AppState) => state.application.walletModalOpen)\n}\n\nexport function useWalletModalToggle(): () => void {\n  const dispatch = useDispatch()\n  return useCallback(() => dispatch(toggleWalletModal()), [dispatch])\n}\n\nexport function useSettingsMenuOpen(): boolean {\n  return useSelector((state: AppState) => state.application.settingsMenuOpen)\n}\n\nexport function useToggleSettingsMenu(): () => void {\n  const dispatch = useDispatch()\n  return useCallback(() => dispatch(toggleSettingsMenu()), [dispatch])\n}\n\n// returns a function that allows adding a popup\nexport function useAddPopup(): (content: PopupContent, key?: string) => void {\n  const dispatch = useDispatch()\n\n  return useCallback(\n    (content: PopupContent, key?: string) => {\n      dispatch(addPopup({ content, key }))\n    },\n    [dispatch]\n  )\n}\n\n// returns a function that allows removing a popup via its key\nexport function useRemovePopup(): (key: string) => void {\n  const dispatch = useDispatch()\n  return useCallback(\n    (key: string) => {\n      dispatch(removePopup({ key }))\n    },\n    [dispatch]\n  )\n}\n\n// get the list of active popups\nexport function useActivePopups(): AppState['application']['popupList'] {\n  const list = useSelector((state: AppState) => state.application.popupList)\n  return useMemo(() => list.filter(item => item.show), [list])\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/multicall/actions.ts",["835"],"import { createAction } from '@reduxjs/toolkit'\n\nexport interface Call {\n  address: string\n  callData: string\n}\n\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\nexport function toCallKey(call: Call): string {\n  if (!ADDRESS_REGEX.test(call.address)) {\n    throw new Error(`Invalid address: ${call.address}`)\n  }\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\n    throw new Error(`Invalid hex: ${call.callData}`)\n  }\n  return `${call.address}-${call.callData}`\n}\n\nexport function parseCallKey(callKey: string): Call {\n  const pcs = callKey.split('-')\n  if (pcs.length !== 2) {\n    throw new Error(`Invalid call key: ${callKey}`)\n  }\n  return {\n    address: pcs[0],\n    callData: pcs[1]\n  }\n}\n\nexport interface ListenerOptions {\n  // how often this data should be fetched, by default 1\n  readonly blocksPerFetch?: number\n}\n\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/addMulticallListeners'\n)\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/removeMulticallListeners'\n)\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\n  'multicall/fetchingMulticallResults'\n)\nexport const errorFetchingMulticallResults = createAction<{\n  chainId: number\n  calls: Call[]\n  fetchingBlockNumber: number\n}>('multicall/errorFetchingMulticallResults')\nexport const updateMulticallResults = createAction<{\n  chainId: number\n  blockNumber: number\n  results: {\n    [callKey: string]: string | null\n  }\n}>('multicall/updateMulticallResults')\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/transactions/actions.ts",["836"],"import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@nguyenphu27/sdk'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/ToastListener/index.tsx",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/ThemeContext.tsx",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/constants/localisation/languageCodes.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/pages/AddLiquidity/redirects.tsx",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/pages/RemoveLiquidity/redirects.tsx",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/pages/Swap/redirects.tsx",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/index.ts",["837"],"import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { save, load } from 'redux-localstorage-simple'\n\nimport application from './application/reducer'\nimport { updateVersion } from './global/actions'\nimport user from './user/reducer'\nimport transactions from './transactions/reducer'\nimport swap from './swap/reducer'\nimport mint from './mint/reducer'\nimport lists from './lists/reducer'\nimport burn from './burn/reducer'\nimport multicall from './multicall/reducer'\nimport toasts from './toasts'\nimport { getThemeCache } from '../utils/theme'\n\ntype MergedState = {\n  user: {\n    [key: string]: any\n  }\n  transactions: {\n    [key: string]: any\n  }\n}\nconst PERSISTED_KEYS: string[] = ['user', 'transactions']\nconst loadedState = load({ states: PERSISTED_KEYS }) as MergedState\nif (loadedState.user) {\n  loadedState.user.userDarkMode = getThemeCache()\n}\n\n// @ts-ignore\nconst store = configureStore({\n  reducer: {\n    application,\n    user,\n    transactions,\n    swap,\n    mint,\n    burn,\n    multicall,\n    lists,\n    toasts\n  },\n  // @ts-ignore\n  middleware: [...getDefaultMiddleware({ thunk: false }), save({ states: PERSISTED_KEYS })],\n  // @ts-ignore\n  preloadedState: loadedState,\n})\n\nstore.dispatch(updateVersion())\n\nexport default store\n\nexport type AppState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/index.ts",["838"],"import { Web3Provider } from '@ethersproject/providers'\nimport { ChainId } from '@nguyenphu27/sdk'\nimport { connectorLocalStorageKey } from '@nguyenphu27/uikit'\nimport { useWeb3React as useWeb3ReactCore } from '@web3-react/core'\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\nimport { useEffect, useState } from 'react'\nimport { isMobile } from 'react-device-detect'\nimport { injected } from '../connectors'\nimport { NetworkContextName } from '../constants'\n\nexport function useActiveWeb3React(): Web3ReactContextInterface<Web3Provider> & { chainId?: ChainId } {\n  const context = useWeb3ReactCore<Web3Provider>()\n  const contextNetwork = useWeb3ReactCore<Web3Provider>(NetworkContextName)\n  return context.active ? context : contextNetwork\n}\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3ReactCore() // specifically using useWeb3ReactCore because of what this hook does\n  const [tried, setTried] = useState(false)\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized) => {\n      const hasSignedIn = window.localStorage.getItem(connectorLocalStorageKey)\n      if (isAuthorized && hasSignedIn) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else if (isMobile && window.ethereum && hasSignedIn) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        setTried(true)\n      }\n    })\n  }, [activate]) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (active) {\n      setTried(true)\n    }\n  }, [active])\n\n  return tried\n}\n\n/**\n * Use for network and injected - logs user in\n * and out after checking what network theyre on\n */\nexport function useInactiveListener(suppress = false) {\n  const { active, error, activate } = useWeb3ReactCore() // specifically using useWeb3React because of what this hook does\n\n  useEffect(() => {\n    const { ethereum } = window\n\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleChainChanged = () => {\n        // eat errors\n        activate(injected, undefined, true).catch((e) => {\n          console.error('Failed to activate after chain changed', e)\n        })\n      }\n\n      const handleAccountsChanged = (accounts: string[]) => {\n        if (accounts.length > 0) {\n          // eat errors\n          activate(injected, undefined, true).catch((e) => {\n            console.error('Failed to activate after accounts changed', e)\n          })\n        }\n      }\n\n      ethereum.on('chainChanged', handleChainChanged)\n      ethereum.on('accountsChanged', handleAccountsChanged)\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('chainChanged', handleChainChanged)\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\n        }\n      }\n    }\n    return undefined\n  }, [active, error, suppress, activate])\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/constants/index.ts",["839"],"import { ChainId, JSBI, Percent, Token, WETH } from '@nguyenphu27/sdk'\n\nexport const ROUTER_ADDRESS = '0xDE2Db97D54a3c3B008a097B2260633E6cA7DB1AF'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\nexport const CAKE = new Token(\n  ChainId.MAINNET,\n  '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n  18,\n  'CAKE',\n  'PancakeSwap Token'\n)\nexport const WBNB = new Token(ChainId.MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB')\nexport const DAI = new Token(ChainId.MAINNET, '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3', 18, 'DAI', 'Dai Stablecoin')\nexport const BUSD = new Token(ChainId.MAINNET, '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56', 18, 'BUSD', 'Binance USD')\nexport const BTCB = new Token(ChainId.MAINNET, '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c', 18, 'BTCB', 'Binance BTC')\nexport const USDT = new Token(ChainId.MAINNET, '0x55d398326f99059fF775485246999027B3197955', 18, 'USDT', 'Tether USD')\nexport const UST = new Token(\n  ChainId.MAINNET,\n  '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n  18,\n  'UST',\n  'Wrapped UST Token'\n)\nexport const ETH = new Token(\n  ChainId.MAINNET,\n  '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n  18,\n  'ETH',\n  'Binance-Peg Ethereum Token'\n)\n\nconst WETH_ONLY: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET]],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET]],\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  ...WETH_ONLY,\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, BUSD, BTCB, USDT, UST, ETH],\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  ...WETH_ONLY,\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, BUSD, USDT],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  ...WETH_ONLY,\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, BUSD, BTCB, USDT],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [CAKE, WBNB],\n    [BUSD, USDT],\n    [DAI, USDT],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 80\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much ETH so they end up with <.01\nexport const MIN_ETH: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 ETH\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/utils/getTokenList.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/utils/resolveENSContentHash.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/constants/abis/erc20.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/pages/AddLiquidity/index.tsx",["840"],"import React, { useCallback, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@nguyenphu27/sdk'\nimport { Button, CardBody, AddIcon, Text as UIKitText } from '@nguyenphu27/uikit'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { LightCard } from 'components/Card'\nimport { AutoColumn, ColumnCenter } from 'components/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from 'components/TransactionConfirmationModal'\nimport CardNav from 'components/CardNav'\nimport CurrencyInputPanel from 'components/CurrencyInputPanel'\nimport DoubleCurrencyLogo from 'components/DoubleLogo'\nimport { AddRemoveTabs } from 'components/NavigationTabs'\nimport { MinimalPositionCard } from 'components/PositionCard'\nimport Row, { RowBetween, RowFlat } from 'components/Row'\n\nimport { PairState } from 'data/Reserves'\nimport { useActiveWeb3React } from 'hooks'\nimport { useCurrency } from 'hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from 'hooks/useApproveCallback'\nimport { Field } from 'state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from 'state/mint/hooks'\n\nimport { useTransactionAdder } from 'state/transactions/hooks'\nimport { useIsExpertMode, useUserDeadline, useUserSlippageTolerance } from 'state/user/hooks'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from 'utils'\nimport { maxAmountSpend } from 'utils/maxAmountSpend'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { currencyId } from 'utils/currencyId'\nimport Pane from 'components/Pane'\nimport Container from 'components/Container'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport useI18n from 'hooks/useI18n'\nimport AppBody from '../AppBody'\nimport { Dots, Wrapper } from '../Pool/styleds'\nimport { ConfirmAddModalBottom } from './ConfirmAddModalBottom'\nimport { PoolPriceBar } from './PoolPriceBar'\nimport { ROUTER_ADDRESS } from '../../constants'\n\nexport default function AddLiquidity({\n  match: {\n    params: { currencyIdA, currencyIdB },\n  },\n  history,\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string }>) {\n  const { account, chainId, library } = useActiveWeb3React()\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n  const TranslateString = useI18n()\n\n  const oneCurrencyIsWBNB = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId])))\n  )\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n  const isValid = !error\n\n  // modal and loading\n  const [showConfirm, setShowConfirm] = useState<boolean>(false)\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const [deadline] = useUserDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {}\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {}\n  )\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    const deadlineFromNow = Math.ceil(Date.now() / 1000) + deadline\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsBNB = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsBNB ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsBNB ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsBNB ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsBNB ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadlineFromNow,\n      ]\n      value = BigNumber.from((tokenBIsBNB ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadlineFromNow,\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    // const aa = await estimate(...args, value ? { value } : {})\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        })\n      )\n      .catch((e) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (e?.code !== 4001) {\n          console.error(e)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <AutoColumn gap=\"20px\">\n        <LightCard mt=\"20px\" borderRadius=\"20px\">\n          <RowFlat>\n            <UIKitText fontSize=\"48px\" mr=\"8px\">\n              {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n            </UIKitText>\n            <DoubleCurrencyLogo\n              currency0={currencies[Field.CURRENCY_A]}\n              currency1={currencies[Field.CURRENCY_B]}\n              size={30}\n            />\n          </RowFlat>\n        </LightCard>\n      </AutoColumn>\n    ) : (\n      <AutoColumn gap=\"20px\">\n        <RowFlat style={{ marginTop: '20px' }}>\n          <UIKitText fontSize=\"48px\" mr=\"8px\">\n            {liquidityMinted?.toSignificant(6)}\n          </UIKitText>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </RowFlat>\n        <Row>\n          <UIKitText fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </UIKitText>\n        </Row>\n        <UIKitText small textAlign=\"left\" padding=\"8px 0 0 0 \" style={{ fontStyle: 'italic' }}>\n          {`Output is estimated. If the price changes by more than ${\n            allowedSlippage / 100\n          }% your transaction will revert.`}\n        </UIKitText>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = `Supplying ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)} ${\n    currencies[Field.CURRENCY_A]?.symbol\n  } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)} ${currencies[Field.CURRENCY_B]?.symbol}`\n\n  const handleCurrencyASelect = useCallback(\n    (currA: Currency) => {\n      const newCurrencyIdA = currencyId(currA)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\n      } else {\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA]\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currB: Currency) => {\n      const newCurrencyIdB = currencyId(currB)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/add/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/add/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB]\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false)\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  return (\n    <Container>\n      <CardNav activeIndex={1} />\n      <AppBody>\n        <AddRemoveTabs adding />\n        <Wrapper>\n          <TransactionConfirmationModal\n            isOpen={showConfirm}\n            onDismiss={handleDismissConfirmation}\n            attemptingTxn={attemptingTxn}\n            hash={txHash}\n            content={() => (\n              <ConfirmationModalContent\n                title={\n                  noLiquidity\n                    ? TranslateString(1154, 'You are creating a pool')\n                    : TranslateString(1156, 'You will receive')\n                }\n                onDismiss={handleDismissConfirmation}\n                topContent={modalHeader}\n                bottomContent={modalBottom}\n              />\n            )}\n            pendingText={pendingText}\n          />\n          <CardBody>\n            <AutoColumn gap=\"20px\">\n              {noLiquidity && (\n                <ColumnCenter>\n                  <Pane>\n                    <AutoColumn gap=\"12px\">\n                      <UIKitText>{TranslateString(1158, 'You are the first liquidity provider.')}</UIKitText>\n                      <UIKitText>\n                        {TranslateString(1160, 'The ratio of tokens you add will set the price of this pool.')}\n                      </UIKitText>\n                      <UIKitText>\n                        {TranslateString(1162, 'Once you are happy with the rate click supply to review.')}\n                      </UIKitText>\n                    </AutoColumn>\n                  </Pane>\n                </ColumnCenter>\n              )}\n              <CurrencyInputPanel\n                value={formattedAmounts[Field.CURRENCY_A]}\n                onUserInput={onFieldAInput}\n                onMax={() => {\n                  onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n                }}\n                onCurrencySelect={handleCurrencyASelect}\n                showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n                currency={currencies[Field.CURRENCY_A]}\n                id=\"add-liquidity-input-tokena\"\n                showCommonBases={false}\n              />\n              <ColumnCenter>\n                <AddIcon color=\"textSubtle\" />\n              </ColumnCenter>\n              <CurrencyInputPanel\n                value={formattedAmounts[Field.CURRENCY_B]}\n                onUserInput={onFieldBInput}\n                onCurrencySelect={handleCurrencyBSelect}\n                onMax={() => {\n                  onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n                }}\n                showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n                currency={currencies[Field.CURRENCY_B]}\n                id=\"add-liquidity-input-tokenb\"\n                showCommonBases={false}\n              />\n              {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n                <div>\n                  <UIKitText\n                    style={{ textTransform: 'uppercase', fontWeight: 600 }}\n                    color=\"textSubtle\"\n                    fontSize=\"12px\"\n                    mb=\"2px\"\n                  >\n                    {noLiquidity\n                      ? TranslateString(1164, 'Initial prices and pool share')\n                      : TranslateString(1166, 'Prices and pool share')}\n                  </UIKitText>\n                  <Pane>\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </Pane>\n                </div>\n              )}\n\n              {!account ? (\n                <ConnectWalletButton width=\"100%\" />\n              ) : (\n                <AutoColumn gap=\"md\">\n                  {(approvalA === ApprovalState.NOT_APPROVED ||\n                    approvalA === ApprovalState.PENDING ||\n                    approvalB === ApprovalState.NOT_APPROVED ||\n                    approvalB === ApprovalState.PENDING) &&\n                    isValid && (\n                      <RowBetween>\n                        {approvalA !== ApprovalState.APPROVED && (\n                          <Button\n                            onClick={approveACallback}\n                            disabled={approvalA === ApprovalState.PENDING}\n                            style={{ width: approvalB !== ApprovalState.APPROVED ? '48%' : '100%' }}\n                          >\n                            {approvalA === ApprovalState.PENDING ? (\n                              <Dots>Approving {currencies[Field.CURRENCY_A]?.symbol}</Dots>\n                            ) : (\n                              `Approve ${currencies[Field.CURRENCY_A]?.symbol}`\n                            )}\n                          </Button>\n                        )}\n                        {approvalB !== ApprovalState.APPROVED && (\n                          <Button\n                            onClick={approveBCallback}\n                            disabled={approvalB === ApprovalState.PENDING}\n                            style={{ width: approvalA !== ApprovalState.APPROVED ? '48%' : '100%' }}\n                          >\n                            {approvalB === ApprovalState.PENDING ? (\n                              <Dots>Approving {currencies[Field.CURRENCY_B]?.symbol}</Dots>\n                            ) : (\n                              `Approve ${currencies[Field.CURRENCY_B]?.symbol}`\n                            )}\n                          </Button>\n                        )}\n                      </RowBetween>\n                    )}\n                  <Button\n                    onClick={() => {\n                      if (expertMode) {\n                        onAdd()\n                      } else {\n                        setShowConfirm(true)\n                      }\n                    }}\n                    disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                    variant={\n                      !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                        ? 'danger'\n                        : 'primary'\n                    }\n                    width=\"100%\"\n                  >\n                    {error ?? 'Supply'}\n                  </Button>\n                </AutoColumn>\n              )}\n            </AutoColumn>\n          </CardBody>\n        </Wrapper>\n      </AppBody>\n      {pair && !noLiquidity && pairState !== PairState.INVALID ? (\n        <AutoColumn style={{ minWidth: '20rem', marginTop: '1rem' }}>\n          <MinimalPositionCard showUnwrapped={oneCurrencyIsWBNB} pair={pair} />\n        </AutoColumn>\n      ) : null}\n    </Container>\n  )\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/pages/RemoveLiquidity/index.tsx",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/pages/Swap/index.tsx",["841"],"import { CurrencyAmount, JSBI, Token, Trade } from '@nguyenphu27/sdk'\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react'\nimport { ArrowDown } from 'react-feather'\nimport { CardBody, ArrowDownIcon, Button, IconButton, Text, Link } from '@nguyenphu27/uikit'\nimport styled, { ThemeContext } from 'styled-components'\nimport AddressInputPanel from 'components/AddressInputPanel'\nimport Card, { GreyCard } from 'components/Card'\nimport { AutoColumn } from 'components/Column'\nimport ConfirmSwapModal from 'components/swap/ConfirmSwapModal'\nimport CurrencyInputPanel from 'components/CurrencyInputPanel'\nimport CardNav from 'components/CardNav'\nimport { AutoRow, RowBetween } from 'components/Row'\nimport AdvancedSwapDetailsDropdown from 'components/swap/AdvancedSwapDetailsDropdown'\nimport confirmPriceImpactWithoutFee from 'components/swap/confirmPriceImpactWithoutFee'\nimport { ArrowWrapper, BottomGrouping, SwapCallbackError, Wrapper } from 'components/swap/styleds'\nimport TradePrice from 'components/swap/TradePrice'\nimport TokenWarningModal from 'components/TokenWarningModal'\nimport SyrupWarningModal from 'components/SyrupWarningModal'\nimport SafeMoonWarningModal from 'components/SafeMoonWarningModal'\nimport ProgressSteps from 'components/ProgressSteps'\nimport Container from 'components/Container'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from 'constants/index'\nimport { useActiveWeb3React } from 'hooks'\nimport { useCurrency } from 'hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from 'hooks/useApproveCallback'\nimport { useSwapCallback } from 'hooks/useSwapCallback'\nimport useWrapCallback, { WrapType } from 'hooks/useWrapCallback'\nimport { Field } from 'state/swap/actions'\nimport { useDefaultsFromURLSearch, useDerivedSwapInfo, useSwapActionHandlers, useSwapState } from 'state/swap/hooks'\nimport { useExpertModeManager, useUserDeadline, useUserSlippageTolerance } from 'state/user/hooks'\nimport { LinkStyledButton } from 'components/Shared'\nimport { maxAmountSpend } from 'utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\nimport Loader from 'components/Loader'\nimport useI18n from 'hooks/useI18n'\nimport PageHeader from 'components/PageHeader'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport AppBody from '../AppBody'\n\nconst StyledLink = styled(Link)`\n  display: inline;\n  color: ${({ theme }) => theme.colors.failure};\n`\n\nconst Swap = () => {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n  const TranslateString = useI18n()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const [dismissTokenWarning, setDismissTokenWarning] = useState<boolean>(false)\n  const [transactionWarning, setTransactionWarning] = useState<{\n    selectedToken: string | null\n    purchaseType: string | null\n  }>({\n    selectedToken: null,\n    purchaseType: null,\n  })\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency]\n  )\n  const handleConfirmTokenWarning = useCallback(() => {\n    setDismissTokenWarning(true)\n  }, [])\n\n  const handleConfirmWarning = () => {\n    setTransactionWarning({\n      selectedToken: null,\n      purchaseType: null,\n    })\n  }\n\n  const { account } = useActiveWeb3React()\n  const theme = useContext(ThemeContext)\n\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [deadline] = useUserDeadline()\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n  const { wrapType, execute: onWrap, inputError: wrapInputError } = useWrapCallback(\n    currencies[Field.INPUT],\n    currencies[Field.OUTPUT],\n    typedValue\n  )\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput]\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput]\n  )\n\n  // modal and loading\n  const [{ showConfirm, tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    showConfirm: boolean\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    showConfirm: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0))\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(\n    trade,\n    allowedSlippage,\n    deadline,\n    recipient\n  )\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState((prevState) => ({ ...prevState, attemptingTxn: true, swapErrorMessage: undefined, txHash: undefined }))\n    swapCallback()\n      .then((hash) => {\n        setSwapState((prevState) => ({\n          ...prevState,\n          attemptingTxn: false,\n          swapErrorMessage: undefined,\n          txHash: hash,\n        }))\n      })\n      .catch((error) => {\n        setSwapState((prevState) => ({\n          ...prevState,\n          attemptingTxn: false,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        }))\n      })\n  }, [priceImpactWithoutFee, swapCallback, setSwapState])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState((prevState) => ({ ...prevState, showConfirm: false }))\n\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [onUserInput, txHash, setSwapState])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState((prevState) => ({ ...prevState, tradeToConfirm: trade }))\n  }, [trade])\n\n  // This will check to see if the user has selected Syrup or SafeMoon to either buy or sell.\n  // If so, they will be alerted with a warning message.\n  const checkForWarning = useCallback(\n    (selected: string, purchaseType: string) => {\n      if (['SYRUP', 'SAFEMOON'].includes(selected)) {\n        setTransactionWarning({\n          selectedToken: selected,\n          purchaseType,\n        })\n      }\n    },\n    [setTransactionWarning]\n  )\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      if (inputCurrency.symbol === 'SYRUP') {\n        checkForWarning(inputCurrency.symbol, 'Selling')\n      }\n      if (inputCurrency.symbol === 'SAFEMOON') {\n        checkForWarning(inputCurrency.symbol, 'Selling')\n      }\n    },\n    [onCurrencySelection, setApprovalSubmitted, checkForWarning]\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      if (outputCurrency.symbol === 'SYRUP') {\n        checkForWarning(outputCurrency.symbol, 'Buying')\n      }\n      if (outputCurrency.symbol === 'SAFEMOON') {\n        checkForWarning(outputCurrency.symbol, 'Buying')\n      }\n    },\n    [onCurrencySelection, checkForWarning]\n  )\n\n  return (\n    <Container>\n      <TokenWarningModal\n        isOpen={urlLoadedTokens.length > 0 && !dismissTokenWarning}\n        tokens={urlLoadedTokens}\n        onConfirm={handleConfirmTokenWarning}\n      />\n      <SyrupWarningModal\n        isOpen={transactionWarning.selectedToken === 'SYRUP'}\n        transactionType={transactionWarning.purchaseType}\n        onConfirm={handleConfirmWarning}\n      />\n      <SafeMoonWarningModal isOpen={transactionWarning.selectedToken === 'SAFEMOON'} onConfirm={handleConfirmWarning} />\n      <CardNav />\n      <AppBody>\n        <Wrapper id=\"swap-page\">\n          <ConfirmSwapModal\n            isOpen={showConfirm}\n            trade={trade}\n            originalTrade={tradeToConfirm}\n            onAcceptChanges={handleAcceptChanges}\n            attemptingTxn={attemptingTxn}\n            txHash={txHash}\n            recipient={recipient}\n            allowedSlippage={allowedSlippage}\n            onConfirm={handleSwap}\n            swapErrorMessage={swapErrorMessage}\n            onDismiss={handleConfirmDismiss}\n          />\n          <PageHeader\n            title={TranslateString(8, 'Exchange')}\n            description={TranslateString(1192, 'Trade tokens in an instant')}\n          />\n          <CardBody>\n            <AutoColumn gap=\"md\">\n              <CurrencyInputPanel\n                label={\n                  independentField === Field.OUTPUT && !showWrap && trade\n                    ? TranslateString(194, 'From (estimated)')\n                    : TranslateString(76, 'From')\n                }\n                value={formattedAmounts[Field.INPUT]}\n                showMaxButton={!atMaxAmountInput}\n                currency={currencies[Field.INPUT]}\n                onUserInput={handleTypeInput}\n                onMax={handleMaxInput}\n                onCurrencySelect={handleInputSelect}\n                otherCurrency={currencies[Field.OUTPUT]}\n                id=\"swap-currency-input\"\n              />\n              <AutoColumn justify=\"space-between\">\n                <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable>\n                    <IconButton\n                      variant=\"tertiary\"\n                      onClick={() => {\n                        setApprovalSubmitted(false) // reset 2 step UI for approvals\n                        onSwitchTokens()\n                      }}\n                      style={{ borderRadius: '50%' }}\n                      scale=\"sm\"\n                    >\n                      <ArrowDownIcon color=\"primary\" width=\"24px\" />\n                    </IconButton>\n                  </ArrowWrapper>\n                  {recipient === null && !showWrap && isExpertMode ? (\n                    <LinkStyledButton id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                      + Add a send (optional)\n                    </LinkStyledButton>\n                  ) : null}\n                </AutoRow>\n              </AutoColumn>\n              <CurrencyInputPanel\n                value={formattedAmounts[Field.OUTPUT]}\n                onUserInput={handleTypeOutput}\n                label={\n                  independentField === Field.INPUT && !showWrap && trade\n                    ? TranslateString(196, 'To (estimated)')\n                    : TranslateString(80, 'To')\n                }\n                showMaxButton={false}\n                currency={currencies[Field.OUTPUT]}\n                onCurrencySelect={handleOutputSelect}\n                otherCurrency={currencies[Field.INPUT]}\n                id=\"swap-currency-output\"\n              />\n\n              {recipient !== null && !showWrap ? (\n                <>\n                  <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                    <ArrowWrapper clickable={false}>\n                      <ArrowDown size=\"16\" color={theme.colors.textSubtle} />\n                    </ArrowWrapper>\n                    <LinkStyledButton id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                      - Remove send\n                    </LinkStyledButton>\n                  </AutoRow>\n                  <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n                </>\n              ) : null}\n\n              {showWrap ? null : (\n                <Card padding=\".25rem .75rem 0 .75rem\" borderRadius=\"20px\">\n                  <AutoColumn gap=\"4px\">\n                    {Boolean(trade) && (\n                      <RowBetween align=\"center\">\n                        <Text fontSize=\"14px\">{TranslateString(1182, 'Price')}</Text>\n                        <TradePrice\n                          price={trade?.executionPrice}\n                          showInverted={showInverted}\n                          setShowInverted={setShowInverted}\n                        />\n                      </RowBetween>\n                    )}\n                    {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                      <RowBetween align=\"center\">\n                        <Text fontSize=\"14px\">{TranslateString(88, 'Slippage Tolerance')}</Text>\n                        <Text fontSize=\"14px\">{allowedSlippage / 100}%</Text>\n                      </RowBetween>\n                    )}\n                  </AutoColumn>\n                </Card>\n              )}\n            </AutoColumn>\n            <BottomGrouping>\n              {!account ? (\n                <ConnectWalletButton width=\"100%\" />\n              ) : showWrap ? (\n                <Button disabled={Boolean(wrapInputError)} onClick={onWrap} width=\"100%\">\n                  {wrapInputError ??\n                    (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n                </Button>\n              ) : noRoute && userHasSpecifiedInputOutput ? (\n                <GreyCard style={{ textAlign: 'center' }}>\n                  <Text mb=\"4px\">{TranslateString(1194, 'Insufficient liquidity for this trade.')}</Text>\n                </GreyCard>\n              ) : showApproveFlow ? (\n                <RowBetween>\n                  <Button\n                    onClick={approveCallback}\n                    disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                    style={{ width: '48%' }}\n                    variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  >\n                    {approval === ApprovalState.PENDING ? (\n                      <AutoRow gap=\"6px\" justify=\"center\">\n                        Approving <Loader stroke=\"white\" />\n                      </AutoRow>\n                    ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                      'Approved'\n                    ) : (\n                      `Approve ${currencies[Field.INPUT]?.symbol}`\n                    )}\n                  </Button>\n                  <Button\n                    onClick={() => {\n                      if (isExpertMode) {\n                        handleSwap()\n                      } else {\n                        setSwapState({\n                          tradeToConfirm: trade,\n                          attemptingTxn: false,\n                          swapErrorMessage: undefined,\n                          showConfirm: true,\n                          txHash: undefined,\n                        })\n                      }\n                    }}\n                    style={{ width: '48%' }}\n                    id=\"swap-button\"\n                    disabled={\n                      !isValid ||\n                      approval !== ApprovalState.APPROVED ||\n                      (priceImpactSeverity > 3 && !isExpertMode)\n                    }\n                    variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  >\n                    {priceImpactSeverity > 3 && !isExpertMode\n                      ? `Price Impact High`\n                      : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`}\n                  </Button>\n                </RowBetween>\n              ) : (\n                <Button\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        showConfirm: true,\n                        txHash: undefined,\n                      })\n                    }\n                  }}\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError\n                  }\n                  variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                  width=\"100%\"\n                >\n                  {swapInputError ||\n                    (priceImpactSeverity > 3 && !isExpertMode\n                      ? `Price Impact Too High`\n                      : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`)}\n                </Button>\n              )}\n              {showApproveFlow && <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />}\n              {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n            </BottomGrouping>\n          </CardBody>\n        </Wrapper>\n      </AppBody>\n      <AdvancedSwapDetailsDropdown trade={trade} />\n    </Container>\n  )\n}\n\nexport default Swap\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/Popups/index.tsx",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/Web3ReactManager/index.tsx",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/pages/Pool/index.tsx",["842"],"import React, { useContext, useMemo } from 'react'\nimport { ThemeContext } from 'styled-components'\nimport { Pair } from '@nguyenphu27/sdk'\nimport { Button, CardBody, Text } from '@nguyenphu27/uikit'\nimport CardNav from 'components/CardNav'\nimport Question from 'components/QuestionHelper'\nimport FullPositionCard from 'components/PositionCard'\nimport { useTokenBalancesWithLoadingIndicator } from 'state/wallet/hooks'\nimport { StyledInternalLink } from 'components/Shared'\nimport { LightCard } from 'components/Card'\nimport { RowBetween } from 'components/Row'\nimport { AutoColumn } from 'components/Column'\nimport Container from 'components/Container'\n\nimport { useActiveWeb3React } from 'hooks'\nimport { usePairs } from 'data/Reserves'\nimport { toV2LiquidityToken, useTrackedTokenPairs } from 'state/user/hooks'\nimport { Dots } from 'components/swap/styleds'\nimport useI18n from 'hooks/useI18n'\nimport PageHeader from 'components/PageHeader'\nimport { Link } from 'react-router-dom'\nimport AppBody from '../AppBody'\n\nexport default function Pool() {\n  const theme = useContext(ThemeContext)\n  const { account } = useActiveWeb3React()\n  const TranslateString = useI18n()\n\n  // fetch the user's balances of all tracked V2 LP tokens\n  const trackedTokenPairs = useTrackedTokenPairs()\n  const tokenPairsWithLiquidityTokens = useMemo(\n    () => trackedTokenPairs.map((tokens) => ({ liquidityToken: toV2LiquidityToken(tokens), tokens })),\n    [trackedTokenPairs]\n  )\n  const liquidityTokens = useMemo(() => tokenPairsWithLiquidityTokens.map((tpwlt) => tpwlt.liquidityToken), [\n    tokenPairsWithLiquidityTokens,\n  ])\n  const [v2PairsBalances, fetchingV2PairBalances] = useTokenBalancesWithLoadingIndicator(\n    account ?? undefined,\n    liquidityTokens\n  )\n\n  // fetch the reserves for all V2 pools in which the user has a balance\n  const liquidityTokensWithBalances = useMemo(\n    () =>\n      tokenPairsWithLiquidityTokens.filter(({ liquidityToken }) =>\n        v2PairsBalances[liquidityToken.address]?.greaterThan('0')\n      ),\n    [tokenPairsWithLiquidityTokens, v2PairsBalances]\n  )\n\n  const v2Pairs = usePairs(liquidityTokensWithBalances.map(({ tokens }) => tokens))\n  const v2IsLoading =\n    fetchingV2PairBalances || v2Pairs?.length < liquidityTokensWithBalances.length || v2Pairs?.some((V2Pair) => !V2Pair)\n\n  const allV2PairsWithLiquidity = v2Pairs.map(([, pair]) => pair).filter((v2Pair): v2Pair is Pair => Boolean(v2Pair))\n\n  return (\n    <Container>\n      <CardNav activeIndex={1} />\n      <AppBody>\n        <PageHeader\n          title={TranslateString(262, 'Liquidity')}\n          description={TranslateString(1168, 'Add liquidity to receive LP tokens')}\n        >\n          <Button id=\"join-pool-button\" as={Link} to=\"/add/BNB\">\n            {TranslateString(168, 'Add Liquidity')}\n          </Button>\n        </PageHeader>\n        <AutoColumn gap=\"lg\" justify=\"center\">\n          <CardBody>\n            <AutoColumn gap=\"12px\" style={{ width: '100%' }}>\n              <RowBetween padding=\"0 8px\">\n                <Text color={theme.colors.text}>{TranslateString(107, 'Your Liquidity')}</Text>\n                <Question\n                  text={TranslateString(\n                    1170,\n                    'When you add liquidity, you are given pool tokens that represent your share. If you don’t see a pool you joined in this list, try importing a pool below.'\n                  )}\n                />\n              </RowBetween>\n\n              {!account ? (\n                <LightCard padding=\"40px\">\n                  <Text color=\"textDisabled\" textAlign=\"center\">\n                    {TranslateString(156, 'Connect to a wallet to view your liquidity.')}\n                  </Text>\n                </LightCard>\n              ) : v2IsLoading ? (\n                <LightCard padding=\"40px\">\n                  <Text color=\"textDisabled\" textAlign=\"center\">\n                    <Dots>Loading</Dots>\n                  </Text>\n                </LightCard>\n              ) : allV2PairsWithLiquidity?.length > 0 ? (\n                <>\n                  {allV2PairsWithLiquidity.map((v2Pair) => (\n                    <FullPositionCard key={v2Pair.liquidityToken.address} pair={v2Pair} />\n                  ))}\n                </>\n              ) : (\n                <LightCard padding=\"40px\">\n                  <Text color=\"textDisabled\" textAlign=\"center\">\n                    {TranslateString(104, 'No liquidity found.')}\n                  </Text>\n                </LightCard>\n              )}\n\n              <div>\n                <Text fontSize=\"14px\" style={{ padding: '.5rem 0 .5rem 0' }}>\n                  {TranslateString(106, \"Don't see a pool you joined?\")}{' '}\n                  <StyledInternalLink id=\"import-pool-link\" to=\"/find\">\n                    {TranslateString(108, 'Import it.')}\n                  </StyledInternalLink>\n                </Text>\n                <Text fontSize=\"14px\" style={{ padding: '.5rem 0 .5rem 0' }}>\n                  {TranslateString(1172, 'Or, if you staked your LP tokens in a farm, unstake them to see them here.')}\n                </Text>\n              </div>\n            </AutoColumn>\n          </CardBody>\n        </AutoColumn>\n      </AppBody>\n    </Container>\n  )\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/pages/PoolFinder/index.tsx",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/pages/Migration/index.tsx",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/Menu/index.tsx",["843"],"import React, { useContext } from 'react'\nimport { Menu as UikitMenu } from '@nguyenphu27/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { allLanguages } from 'constants/localisation/languageCodes'\nimport { LanguageContext } from 'hooks/LanguageContext'\nimport useTheme from 'hooks/useTheme'\nimport useGetLocalProfile from 'hooks/useGetLocalProfile'\nimport useAuth from 'hooks/useAuth'\nimport useGetCakeBusdLpPrice from 'utils/useGetCakeBusdLpPrice'\nimport links from './config'\n\nconst Menu: React.FC = (props) => {\n  const { account } = useWeb3React()\n  const { login, logout } = useAuth()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const cakeBusdPrice = useGetCakeBusdLpPrice()\n  const profile = useGetLocalProfile()\n\n  return (\n    <UikitMenu\n      links={links}\n      account={account as string}\n      login={login}\n      logout={logout}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={selectedLanguage?.code || ''}\n      langs={allLanguages}\n      setLang={setSelectedLanguage}\n      cakePriceUsd={cakeBusdPrice}\n      profile={profile}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/utils/theme.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/multicall/reducer.ts",["844"],"import { createReducer } from '@reduxjs/toolkit'\nimport {\n  addMulticallListeners,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  removeMulticallListeners,\n  toCallKey,\n  updateMulticallResults\n} from './actions'\n\nexport interface MulticallState {\n  callListeners?: {\n    // on a per-chain basis\n    [chainId: number]: {\n      // stores for each call key the listeners' preferences\n      [callKey: string]: {\n        // stores how many listeners there are per each blocks per fetch preference\n        [blocksPerFetch: number]: number\n      }\n    }\n  }\n\n  callResults: {\n    [chainId: number]: {\n      [callKey: string]: {\n        data?: string | null\n        blockNumber?: number\n        fetchingBlockNumber?: number\n      }\n    }\n  }\n}\n\nconst initialState: MulticallState = {\n  callResults: {}\n}\n\nexport default createReducer(initialState, builder =>\n  builder\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\n      const listeners: MulticallState['callListeners'] = state.callListeners\n        ? state.callListeners\n        : (state.callListeners = {})\n      listeners[chainId] = listeners[chainId] ?? {}\n      calls.forEach(call => {\n        const callKey = toCallKey(call)\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\n      })\n    })\n    .addCase(\n      removeMulticallListeners,\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\n        const listeners: MulticallState['callListeners'] = state.callListeners\n          ? state.callListeners\n          : (state.callListeners = {})\n\n        if (!listeners[chainId]) return\n        calls.forEach(call => {\n          const callKey = toCallKey(call)\n          if (!listeners[chainId][callKey]) return\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\n\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\n            delete listeners[chainId][callKey][blocksPerFetch]\n          } else {\n            listeners[chainId][callKey][blocksPerFetch]--\n          }\n        })\n      }\n    )\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach(call => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) {\n          state.callResults[chainId][callKey] = {\n            fetchingBlockNumber\n          }\n        } else {\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach(call => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) return // only should be dispatched if we are already fetching\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\n          delete current.fetchingBlockNumber\n          current.data = null\n          current.blockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      Object.keys(results).forEach(callKey => {\n        const current = state.callResults[chainId][callKey]\n        if ((current?.blockNumber ?? 0) > blockNumber) return\n        state.callResults[chainId][callKey] = {\n          data: results[callKey],\n          blockNumber\n        }\n      })\n    })\n)\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/lists/reducer.ts",["845"],"import { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\n// eslint-disable-next-line import/no-unresolved\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { DEFAULT_LIST_OF_LISTS, DEFAULT_TOKEN_LIST_URL } from '../../constants/lists'\nimport { updateVersion } from '../global/actions'\nimport { acceptListUpdate, addList, fetchTokenList, removeList, selectList } from './actions'\nimport DEFAULT_LIST from '../../constants/token/pancakeswap.json'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[]\n  readonly selectedListUrl: string | undefined\n}\n\nconst NEW_LIST_STATE: ListsState['byUrl'][string] = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\n\nconst initialState: ListsState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n    [DEFAULT_TOKEN_LIST_URL]: {\n      error: null,\n      current: DEFAULT_LIST,\n      loadingRequestId: null,\n      pendingUpdate: null,\n    },\n  },\n  selectedListUrl: DEFAULT_TOKEN_LIST_URL,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        ...state.byUrl[url],\n        loadingRequestId: requestId,\n        error: null,\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n        if (upgradeType === VersionUpgrade.NONE) return\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current,\n            pendingUpdate: tokenList,\n          }\n        }\n      } else {\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null,\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: errorMessage,\n        current: null,\n        pendingUpdate: null,\n      }\n    })\n    .addCase(selectList, (state, { payload: url }) => {\n      state.selectedListUrl = url\n      // automatically adds list\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url]\n      }\n      if (state.selectedListUrl === url) {\n        state.selectedListUrl = Object.keys(state.byUrl)[0]\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate,\n      }\n    })\n    .addCase(updateVersion, (state) => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl\n        state.selectedListUrl = undefined\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n          (s, l) => s.add(l),\n          new Set()\n        )\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n        })\n\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl]\n          }\n        })\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n    })\n)\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/transactions/reducer.ts",["846"],"import { createReducer } from '@reduxjs/toolkit'\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n  SerializableTransactionReceipt\n} from './actions'\n\nconst now = () => new Date().getTime()\n\nexport interface TransactionDetails {\n  hash: string\n  approval?: { tokenAddress: string; spender: string }\n  summary?: string\n  receipt?: SerializableTransactionReceipt\n  lastCheckedBlockNumber?: number\n  addedTime: number\n  confirmedTime?: number\n  from: string\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails\n  }\n}\n\nexport const initialState: TransactionState = {}\n\nexport default createReducer(initialState, builder =>\n  builder\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary } }) => {\n      if (transactions[chainId]?.[hash]) {\n        throw Error('Attempted to add existing transaction.')\n      }\n      const txs = transactions[chainId] ?? {}\n      txs[hash] = { hash, approval, summary, from, addedTime: now() }\n      transactions[chainId] = txs\n    })\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\n      if (!transactions[chainId]) return\n      transactions[chainId] = {}\n    })\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n      }\n    })\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      tx.receipt = receipt\n      tx.confirmedTime = now()\n    })\n)\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/application/reducer.ts",["847"],"import { createReducer, nanoid } from '@reduxjs/toolkit'\nimport {\n  addPopup,\n  PopupContent,\n  removePopup,\n  toggleWalletModal,\n  toggleSettingsMenu,\n  updateBlockNumber\n} from './actions'\n\ntype PopupList = Array<{ key: string; show: boolean; content: PopupContent; removeAfterMs: number | null }>\n\nexport interface ApplicationState {\n  blockNumber: { [chainId: number]: number }\n  popupList: PopupList\n  walletModalOpen: boolean\n  settingsMenuOpen: boolean\n}\n\nconst initialState: ApplicationState = {\n  blockNumber: {},\n  popupList: [],\n  walletModalOpen: false,\n  settingsMenuOpen: false\n}\n\nexport default createReducer(initialState, builder =>\n  builder\n    .addCase(updateBlockNumber, (state, action) => {\n      const { chainId, blockNumber } = action.payload\n      if (typeof state.blockNumber[chainId] !== 'number') {\n        state.blockNumber[chainId] = blockNumber\n      } else {\n        state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId])\n      }\n    })\n    .addCase(toggleWalletModal, state => {\n      state.walletModalOpen = !state.walletModalOpen\n    })\n    .addCase(toggleSettingsMenu, state => {\n      state.settingsMenuOpen = !state.settingsMenuOpen\n    })\n    .addCase(addPopup, (state, { payload: { content, key, removeAfterMs = 15000 } }) => {\n      state.popupList = (key ? state.popupList.filter(popup => popup.key !== key) : state.popupList).concat([\n        {\n          key: key || nanoid(),\n          show: true,\n          content,\n          removeAfterMs\n        }\n      ])\n    })\n    .addCase(removePopup, (state, { payload: { key } }) => {\n      state.popupList.forEach(p => {\n        if (p.key === key) {\n          p.show = false\n        }\n      })\n    })\n)\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/utils/index.ts",["848"],"import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@nguyenphu27/sdk'\nimport { ROUTER_ADDRESS } from '../constants'\nimport { TokenAddressMap } from '../state/lists/hooks'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nconst BSCSCAN_PREFIXES: { [chainId in ChainId]: string } = {\n  56: '',\n  97: 'testnet.'\n}\n\nexport function getBscScanLink(chainId: ChainId, data: string, type: 'transaction' | 'token' | 'address'): string {\n  const prefix = `https://${BSCSCAN_PREFIXES[chainId] || BSCSCAN_PREFIXES[ChainId.MAINNET]}bscscan.com`\n\n  switch (type) {\n    case 'transaction': {\n      return `${prefix}/tx/${data}`\n    }\n    case 'token': {\n      return `${prefix}/token/${data}`\n    }\n    case 'address':\n    default: {\n      return `${prefix}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(Math.floor(num)), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000))\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/constants/lists.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/utils/uriToHttp.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/utils/parseENSAddress.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/utils/contenthashToUri.ts",["849"],"import CID from 'cids'\nimport { getCodec, rmPrefix } from 'multicodec'\nimport { decode, toB58String } from 'multihashes'\n\nexport function hexToUint8Array(hex: string): Uint8Array {\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\n  const arr = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\n  }\n  return arr\n}\n\nconst UTF_8_DECODER = new TextDecoder()\n\n/**\n * Returns the URI representation of the content hash for supported codecs\n * @param contenthash to decode\n */\nexport default function contenthashToUri(contenthash: string): string {\n  const buff = hexToUint8Array(contenthash)\n  const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\n  switch (codec) {\n    case 'ipfs-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      return `ipfs://${toB58String(cid.multihash)}`\n    }\n    case 'ipns-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      const multihash = decode(cid.multihash)\n      if (multihash.name === 'identity') {\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\n      } \n        return `ipns://${toB58String(cid.multihash)}`\n      \n    }\n    default:\n      throw new Error(`Unrecognized codec: ${codec}`)\n  }\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/connectors/index.ts",["850"],"import { ConnectorNames } from '@nguyenphu27/uikit'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { WalletLinkConnector } from '@web3-react/walletlink-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { NetworkConnector } from './NetworkConnector'\n\nconst NETWORK_URL = process.env.REACT_APP_NETWORK_URL\n\nexport const NETWORK_CHAIN_ID: number = parseInt(process.env.REACT_APP_CHAIN_ID ?? '56')\n\nif (typeof NETWORK_URL === 'undefined') {\n  throw new Error(`REACT_APP_NETWORK_URL must be a defined environment variable`)\n}\n\nexport const network = new NetworkConnector({\n  urls: { [NETWORK_CHAIN_ID]: NETWORK_URL },\n})\n\nlet networkLibrary: Web3Provider | undefined\nexport function getNetworkLibrary(): Web3Provider {\n  // eslint-disable-next-line no-return-assign\n  return (networkLibrary = networkLibrary ?? new Web3Provider(network.provider as any))\n}\n\nexport const injected = new InjectedConnector({\n  supportedChainIds: [56, 97],\n})\n\nexport const bscConnector = new BscConnector({ supportedChainIds: [56] })\n\n// mainnet only\nexport const walletconnect = new WalletConnectConnector({\n  rpc: { [NETWORK_CHAIN_ID]: NETWORK_URL },\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n  pollingInterval: 15000,\n})\n\n// mainnet only\nexport const walletlink = new WalletLinkConnector({\n  url: NETWORK_URL,\n  appName: 'Uniswap',\n  appLogoUrl:\n    'https://mpng.pngfly.com/20181202/bex/kisspng-emoji-domain-unicorn-pin-badges-sticker-unicorn-tumblr-emoji-unicorn-iphoneemoji-5c046729264a77.5671679315437924251569.jpg',\n})\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/burn/reducer.ts",["851"],"import { createReducer } from '@reduxjs/toolkit'\nimport { Field, typeInput } from './actions'\n\nexport interface BurnState {\n  readonly independentField: Field\n  readonly typedValue: string\n}\n\nconst initialState: BurnState = {\n  independentField: Field.LIQUIDITY_PERCENT,\n  typedValue: '0'\n}\n\nexport default createReducer<BurnState>(initialState, builder =>\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n    return {\n      ...state,\n      independentField: field,\n      typedValue\n    }\n  })\n)\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/mint/reducer.ts",["852"],"import { createReducer } from '@reduxjs/toolkit'\nimport { Field, resetMintState, typeInput } from './actions'\n\nexport interface MintState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly otherTypedValue: string // for the case when there's no liquidity\n}\n\nconst initialState: MintState = {\n  independentField: Field.CURRENCY_A,\n  typedValue: '',\n  otherTypedValue: ''\n}\n\nexport default createReducer<MintState>(initialState, builder =>\n  builder\n    .addCase(resetMintState, () => initialState)\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\n      if (noLiquidity) {\n        // they're typing into the field they've last typed in\n        if (field === state.independentField) {\n          return {\n            ...state,\n            independentField: field,\n            typedValue\n          }\n        }\n        // they're typing into a new field, store the other value\n        \n          return {\n            ...state,\n            independentField: field,\n            typedValue,\n            otherTypedValue: state.typedValue\n          }\n        \n      } \n        return {\n          ...state,\n          independentField: field,\n          typedValue,\n          otherTypedValue: ''\n        }\n      \n    })\n)\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/swap/reducer.ts",["853"],"import { createReducer } from '@reduxjs/toolkit'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\n\nexport interface SwapState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined\n  }\n  // the typed recipient address or ENS name, or null if swap should go to sender\n  readonly recipient: string | null\n}\n\nconst initialState: SwapState = {\n  independentField: Field.INPUT,\n  typedValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n  recipient: null,\n}\n\nexport default createReducer<SwapState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceSwapState,\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId,\n          },\n          independentField: field,\n          typedValue,\n          recipient,\n        }\n      }\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      }\n      // the normal case\n      return {\n        ...state,\n        [field]: { currencyId },\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    })\n)\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/user/reducer.ts",["854"],"import { createReducer } from '@reduxjs/toolkit'\nimport { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../constants'\nimport { updateVersion } from '../global/actions'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  updateMatchesDarkMode,\n  updateUserDarkMode,\n  updateUserExpertMode,\n  updateUserSlippageTolerance,\n  updateUserDeadline,\n  muteAudio,\n  unmuteAudio\n} from './actions'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  userDarkMode: boolean | null // the user's choice for dark mode or light mode\n  matchesDarkMode: boolean // whether the dark mode media query matches\n\n  userExpertMode: boolean\n\n  // user defined slippage tolerance in bips, used in all txns\n  userSlippageTolerance: number\n\n  // deadline set by user in minutes, used in all txns\n  userDeadline: number\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedToken\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  timestamp: number\n\n  audioPlay: boolean\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n  userDarkMode: null,\n  matchesDarkMode: false,\n  userExpertMode: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  audioPlay: true\n}\n\nexport default createReducer(initialState, builder =>\n  builder\n    .addCase(updateVersion, state => {\n      // slippage isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userSlippageTolerance !== 'number') {\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\n      }\n\n      // deadline isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userDeadline !== 'number') {\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n      }\n\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserDarkMode, (state, action) => {\n      state.userDarkMode = action.payload.userDarkMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateMatchesDarkMode, (state, action) => {\n      state.matchesDarkMode = action.payload.matchesDarkMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserExpertMode, (state, action) => {\n      state.userExpertMode = action.payload.userExpertMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSlippageTolerance, (state, action) => {\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserDeadline, (state, action) => {\n      state.userDeadline = action.payload.userDeadline\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const {chainId} = serializedPair.token0\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        // just delete both keys if either exists\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(muteAudio, state => {\n      state.audioPlay = false\n    })\n    .addCase(unmuteAudio, state => {\n      state.audioPlay = true\n    })\n)\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/global/actions.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/constants/multicall/index.ts",["855"],"import { ChainId } from '@nguyenphu27/sdk'\nimport MULTICALL_ABI from './abi.json'\n\nconst MULTICALL_NETWORKS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0x1Ee38d535d541c55C9dae27B12edf090C608E6Fb', // TODO\n  [ChainId.TESTNET]: '0x301907b5835a2d723Fe3e9E8C5Bc5375d5c1236A'\n}\n\nexport { MULTICALL_ABI, MULTICALL_NETWORKS }\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useToast.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/Menu/config.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/VersionBar/index.tsx",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/pages/AddLiquidity/PoolPriceBar.tsx",["856"],"import React from 'react'\nimport { Currency, Percent, Price } from '@nguyenphu27/sdk'\nimport { Text } from '@nguyenphu27/uikit'\nimport { AutoColumn } from '../../components/Column'\nimport { AutoRow } from '../../components/Row'\nimport { ONE_BIPS } from '../../constants'\nimport { Field } from '../../state/mint/actions'\n\nexport function PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" color=\"textSubtle\" pt={1}>\n            {currencies[Field.CURRENCY_B]?.symbol} per {currencies[Field.CURRENCY_A]?.symbol}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" color=\"textSubtle\" pt={1}>\n            {currencies[Field.CURRENCY_A]?.symbol} per {currencies[Field.CURRENCY_B]?.symbol}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" color=\"textSubtle\" pt={1}>\n            Share of Pool\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/user/hooks.tsx",["857"],"import { ChainId, Pair, Token } from '@nguyenphu27/sdk'\nimport flatMap from 'lodash.flatmap'\nimport { useCallback, useMemo } from 'react'\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from '../../constants'\n\nimport { useActiveWeb3React } from '../../hooks'\n// eslint-disable-next-line import/no-cycle\nimport { useAllTokens } from '../../hooks/Tokens'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  updateUserDarkMode,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserSlippageTolerance,\n  muteAudio,\n  unmuteAudio,\n} from './actions'\nimport { setThemeCache } from '../../utils/theme'\n\nfunction serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nfunction deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name\n  )\n}\n\nexport function useIsDarkMode(): boolean {\n  const { userDarkMode, matchesDarkMode } = useSelector<\n    AppState,\n    { userDarkMode: boolean | null; matchesDarkMode: boolean }\n  >(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    ({ user: { matchesDarkMode, userDarkMode } }) => ({\n      userDarkMode,\n      matchesDarkMode,\n    }),\n    shallowEqual\n  )\n  return userDarkMode === null ? matchesDarkMode : userDarkMode\n}\n\nexport function useDarkModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const { userDarkMode } = useSelector<AppState, { userDarkMode: boolean | null }>(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    ({ user: { userDarkMode } }) => ({\n      userDarkMode,\n    }),\n    shallowEqual\n  )\n  const darkMode = useIsDarkMode()\n\n  const toggleSetDarkMode = useCallback(() => {\n    setThemeCache(!userDarkMode)\n    dispatch(updateUserDarkMode({ userDarkMode: !userDarkMode }))\n  }, [userDarkMode, dispatch])\n\n  return [darkMode, toggleSetDarkMode]\n}\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippageTolerance: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippageTolerance }))\n    },\n    [dispatch]\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserDeadline(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch]\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch]\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch]\n  )\n}\n\nexport function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch]\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Cake-LP', 'Pancake LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId]\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(() => userPairs.concat(generatedPairs).concat(pinnedPairs), [\n    generatedPairs,\n    pinnedPairs,\n    userPairs,\n  ])\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/pages/AppBody.tsx",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/pages/Migration/FAQ.tsx",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/pages/Migration/FirstCard.tsx",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/pages/Migration/SecondCard.tsx",["858"],"import React, { useMemo } from 'react'\nimport { Card, CardHeader, CardBody, Text, Box, Button, Flex, ArrowDownIcon, Link } from '@nguyenphu27/uikit'\nimport { Pair } from '@nguyenphu27/sdk'\nimport { useTokenBalancesWithLoadingIndicator } from 'state/wallet/hooks'\nimport { toV2LiquidityToken, useTrackedTokenPairs } from 'state/user/hooks'\nimport { StyledInternalLink } from 'components/Shared'\nimport { useActiveWeb3React } from 'hooks'\nimport { usePairs } from 'data/Reserves'\nimport FullPositionCard from 'components/PositionCard'\n\nconst ArrowSeparator = () => (\n  <Flex justifyContent=\"center\" my=\"24px\">\n    <ArrowDownIcon color=\"textSubtle\" width=\"24px\" />\n  </Flex>\n)\n\nconst SecondCard = () => {\n  const { account } = useActiveWeb3React()\n\n  // fetch the user's balances of all tracked V2 LP tokens\n  const trackedTokenPairs = useTrackedTokenPairs()\n  const tokenPairsWithLiquidityTokens = useMemo(\n    () => trackedTokenPairs.map((tokens) => ({ liquidityToken: toV2LiquidityToken(tokens), tokens })),\n    [trackedTokenPairs]\n  )\n  const liquidityTokens = useMemo(() => tokenPairsWithLiquidityTokens.map((tpwlt) => tpwlt.liquidityToken), [\n    tokenPairsWithLiquidityTokens,\n  ])\n  const [v2PairsBalances, fetchingV2PairBalances] = useTokenBalancesWithLoadingIndicator(\n    account ?? undefined,\n    liquidityTokens\n  )\n\n  // fetch the reserves for all V2 pools in which the user has a balance\n  const liquidityTokensWithBalances = useMemo(\n    () =>\n      tokenPairsWithLiquidityTokens.filter(({ liquidityToken }) =>\n        v2PairsBalances[liquidityToken.address]?.greaterThan('0')\n      ),\n    [tokenPairsWithLiquidityTokens, v2PairsBalances]\n  )\n\n  const v2Pairs = usePairs(liquidityTokensWithBalances.map(({ tokens }) => tokens))\n  const v2IsLoading =\n    fetchingV2PairBalances || v2Pairs?.length < liquidityTokensWithBalances.length || v2Pairs?.some((V2Pair) => !V2Pair)\n\n  const allV2PairsWithLiquidity = v2Pairs.map(([, pair]) => pair).filter((v2Pair): v2Pair is Pair => Boolean(v2Pair))\n\n  return (\n    <Card>\n      <CardHeader>\n        <Text bold>Remove Liquidity</Text>\n        <Text small color=\"textSubtle\">\n          Unstake your old LP tokens from the old liquidity pools\n        </Text>\n      </CardHeader>\n      <CardBody>\n        <Text bold>V1 LP Tokens in wallet</Text>\n        <Card>\n          {v2IsLoading ? (\n            <CardBody>Loading</CardBody>\n          ) : (\n            <CardBody>\n              {allV2PairsWithLiquidity?.length > 0 ? (\n                <>\n                  {allV2PairsWithLiquidity.map((v2Pair, index) => (\n                    <Box mb={index < allV2PairsWithLiquidity.length - 1 ? '16px' : 0}>\n                      <FullPositionCard key={v2Pair.liquidityToken.address} pair={v2Pair} />\n                    </Box>\n                  ))}\n                </>\n              ) : (\n                <Text color=\"textDisabled\" textAlign=\"center\">\n                  No liquidity found.\n                </Text>\n              )}\n              <Text mt=\"16px\" textAlign=\"center\">\n                Don&apos;t see a pool you joined?{' '}\n                <StyledInternalLink id=\"import-pool-link\" to=\"/find\">\n                  Import it\n                </StyledInternalLink>\n              </Text>\n            </CardBody>\n          )}\n        </Card>\n        <ArrowSeparator />\n        <Text bold>Discontinued V2 LP</Text>\n        <Card>\n          <CardBody>\n            <Text textAlign=\"center\" mb=\"16px\">\n              If you added liquidity to V2 LPs during the migration attempt on April 23, you need to unstake and remove\n              liquidity.\n            </Text>\n            <Button as={Link} external href=\"https://hiccup.pancakeswap.finance/#/pool\" style={{ width: '100%' }}>\n              Remove\n            </Button>\n          </CardBody>\n        </Card>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default SecondCard\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/pages/Pool/styleds.tsx",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/toasts/index.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/connectors/NetworkConnector.ts",["859"],"import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport invariant from 'tiny-invariant'\n\ninterface NetworkConnectorArguments {\n  urls: { [chainId: number]: string }\n  defaultChainId?: number\n}\n\n// taken from ethers.js, compatible interface with web3 provider\ntype AsyncSendable = {\n  isMetaMask?: boolean\n  host?: string\n  path?: string\n  sendAsync?: (request: any, callback: (error: any, response: any) => void) => void\n  send?: (request: any, callback: (error: any, response: any) => void) => void\n}\n\nclass RequestError extends Error {\n  constructor(message: string, public code: number, public data?: unknown) {\n    super(message)\n  }\n}\n\ninterface BatchItem {\n  request: { jsonrpc: '2.0'; id: number; method: string; params: unknown }\n  resolve: (result: any) => void\n  reject: (error: Error) => void\n}\n\nclass MiniRpcProvider implements AsyncSendable {\n  public readonly isMetaMask: false = false\n\n  public readonly chainId: number\n\n  public readonly url: string\n\n  public readonly host: string\n\n  public readonly path: string\n\n  public readonly batchWaitTimeMs: number\n\n  private nextId = 1\n\n  private batchTimeoutId: ReturnType<typeof setTimeout> | null = null\n\n  private batch: BatchItem[] = []\n\n  constructor(chainId: number, url: string, batchWaitTimeMs?: number) {\n    this.chainId = chainId\n    this.url = url\n    const parsed = new URL(url)\n    this.host = parsed.host\n    this.path = parsed.pathname\n    // how long to wait to batch calls\n    this.batchWaitTimeMs = batchWaitTimeMs ?? 50\n  }\n\n  public readonly clearBatch = async () => {\n    console.info('Clearing batch', this.batch)\n    const { batch } = this\n    this.batch = []\n    this.batchTimeoutId = null\n    let response: Response\n    try {\n      response = await fetch(this.url, {\n        method: 'POST',\n        headers: { 'content-type': 'application/json', accept: 'application/json' },\n        body: JSON.stringify(batch.map((item) => item.request)),\n      })\n    } catch (error) {\n      batch.forEach(({ reject }) => reject(new Error('Failed to send batch call')))\n      return\n    }\n\n    if (!response.ok) {\n      batch.forEach(({ reject }) => reject(new RequestError(`${response.status}: ${response.statusText}`, -32000)))\n      return\n    }\n\n    let json\n    try {\n      json = await response.json()\n    } catch (error) {\n      batch.forEach(({ reject }) => reject(new Error('Failed to parse JSON response')))\n      return\n    }\n    const byKey = batch.reduce<{ [id: number]: BatchItem }>((memo, current) => {\n      memo[current.request.id] = current\n      return memo\n    }, {})\n    // eslint-disable-next-line no-restricted-syntax\n    for (const result of json) {\n      const {\n        resolve,\n        reject,\n        request: { method },\n      } = byKey[result.id]\n\n      // @ts-ignore\n      if (resolve && reject) {\n        if ('error' in result) {\n          reject(new RequestError(result?.error?.message, result?.error?.code, result?.error?.data))\n        } else if ('result' in result) {\n          resolve(result.result)\n        } else {\n          reject(new RequestError(`Received unexpected JSON-RPC response to ${method} request.`, -32000, result))\n        }\n      }\n    }\n  }\n\n  public readonly sendAsync = (\n    request: { jsonrpc: '2.0'; id: number | string | null; method: string; params?: any },\n    callback: (error: any, response: any) => void\n  ): void => {\n    this.request(request.method, request.params)\n      .then((result) => callback(null, { jsonrpc: '2.0', id: request.id, result }))\n      .catch((error) => callback(error, null))\n  }\n\n  public readonly request = async (\n    method: string | { method: string; params: unknown[] },\n    params?: any\n  ): Promise<unknown> => {\n    if (typeof method !== 'string') {\n      return this.request(method.method, method.params)\n    }\n    if (method === 'eth_chainId') {\n      return `0x${this.chainId.toString(16)}`\n    }\n    const promise = new Promise((resolve, reject) => {\n      this.batch.push({\n        request: {\n          jsonrpc: '2.0',\n          id: this.nextId++,\n          method,\n          params,\n        },\n        resolve,\n        reject,\n      })\n    })\n    this.batchTimeoutId = this.batchTimeoutId ?? setTimeout(this.clearBatch, this.batchWaitTimeMs)\n    return promise\n  }\n}\n\nexport class NetworkConnector extends AbstractConnector {\n  private readonly providers: { [chainId: number]: MiniRpcProvider }\n\n  private currentChainId: number\n\n  constructor({ urls, defaultChainId }: NetworkConnectorArguments) {\n    invariant(defaultChainId || Object.keys(urls).length === 1, 'defaultChainId is a required argument with >1 url')\n    super({ supportedChainIds: Object.keys(urls).map((k): number => Number(k)) })\n\n    this.currentChainId = defaultChainId || Number(Object.keys(urls)[0])\n    this.providers = Object.keys(urls).reduce<{ [chainId: number]: MiniRpcProvider }>((accumulator, chainId) => {\n      accumulator[Number(chainId)] = new MiniRpcProvider(Number(chainId), urls[Number(chainId)])\n      return accumulator\n    }, {})\n  }\n\n  public get provider(): MiniRpcProvider {\n    return this.providers[this.currentChainId]\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    return { provider: this.providers[this.currentChainId], chainId: this.currentChainId, account: null }\n  }\n\n  public async getProvider(): Promise<MiniRpcProvider> {\n    return this.providers[this.currentChainId]\n  }\n\n  public async getChainId(): Promise<number> {\n    return this.currentChainId\n  }\n\n  public async getAccount(): Promise<null> {\n    return null\n  }\n\n  public deactivate() {\n    return null\n  }\n}\n\nexport default NetworkConnector\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/burn/actions.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/mint/actions.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/swap/actions.ts",["860"],"import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT'\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('swap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/user/actions.ts",["861"],"import { createAction } from '@reduxjs/toolkit'\n\nexport interface SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol?: string\n  name?: string\n}\n\nexport interface SerializedPair {\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport const updateMatchesDarkMode = createAction<{ matchesDarkMode: boolean }>('user/updateMatchesDarkMode')\nexport const updateUserDarkMode = createAction<{ userDarkMode: boolean }>('user/updateUserDarkMode')\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\n  'user/updateUserSlippageTolerance'\n)\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\nexport const removeSerializedPair = createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>(\n  'user/removeSerializedPair'\n)\nexport const muteAudio = createAction<void>('user/muteAudio')\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useAuth.ts",["862"],"import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { connectorLocalStorageKey, ConnectorNames } from '@nguyenphu27/uikit'\nimport useToast from 'hooks/useToast'\nimport { connectorsByName } from 'connectors'\n\nconst useAuth = () => {\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback((connectorID: ConnectorNames) => {\n    const connector = connectorsByName[connectorID]\n    if (connector) {\n      activate(connector, async (error: Error) => {\n        window.localStorage.removeItem(connectorLocalStorageKey)\n        if (error instanceof UnsupportedChainIdError) {\n          toastError('Unsupported Chain Id', 'Unsupported Chain Id Error. Check your chain Id.')\n        } else if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n          toastError('Provider Error', 'No provider was found')\n        } else if (\n          error instanceof UserRejectedRequestErrorInjected ||\n          error instanceof UserRejectedRequestErrorWalletConnect\n        ) {\n          if (connector instanceof WalletConnectConnector) {\n            const walletConnector = connector as WalletConnectConnector\n            walletConnector.walletConnectProvider = null\n          }\n          toastError('Authorization Error', 'Please authorize to access your account')\n        } else {\n          toastError(error.name, error.message)\n        }\n      })\n    } else {\n      toastError(\"Can't find connector\", 'The connector config is wrong')\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return { login, logout: deactivate }\n}\n\nexport default useAuth\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useGetLocalProfile.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useTheme.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/utils/useGetCakeBusdLpPrice.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/Tokens.ts",["863"],"import { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@nguyenphu27/sdk'\nimport { useMemo } from 'react'\nimport { useSelectedTokenList } from '../state/lists/hooks'\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\n// eslint-disable-next-line import/no-cycle\nimport { useUserAddedTokens } from '../state/user/hooks'\nimport { isAddress } from '../utils'\n\nimport { useActiveWeb3React } from './index'\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n  const allTokens = useSelectedTokenList()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n    return (\n      userAddedTokens\n        // reduce into all ALL_TOKENS filtered by the current chain\n        .reduce<{ [address: string]: Token }>(\n          (tokenMap, token) => {\n            tokenMap[token.address] = token\n            return tokenMap\n          },\n          // must make a copy because reduce modifies the map, and we do not\n          // want to make a copy in every iteration\n          { ...allTokens[chainId] }\n        )\n    )\n  }, [chainId, userAddedTokens, allTokens])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency): boolean {\n  const userAddedTokens = useUserAddedTokens()\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : bytes32 && BYTES32_REGEX.test(bytes32)\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token')\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useI18n.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/utils/currencyId.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/pages/Migration/config.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/Container.tsx",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/actions.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/multicall/hooks.ts",["864"],"import { Interface, FunctionFragment } from '@ethersproject/abi'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addMulticallListeners,\n  Call,\n  removeMulticallListeners,\n  parseCallKey,\n  toCallKey,\n  ListenerOptions,\n} from './actions'\n\nexport interface Result extends ReadonlyArray<any> {\n  readonly [key: string]: any\n}\n\ntype MethodArg = string | number | BigNumber\ntype MethodArgs = Array<MethodArg | MethodArg[]>\n\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\n\nfunction isMethodArg(x: unknown): x is MethodArg {\n  return ['string', 'number'].indexOf(typeof x) !== -1\n}\n\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\n  return (\n    x === undefined ||\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\n  )\n}\n\ninterface CallResult {\n  readonly valid: boolean\n  readonly data: string | undefined\n  readonly blockNumber: number | undefined\n}\n\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\n\n// use this options object\nexport const NEVER_RELOAD: ListenerOptions = {\n  blocksPerFetch: Infinity,\n}\n\n// the lowest level call for subscribing to contract data\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\n  const { chainId } = useActiveWeb3React()\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\n    (state) => state.multicall.callResults\n  )\n  const dispatch = useDispatch<AppDispatch>()\n\n  const serializedCallKeys: string = useMemo(\n    () =>\n      JSON.stringify(\n        calls\n          ?.filter((c): c is Call => Boolean(c))\n          ?.map(toCallKey)\n          ?.sort() ?? []\n      ),\n    [calls]\n  )\n\n  // update listeners when there is an actual change that persists for at least 100ms\n  useEffect(() => {\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\n    if (!chainId || callKeys.length === 0) return undefined\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const calls = callKeys.map((key) => parseCallKey(key))\n    dispatch(\n      addMulticallListeners({\n        chainId,\n        calls,\n        options,\n      })\n    )\n\n    return () => {\n      dispatch(\n        removeMulticallListeners({\n          chainId,\n          calls,\n          options,\n        })\n      )\n    }\n  }, [chainId, dispatch, options, serializedCallKeys])\n\n  return useMemo(\n    () =>\n      // @ts-ignore\n      calls.map<CallResult>((call) => {\n        if (!chainId || !call) return INVALID_RESULT\n\n        const result = callResults[chainId]?.[toCallKey(call)]\n        const data = result?.data && result?.data !== '0x' ? result.data : null\n\n        return { valid: true, data, blockNumber: result?.blockNumber }\n      }),\n    [callResults, calls, chainId]\n  )\n}\n\ninterface CallState {\n  readonly valid: boolean\n  // the result, or undefined if loading or errored/no data\n  readonly result: Result | undefined\n  // true if the result has never been fetched\n  readonly loading: boolean\n  // true if the result is not for the latest block\n  readonly syncing: boolean\n  // true if the call was made and is synced, but the return data is invalid\n  readonly error: boolean\n}\n\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\n\nfunction toCallState(\n  callResult: CallResult | undefined,\n  contractInterface: Interface | undefined,\n  fragment: FunctionFragment | undefined,\n  latestBlockNumber: number | undefined\n): CallState {\n  if (!callResult) return INVALID_CALL_STATE\n  const { valid, data, blockNumber } = callResult\n  if (!valid) return INVALID_CALL_STATE\n  if (valid && !blockNumber) return LOADING_CALL_STATE\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\n  const success = data && data.length > 2\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\n  let result: Result | undefined\n  if (success && data) {\n    try {\n      result = contractInterface.decodeFunctionResult(fragment, data)\n    } catch (error) {\n      console.error('Result data parsing failed', fragment, data)\n      return {\n        valid: true,\n        loading: false,\n        error: true,\n        syncing,\n        result,\n      }\n    }\n  }\n  return {\n    valid: true,\n    loading: false,\n    syncing,\n    result,\n    error: !success,\n  }\n}\n\nexport function useSingleContractMultipleData(\n  contract: Contract | null | undefined,\n  methodName: string,\n  callInputs: OptionalMethodInputs[],\n  options?: ListenerOptions\n): CallState[] {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo(\n    () =>\n      contract && fragment && callInputs && callInputs.length > 0\n        ? callInputs.map<Call>((inputs) => {\n            return {\n              address: contract.address,\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\n            }\n          })\n        : [],\n    [callInputs, contract, fragment]\n  )\n\n  const results = useCallsData(calls, options)\n\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contract?.interface, fragment, latestBlockNumber))\n  }, [fragment, contract, results, latestBlockNumber])\n}\n\nexport function useMultipleContractSingleData(\n  addresses: (string | undefined)[],\n  contractInterface: Interface,\n  methodName: string,\n  callInputs?: OptionalMethodInputs,\n  options?: ListenerOptions\n): CallState[] {\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\n  const callData: string | undefined = useMemo(\n    () =>\n      fragment && isValidMethodArgs(callInputs)\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\n        : undefined,\n    [callInputs, contractInterface, fragment]\n  )\n\n  const calls = useMemo(\n    () =>\n      fragment && addresses && addresses.length > 0 && callData\n        ? addresses.map<Call | undefined>((address) => {\n            return address && callData\n              ? {\n                  address,\n                  callData,\n                }\n              : undefined\n          })\n        : [],\n    [addresses, callData, fragment]\n  )\n\n  const results = useCallsData(calls, options)\n\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contractInterface, fragment, latestBlockNumber))\n  }, [fragment, results, contractInterface, latestBlockNumber])\n}\n\nexport function useSingleCallResult(\n  contract: Contract | null | undefined,\n  methodName: string,\n  inputs?: OptionalMethodInputs,\n  options?: ListenerOptions\n): CallState {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo<Call[]>(() => {\n    return contract && fragment && isValidMethodArgs(inputs)\n      ? [\n          {\n            address: contract.address,\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\n          },\n        ]\n      : []\n  }, [contract, fragment, inputs])\n\n  const result = useCallsData(calls, options)[0]\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return toCallState(result, contract?.interface, fragment, latestBlockNumber)\n  }, [result, contract, fragment, latestBlockNumber])\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/lists/hooks.ts",["865"],"import { ChainId, Token } from '@nguyenphu27/sdk'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../index'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<{ [chainId in ChainId]: Readonly<{ [tokenAddress: string]: WrappedTokenInfo }> }>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {}\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map(tagId => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: token\n        }\n      }\n    },\n    { ...EMPTY_LIST }\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useTokenList(url: string | undefined): TokenAddressMap {\n  const lists = useSelector<AppState, AppState['lists']['byUrl']>(state => state.lists.byUrl)\n  return useMemo(() => {\n    if (!url) return EMPTY_LIST\n    const current = lists[url]?.current\n    if (!current) return EMPTY_LIST\n    try {\n      return listToTokenMap(current)\n    } catch (error) {\n      console.error('Could not show token list due to error', error)\n      return EMPTY_LIST\n    }\n  }, [lists, url])\n}\n\nexport function useSelectedListUrl(): string | undefined {\n  return useSelector<AppState, AppState['lists']['selectedListUrl']>(state => state.lists.selectedListUrl)\n}\n\nexport function useSelectedTokenList(): TokenAddressMap {\n  return useTokenList(useSelectedListUrl())\n}\n\nexport function useSelectedListInfo(): { current: TokenList | null; pending: TokenList | null; loading: boolean } {\n  const selectedUrl = useSelectedListUrl()\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>(state => state.lists.byUrl)\n  const list = selectedUrl ? listsByUrl[selectedUrl] : undefined\n  return {\n    current: list?.current ?? null,\n    pending: list?.pendingUpdate ?? null,\n    loading: list?.loadingRequestId !== null\n  }\n}\n\n// returns all downloaded current lists\nexport function useAllLists(): TokenList[] {\n  const lists = useSelector<AppState, AppState['lists']['byUrl']>(state => state.lists.byUrl)\n\n  return useMemo(\n    () =>\n      Object.keys(lists)\n        .map(url => lists[url].current)\n        .filter((l): l is TokenList => Boolean(l)),\n    [lists]\n  )\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/Row/index.tsx",["866"],"import styled from 'styled-components'\nimport { Box } from 'rebass/styled-components'\n\nconst Row = styled(Box)<{ align?: string; padding?: string; border?: string; borderRadius?: string }>`\n  width: 100%;\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => (align || 'center')};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/Column/index.tsx",["867"],"import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/data/Reserves.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/Trades.ts",["868"],"import { Currency, CurrencyAmount, Pair, Token, Trade } from '@nguyenphu27/sdk'\nimport flatMap from 'lodash.flatmap'\nimport { useMemo } from 'react'\n\nimport { BASES_TO_CHECK_TRADES_AGAINST, CUSTOM_BASES } from '../constants'\nimport { PairState, usePairs } from '../data/Reserves'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nimport { useActiveWeb3React } from './index'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  // Base tokens for building intermediary trading routes\n  const bases: Token[] = useMemo(() => (chainId ? BASES_TO_CHECK_TRADES_AGAINST[chainId] : []), [chainId])\n\n  // All pairs from base tokens\n  const basePairs: [Token, Token][] = useMemo(\n    () =>\n      flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])).filter(\n        ([t0, t1]) => t0.address !== t1.address\n      ),\n    [bases]\n  )\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            // This filter will remove all the pairs that are not supported by the CUSTOM_BASES settings\n            // This option is currently not used on Pancake swap\n            .filter(([t0, t1]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n              if (!customBases) return true\n\n              const customBasesA: Token[] | undefined = customBases[t0.address]\n              const customBasesB: Token[] | undefined = customBases[t1.address]\n\n              if (!customBasesA && !customBasesB) return true\n              if (customBasesA && !customBasesA.find((base) => t1.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => t0.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId]\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {})\n      ),\n    [allPairs]\n  )\n}\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      return (\n        Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 3, maxNumResults: 1 })[0] ?? null\n      )\n    }\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      return (\n        Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 3, maxNumResults: 1 })[0] ??\n        null\n      )\n    }\n    return null\n  }, [allowedPairs, currencyIn, currencyAmountOut])\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/swap/hooks.ts",["869"],"import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@nguyenphu27/sdk'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from '../../hooks/useENS'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { useTradeExactIn, useTradeExactOut } from '../../hooks/Trades'\nimport useParsedQueryString from '../../hooks/useParsedQueryString'\nimport { isAddress } from '../../utils'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\n\nimport { useUserSlippageTolerance } from '../user/hooks'\nimport { computeSlippageAdjustedAmounts } from '../../utils/prices'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BNB' : '',\n        })\n      )\n    },\n    [dispatch]\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch]\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch]\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.info(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0xBCfCcbde45cE874adCB698cC183deBcF17952812', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x05fF2B0DB69458A0750badebc4f9e13aDd608C7F', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = 'Connect Wallet'\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? 'Enter an amount'\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? 'Select a token'\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? 'Enter a recipient'\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? 'Invalid recipient'\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = `Insufficient ${amountIn.currency.symbol} balance`\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\n    if (valid === false) return 'BNB'\n  }\n  return ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: parsed.recipient,\n      })\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/utils/translateTextHelpers.ts",["870"],"import { useContext } from 'react'\nimport { TranslationsContext } from '../hooks/TranslationsContext'\n\nconst variableRegex = /%(.*?)%/\n\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const stringToReplace = variableRegex.exec(foundTranslation)![0]\n  const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\n  const fallbackValueAtIndex = fallback.split(' ')[indexToReplace]\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\n}\n\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\n  const foundTranslation = translations.find((translation) => {\n    return translation.data.stringId === translationId\n  })\n  if (foundTranslation) {\n    const translatedString = foundTranslation.data.text\n    const includesVariable = translatedString.includes('%')\n    if (includesVariable) {\n      return replaceDynamicString(translatedString, fallback)\n    }\n    return translatedString\n  }\n  return fallback\n}\n\nexport const TranslateString = (translationId: number, fallback: string) => {\n  const { translations } = useContext(TranslationsContext)\n  if (translations[0] === 'error') {\n    return fallback\n  }\n  if (translations.length > 0) {\n    return getTranslation(translations, translationId, fallback)\n  }\n  return null\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/wallet/hooks.ts",["871"],"import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@nguyenphu27/sdk'\nimport { useMemo } from 'react'\nimport ERC20_INTERFACE from '../../constants/abis/erc20'\nimport { useAllTokens } from '../../hooks/Tokens'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useMulticallContract } from '../../hooks/useContract'\nimport { isAddress } from '../../utils'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent ETH balances.\n */\nexport function useETHBalances(\n  uncheckedAddresses?: (string | undefined)[]\n): { [address: string]: CurrencyAmount | undefined } {\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses]\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map(address => [address])\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results]\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[]\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens]\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map(vt => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some(callState => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances]\n    ),\n    anyLoading\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[]\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[]\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(() => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [], [\n    currencies\n  ])\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsETH: boolean = useMemo(() => currencies?.some(currency => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useETHBalances(containsETH ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map(currency => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances]\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useActiveWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/utils/wrappedCurrency.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/PositionCard/index.tsx",["872"],"import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@nguyenphu27/sdk'\nimport { Button, Card as UIKitCard, CardBody, Text } from '@nguyenphu27/uikit'\nimport { darken } from 'polished'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTotalSupply } from '../../data/TotalSupply'\n\nimport { useActiveWeb3React } from '../../hooks'\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { currencyId } from '../../utils/currencyId'\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\nimport Card from '../Card'\nimport { AutoColumn } from '../Column'\nimport CurrencyLogo from '../CurrencyLogo'\nimport DoubleCurrencyLogo from '../DoubleLogo'\nimport { RowBetween, RowFixed } from '../Row'\nimport { Dots } from '../swap/styleds'\n\nexport const FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\nexport const HoverCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.invertedContrast};\n  :hover {\n    border: 1px solid ${({ theme }) => darken(0.06, theme.colors.invertedContrast)};\n  }\n`\n\ninterface PositionCardProps {\n  pair: Pair\n  // eslint-disable-next-line react/no-unused-prop-types\n  showUnwrapped?: boolean\n  // eslint-disable-next-line react/no-unused-prop-types\n  removeOnly?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && (\n        <UIKitCard>\n          <CardBody>\n            <AutoColumn gap=\"12px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text style={{ textTransform: 'uppercase', fontWeight: 600 }} fontSize=\"14px\" color=\"textSubtle\">\n                    LP Tokens in your Wallet\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text fontSize=\"14px\">\n                    {currency0.symbol}/{currency1.symbol}\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text fontSize=\"14px\">{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text fontSize=\"14px\">{currency0.symbol}:</Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\" fontSize=\"14px\">\n                        {token0Deposited?.toSignificant(6)}\n                      </Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text fontSize=\"14px\">{currency1.symbol}:</Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\" fontSize=\"14px\">\n                        {token1Deposited?.toSignificant(6)}\n                      </Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </UIKitCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, removeOnly }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <HoverCard>\n      <AutoColumn gap=\"12px\">\n        <FixedHeightRow onClick={() => setShowMore(!showMore)} style={{ cursor: 'pointer' }}>\n          <RowFixed>\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n            <Text>{!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}</Text>\n          </RowFixed>\n          <RowFixed>\n            {showMore ? (\n              <ChevronUp size=\"20\" style={{ marginLeft: '10px' }} />\n            ) : (\n              <ChevronDown size=\"20\" style={{ marginLeft: '10px' }} />\n            )}\n          </RowFixed>\n        </FixedHeightRow>\n        {showMore && (\n          <AutoColumn gap=\"8px\">\n            <FixedHeightRow>\n              <RowFixed>\n                <Text>Pooled {currency0.symbol}:</Text>\n              </RowFixed>\n              {token0Deposited ? (\n                <RowFixed>\n                  <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                  <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={currency0} />\n                </RowFixed>\n              ) : (\n                '-'\n              )}\n            </FixedHeightRow>\n\n            <FixedHeightRow>\n              <RowFixed>\n                <Text>Pooled {currency1.symbol}:</Text>\n              </RowFixed>\n              {token1Deposited ? (\n                <RowFixed>\n                  <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                  <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={currency1} />\n                </RowFixed>\n              ) : (\n                '-'\n              )}\n            </FixedHeightRow>\n            <FixedHeightRow>\n              <Text>Your pool tokens:</Text>\n              <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n            </FixedHeightRow>\n            <FixedHeightRow>\n              <Text>Your pool share:</Text>\n              <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(2)}%` : '-'}</Text>\n            </FixedHeightRow>\n\n            <RowBetween marginTop=\"10px\">\n              {removeOnly && (\n                <Button\n                  as={Link}\n                  to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\n                  style={{ width: '48%' }}\n                >\n                  Add\n                </Button>\n              )}\n              <Button\n                as={Link}\n                style={{ width: '48%' }}\n                to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\n              >\n                Remove\n              </Button>\n            </RowBetween>\n          </AutoColumn>\n        )}\n      </AutoColumn>\n    </HoverCard>\n  )\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/Shared/index.tsx",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/utils/prices.ts",["873"],"import { CurrencyAmount, Fraction, JSBI, Percent, TokenAmount, Trade } from '@nguyenphu27/sdk'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../constants'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(20), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(\n  trade?: Trade\n): { priceImpactWithoutFee?: Percent; realizedLPFee?: CurrencyAmount } {\n  // for each hop in our trade, take away the x*y=k price impact from 0.2% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .02) * (1-.02))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT\n        )\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useParsedQueryString.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useENS.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/FoldableText/index.tsx",["874"],"import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { ExpandableLabel, Flex, FlexProps, Text } from '@nguyenphu27/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface FoldableTextProps extends FlexProps {\n  title?: string\n}\n\nconst Wrapper = styled(Flex)`\n  cursor: pointer;\n`\n\nconst StyledExpandableLabelWrapper = styled(Flex)`\n  button {\n    align-items: center;\n    justify-content: flex-start;\n  }\n`\n\nconst StyledChildrenFlex = styled(Flex)<{ isExpanded?: boolean }>`\n  overflow: hidden;\n  height: ${({ isExpanded }) => (isExpanded ? '100%' : '0px')};\n  padding-bottom: ${({ isExpanded }) => (isExpanded ? '16px' : '0px')};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n`\n\nconst FoldableText: React.FC<FoldableTextProps> = ({ title, children, ...props }) => {\n  const TranslateString = useI18n()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  return (\n    <Wrapper {...props} flexDirection=\"column\" onClick={() => setIsExpanded(!isExpanded)}>\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" pb=\"16px\">\n        <Text bold>{title}</Text>\n        <StyledExpandableLabelWrapper>\n          <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n            {isExpanded ? TranslateString(1066, 'Hide') : TranslateString(658, 'Details')}\n          </ExpandableLabel>\n        </StyledExpandableLabelWrapper>\n      </Flex>\n      <StyledChildrenFlex isExpanded={isExpanded} flexDirection=\"column\">\n        {children}\n      </StyledChildrenFlex>\n    </Wrapper>\n  )\n}\n\nexport default FoldableText\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/Shared/Common.tsx",["875"],"import React, { HTMLProps, useCallback } from 'react'\nimport { Link } from 'react-router-dom'\nimport styled, { keyframes } from 'styled-components'\n\n// A button that triggers some onClick result, but looks like a link.\nexport const LinkStyledButton = styled.button<{ disabled?: boolean }>`\n  border: none;\n  text-decoration: none;\n  background: none;\n\n  cursor: ${({ disabled }) => (disabled ? 'default' : 'pointer')};\n  color: ${({ theme, disabled }) => (disabled ? theme.colors.textSubtle : theme.colors.primary)};\n  font-weight: 500;\n\n  :hover {\n    text-decoration: ${({ disabled }) => (disabled ? null : 'underline')};\n  }\n\n  :focus {\n    outline: none;\n    text-decoration: ${({ disabled }) => (disabled ? null : 'underline')};\n  }\n\n  :active {\n    text-decoration: none;\n  }\n`\n\n// An internal link from the react-router-dom library that is correctly styled\nexport const StyledInternalLink = styled(Link)`\n  text-decoration: none;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.primary};\n  font-weight: 500;\n\n  :hover {\n    text-decoration: underline;\n  }\n\n  :focus {\n    outline: none;\n    text-decoration: underline;\n  }\n\n  :active {\n    text-decoration: none;\n  }\n`\n\nconst StyledLink = styled.a`\n  text-decoration: none;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.primary};\n  font-weight: 500;\n\n  :hover {\n    text-decoration: underline;\n  }\n\n  :focus {\n    outline: none;\n    text-decoration: underline;\n  }\n\n  :active {\n    text-decoration: none;\n  }\n`\n\n/**\n * Outbound link that handles firing google analytics events\n */\nexport function ExternalLink({\n  target = '_blank',\n  href,\n  rel = 'noopener noreferrer',\n  ...rest\n}: Omit<HTMLProps<HTMLAnchorElement>, 'as' | 'ref' | 'onClick'> & { href: string }) {\n  const handleClick = useCallback(\n    (event: React.MouseEvent<HTMLAnchorElement>) => {\n      if (!(target === '_blank' || event.ctrlKey || event.metaKey)) {\n        event.preventDefault()\n      }\n    },\n    [target]\n  )\n  return <StyledLink target={target} rel={rel} href={href} onClick={handleClick} {...rest} />\n}\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nexport const Spinner = styled.img`\n  animation: 2s ${rotate} linear infinite;\n  width: 16px;\n  height: 16px;\n`\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/swap/styleds.tsx",["876"],"import { transparentize } from 'polished'\nimport React from 'react'\nimport { AlertTriangle } from 'react-feather'\nimport { Text } from '@nguyenphu27/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from '../Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const SectionBreak = styled.div`\n  height: 1px;\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.tertiary};\n`\n\nexport const BottomGrouping = styled.div`\n  margin-top: 1rem;\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.binance\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.textSubtle};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.tertiary};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.tertiary};\n    outline: none;\n  }\n`\n\n// styles\nexport const Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => transparentize(0.9, theme.colors.failure)};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => transparentize(0.9, theme.colors.failure)};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <AlertTriangle size={24} />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => transparentize(0.9, theme.colors.primary)};\n  color: ${({ theme }) => theme.colors.primary};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/SearchModal/CurrencySearchModal.tsx",["877"],"import { Currency } from '@nguyenphu27/sdk'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport useLast from '../../hooks/useLast'\nimport { useSelectedListUrl } from '../../state/lists/hooks'\nimport Modal from '../Modal'\nimport { CurrencySearch } from './CurrencySearch'\nimport { ListSelect } from './ListSelect'\n\ninterface CurrencySearchModalProps {\n  isOpen: boolean\n  onDismiss: () => void\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  // eslint-disable-next-line react/no-unused-prop-types\n  showCommonBases?: boolean\n}\n\nexport default function CurrencySearchModal({\n  isOpen,\n  onDismiss,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n}: CurrencySearchModalProps) {\n  const [listView, setListView] = useState<boolean>(false)\n  const lastOpen = useLast(isOpen)\n\n  useEffect(() => {\n    if (isOpen && !lastOpen) {\n      setListView(false)\n    }\n  }, [isOpen, lastOpen])\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      onDismiss()\n    },\n    [onDismiss, onCurrencySelect]\n  )\n\n  const handleClickChangeList = useCallback(() => {\n    setListView(true)\n  }, [])\n  const handleClickBack = useCallback(() => {\n    setListView(false)\n  }, [])\n\n  const selectedListUrl = useSelectedListUrl()\n  const noListSelected = !selectedListUrl\n\n  return (\n    <Modal isOpen={isOpen} onDismiss={onDismiss} maxHeight={90} minHeight={listView ? 40 : noListSelected ? 0 : 80}>\n      {listView ? (\n        <ListSelect onDismiss={onDismiss} onBack={handleClickBack} />\n      ) : noListSelected ? (\n        <CurrencySearch\n          isOpen={isOpen}\n          onDismiss={onDismiss}\n          onCurrencySelect={handleCurrencySelect}\n          onChangeList={handleClickChangeList}\n          selectedCurrency={selectedCurrency}\n          otherSelectedCurrency={otherSelectedCurrency}\n          showCommonBases={false}\n        />\n      ) : (\n        <CurrencySearch\n          isOpen={isOpen}\n          onDismiss={onDismiss}\n          onCurrencySelect={handleCurrencySelect}\n          onChangeList={handleClickChangeList}\n          selectedCurrency={selectedCurrency}\n          otherSelectedCurrency={otherSelectedCurrency}\n          showCommonBases={false}\n        />\n      )}\n    </Modal>\n  )\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useENSName.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useENSAddress.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/data/TotalSupply.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/DoubleLogo/index.tsx",["878"],"import { Currency } from '@nguyenphu27/sdk'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from '../CurrencyLogo'\n\nconst Wrapper = styled.div<{ margin: boolean; sizeraw: number }>`\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ sizeraw, margin }) => margin && `${(sizeraw / 3 + 8).toString()  }px`};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nconst HigherLogo = styled(CurrencyLogo)`\n  z-index: 2;\n`\nconst CoveredLogo = styled(CurrencyLogo)<{ sizeraw: number }>`\n  position: absolute;\n  left: ${({ sizeraw }) => `${(sizeraw / 2).toString()  }px`};\n`\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 16,\n  margin = false\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper sizeraw={size} margin={margin}>\n      {currency0 && <HigherLogo currency={currency0} size={`${size.toString()  }px`} />}\n      {currency1 && <CoveredLogo currency={currency1} size={`${size.toString()  }px`} sizeraw={size} />}\n    </Wrapper>\n  )\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/CurrencyLogo/index.tsx",["879"],"import { Currency, ETHER, Token } from '@nguyenphu27/sdk'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\nimport Logo from '../Logo'\nimport CoinLogo from '../pancake/CoinLogo'\n\nconst getTokenLogoURL = (address: string) =>\n  `https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/smartchain/assets/${address}/logo.png`\n\nconst StyledBnbLogo = styled.img<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\n  border-radius: 24px;\n`\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, `/images/coins/${currency?.address ?? 'token'}.png`, getTokenLogoURL(currency.address)]\n      }\n\n      return [`/images/coins/${currency?.address ?? 'token'}.png`, getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <StyledBnbLogo src=\"/images/coins/bnb.png\" size={size} style={style} />\n  }\n\n  return (currency as any)?.symbol ? (\n    <CoinLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n  ) : (\n    <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n  )\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/Popups/PopupItem.tsx",["880"],"import React, { useCallback, useContext, useEffect } from 'react'\nimport { X } from 'react-feather'\nimport { useSpring , animated } from 'react-spring/web'\nimport styled, { ThemeContext } from 'styled-components'\n// import { animated } from 'react-spring'\nimport { PopupContent } from '../../state/application/actions'\nimport { useRemovePopup } from '../../state/application/hooks'\nimport ListUpdatePopup from './ListUpdatePopup'\nimport TransactionPopup from './TransactionPopup'\n\nexport const StyledClose = styled(X)`\n  position: absolute;\n  right: 10px;\n  top: 10px;\n\n  :hover {\n    cursor: pointer;\n  }\n`\nexport const Popup = styled.div`\n  display: inline-block;\n  width: 100%;\n  padding: 1em;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  position: relative;\n  border-radius: 10px;\n  padding: 20px;\n  padding-right: 35px;\n  overflow: hidden;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 290px;\n  }\n`\nconst Fader = styled.div`\n  position: absolute;\n  bottom: 0px;\n  left: 0px;\n  width: 100%;\n  height: 2px;\n  background-color: ${({ theme }) => theme.colors.tertiary};\n`\n\nconst AnimatedFader = animated(Fader)\n\nexport default function PopupItem({\n  removeAfterMs,\n  content,\n  popKey\n}: {\n  removeAfterMs: number | null\n  content: PopupContent\n  popKey: string\n}) {\n  const removePopup = useRemovePopup()\n  const removeThisPopup = useCallback(() => removePopup(popKey), [popKey, removePopup])\n  useEffect(() => {\n    if (removeAfterMs === null) return undefined\n\n    const timeout = setTimeout(() => {\n      removeThisPopup()\n    }, removeAfterMs)\n\n    return () => {\n      clearTimeout(timeout)\n    }\n  }, [removeAfterMs, removeThisPopup])\n\n  const theme = useContext(ThemeContext)\n\n  let popupContent\n  if ('txn' in content) {\n    const {\n      txn: { hash, success, summary }\n    } = content\n    popupContent = <TransactionPopup hash={hash} success={success} summary={summary} />\n  } else if ('listUpdate' in content) {\n    const {\n      listUpdate: { listUrl, oldList, newList, auto }\n    } = content\n    popupContent = <ListUpdatePopup popKey={popKey} listUrl={listUrl} oldList={oldList} newList={newList} auto={auto} />\n  }\n\n  const faderStyle = useSpring({\n    from: { width: '100%' },\n    to: { width: '0%' },\n    config: { duration: removeAfterMs ?? undefined }\n  })\n\n  return (\n    <Popup>\n      <StyledClose color={theme.colors.textSubtle} onClick={removeThisPopup} />\n      {popupContent}\n      {removeAfterMs !== null ? <AnimatedFader style={faderStyle} /> : null}\n    </Popup>\n  )\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/NavigationTabs/index.tsx",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/Card/index.tsx",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/CardNav/index.tsx",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/PageHeader/index.tsx",["881"],"import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\nimport { Heading, IconButton, Text, Flex, useModal, TuneIcon, HistoryIcon } from '@nguyenphu27/uikit'\nimport useI18n from 'hooks/useI18n'\nimport SettingsModal from './SettingsModal'\nimport RecentTransactionsModal from './RecentTransactionsModal'\n\ninterface PageHeaderProps {\n  title: ReactNode\n  description?: ReactNode\n  children?: ReactNode\n}\n\nconst StyledPageHeader = styled.div`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  padding: 24px;\n`\n\nconst Details = styled.div`\n  flex: 1;\n`\n\nconst PageHeader = ({ title, description, children }: PageHeaderProps) => {\n  const TranslateString = useI18n()\n  const [onPresentSettings] = useModal(<SettingsModal translateString={TranslateString} />)\n  const [onPresentRecentTransactions] = useModal(<RecentTransactionsModal translateString={TranslateString} />)\n\n  return (\n    <StyledPageHeader>\n      <Flex alignItems=\"center\">\n        <Details>\n          <Heading mb=\"8px\">{title}</Heading>\n          {description && (\n            <Text color=\"textSubtle\" fontSize=\"14px\">\n              {description}\n            </Text>\n          )}\n        </Details>\n        <IconButton variant=\"text\" onClick={onPresentSettings} title={TranslateString(1200, 'Settings')}>\n          <TuneIcon width=\"24px\" color=\"currentColor\" />\n        </IconButton>\n        <IconButton\n          variant=\"text\"\n          onClick={onPresentRecentTransactions}\n          title={TranslateString(1202, 'Recent transactions')}\n        >\n          <HistoryIcon width=\"24px\" color=\"currentColor\" />\n        </IconButton>\n      </Flex>\n      {children && <Text mt=\"16px\">{children}</Text>}\n    </StyledPageHeader>\n  )\n}\n\nexport default PageHeader\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useLast.ts",["882"],"import { useEffect, useState } from 'react'\n\n/**\n * Returns the last value of type T that passes a filter function\n * @param value changing value\n * @param filterFn function that determines whether a given value should be considered for the last value\n */\nexport default function useLast<T>(\n  value: T | undefined | null,\n  filterFn?: (value: T | null | undefined) => boolean\n): T | null | undefined {\n  const [last, setLast] = useState<T | null | undefined>(filterFn && filterFn(value) ? value : undefined)\n  useEffect(() => {\n    setLast((prev) => {\n      const shouldUse: boolean = filterFn ? filterFn(value) : true\n      if (shouldUse) return value\n      return prev\n    })\n  }, [filterFn, value])\n  return last\n}\n\nfunction isDefined<T>(x: T | null | undefined): x is T {\n  return x !== null && x !== undefined\n}\n\n/**\n * Returns the last truthy value of type T\n * @param value changing value\n */\nexport function useLastTruthy<T>(value: T | undefined | null): T | null | undefined {\n  return useLast(value, isDefined)\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/SearchModal/ListSelect.tsx",["883"],"import React, { memo, useCallback, useMemo, useRef, useState } from 'react'\nimport { ArrowLeft } from 'react-feather'\nimport { usePopper } from 'react-popper'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Button, Text, ChevronDownIcon, CloseIcon } from '@nguyenphu27/uikit'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\nimport { useFetchListCallback } from '../../hooks/useFetchListCallback'\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside'\nimport useToggle from '../../hooks/useToggle'\nimport { AppDispatch, AppState } from '../../state'\nimport { acceptListUpdate, removeList, selectList } from '../../state/lists/actions'\nimport { useSelectedListUrl } from '../../state/lists/hooks'\nimport { ExternalLink, LinkStyledButton } from '../Shared'\nimport listVersionLabel from '../../utils/listVersionLabel'\nimport { parseENSAddress } from '../../utils/parseENSAddress'\nimport uriToHttp from '../../utils/uriToHttp'\nimport Column from '../Column'\nimport ListLogo from '../ListLogo'\nimport QuestionHelper from '../QuestionHelper'\nimport Row, { RowBetween } from '../Row'\nimport { PaddedColumn, SearchInput, Separator, SeparatorDark } from './styleds'\n\nconst UnpaddedLinkStyledButton = styled(LinkStyledButton)`\n  padding: 0;\n  font-size: 1rem;\n  opacity: ${({ disabled }) => (disabled ? '0.4' : '1')};\n`\n\nconst PopoverContainer = styled.div<{ show: boolean }>`\n  z-index: 100;\n  visibility: ${(props) => (props.show ? 'visible' : 'hidden')};\n  opacity: ${(props) => (props.show ? 1 : 0)};\n  transition: visibility 150ms linear, opacity 150ms linear;\n  background: ${({ theme }) => theme.colors.invertedContrast};\n  border: 1px solid ${({ theme }) => theme.colors.tertiary};\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\n    0px 24px 32px rgba(0, 0, 0, 0.01);\n  color: ${({ theme }) => theme.colors.textSubtle};\n  border-radius: 0.5rem;\n  padding: 1rem;\n  display: grid;\n  grid-template-rows: 1fr;\n  grid-gap: 8px;\n  font-size: 1rem;\n  text-align: left;\n`\n\nconst StyledMenu = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  border: none;\n`\n\nconst StyledListUrlText = styled.div`\n  max-width: 160px;\n  opacity: 0.6;\n  margin-right: 0.5rem;\n  font-size: 14px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nfunction ListOrigin({ listUrl }: { listUrl: string }) {\n  const ensName = useMemo(() => parseENSAddress(listUrl)?.ensName, [listUrl])\n  const host = useMemo(() => {\n    if (ensName) return undefined\n    const lowerListUrl = listUrl.toLowerCase()\n    if (lowerListUrl.startsWith('ipfs://') || lowerListUrl.startsWith('ipns://')) {\n      return listUrl\n    }\n    try {\n      const url = new URL(listUrl)\n      return url.host\n    } catch (error) {\n      return undefined\n    }\n  }, [listUrl, ensName])\n  return <>{ensName ?? host}</>\n}\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl, onBack }: { listUrl: string; onBack: () => void }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const selectedListUrl = useSelectedListUrl()\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isSelected = listUrl === selectedListUrl\n\n  const [open, toggle] = useToggle(false)\n  const node = useRef<HTMLDivElement>()\n  const [referenceElement, setReferenceElement] = useState<HTMLDivElement | null>()\n  const [popperElement, setPopperElement] = useState<HTMLDivElement>()\n\n  const { styles, attributes } = usePopper(referenceElement, popperElement, {\n    placement: 'auto',\n    strategy: 'fixed',\n    modifiers: [{ name: 'offset', options: { offset: [8, 8] } }],\n  })\n\n  useOnClickOutside(node, open ? toggle : undefined)\n\n  const selectThisList = useCallback(() => {\n    if (isSelected) return\n\n    dispatch(selectList(listUrl))\n    onBack()\n  }, [dispatch, isSelected, listUrl, onBack])\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    if (window.prompt(`Please confirm you would like to remove this list by typing REMOVE`) === `REMOVE`) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n  const TranslateString = useI18n()\n  if (!list) return null\n\n  return (\n    <Row key={listUrl} align=\"center\" padding=\"16px\" id={listUrlRowHTMLId(listUrl)}>\n      {list.logoURI ? (\n        <ListLogo style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold={isSelected} fontSize=\"16px\" style={{ overflow: 'hidden', textOverflow: 'ellipsis' }}>\n            {list.name}\n          </Text>\n        </Row>\n        <Row\n          style={{\n            marginTop: '4px',\n          }}\n        >\n          <StyledListUrlText title={listUrl}>\n            <ListOrigin listUrl={listUrl} />\n          </StyledListUrlText>\n        </Row>\n      </Column>\n      <StyledMenu ref={node as any}>\n        <div style={{ display: 'inline-block' }} ref={setReferenceElement}>\n          <Button\n            style={{\n              width: '32px',\n              marginRight: '8px',\n            }}\n            onClick={toggle}\n            variant=\"secondary\"\n          >\n            <ChevronDownIcon />\n          </Button>\n        </div>\n\n        {open && (\n          <PopoverContainer show ref={setPopperElement as any} style={styles.popper} {...attributes.popper}>\n            <div>{list && listVersionLabel(list.version)}</div>\n            <SeparatorDark />\n            <ExternalLink href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n              {TranslateString(1206, 'View list')}\n            </ExternalLink>\n            <UnpaddedLinkStyledButton onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n              Remove list\n            </UnpaddedLinkStyledButton>\n            {pending && (\n              <UnpaddedLinkStyledButton onClick={handleAcceptListUpdate}>Update list</UnpaddedLinkStyledButton>\n            )}\n          </PopoverContainer>\n        )}\n      </StyledMenu>\n      {isSelected ? (\n        <Button disabled style={{ width: '5rem', minWidth: '5rem' }}>\n          Selected\n        </Button>\n      ) : (\n        <>\n          <Button\n            className=\"select-button\"\n            style={{\n              width: '5rem',\n              minWidth: '4.5rem',\n            }}\n            onClick={selectThisList}\n          >\n            Select\n          </Button>\n        </>\n      )}\n    </Row>\n  )\n})\n\nconst ListContainer = styled.div`\n  flex: 1;\n  overflow: auto;\n`\n\nexport function ListSelect({ onDismiss, onBack }: { onDismiss: () => void; onBack: () => void }) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const dispatch = useDispatch<AppDispatch>()\n  const lists = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const adding = Boolean(lists[listUrlInput]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n    setAddError(null)\n  }, [])\n  const fetchList = useFetchListCallback()\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listUrlInput)\n      .then(() => {\n        setListUrlInput('')\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listUrlInput))\n      })\n  }, [adding, dispatch, fetchList, listUrlInput])\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const handleEnterKey = useCallback(\n    (e) => {\n      if (validUrl && e.key === 'Enter') {\n        handleAddList()\n      }\n    },\n    [handleAddList, validUrl]\n  )\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        return Boolean(lists[listUrl].current)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists])\n  const TranslateString = useI18n()\n  return (\n    <Column style={{ width: '100%', flex: '1 1' }}>\n      <PaddedColumn>\n        <RowBetween>\n          <div>\n            <ArrowLeft style={{ cursor: 'pointer' }} onClick={onBack} />\n          </div>\n          <Text fontSize=\"20px\">{TranslateString(1208, 'Manage Lists')}</Text>\n          <CloseIcon onClick={onDismiss} />\n        </RowBetween>\n      </PaddedColumn>\n\n      <Separator />\n\n      <PaddedColumn gap=\"14px\">\n        <Text bold>\n          Add a list{' '}\n          <QuestionHelper\n            text={TranslateString(\n              999,\n              'Token lists are an open specification for lists of BEP20 tokens. You can use any token list by entering its URL below. Beware that third party token lists can contain fake or malicious BEP20 tokens.'\n            )}\n          />\n        </Text>\n        <Row>\n          <SearchInput\n            type=\"text\"\n            id=\"list-add-input\"\n            placeholder=\"https:// or ipfs:// or ENS name\"\n            value={listUrlInput}\n            onChange={handleInput}\n            onKeyDown={handleEnterKey}\n            style={{ height: '2.75rem', borderRadius: 12, padding: '12px' }}\n          />\n          <Button onClick={handleAddList} style={{ maxWidth: '4em', marginLeft: '1em' }} disabled={!validUrl}>\n            Add\n          </Button>\n        </Row>\n        {addError ? (\n          <Text color=\"failure\" title={addError} style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </PaddedColumn>\n\n      <Separator />\n\n      <ListContainer>\n        {sortedLists.map((listUrl) => (\n          <ListRow key={listUrl} listUrl={listUrl} onBack={onBack} />\n        ))}\n      </ListContainer>\n      <Separator />\n\n      <div style={{ padding: '16px', textAlign: 'center' }}>\n        <ExternalLink href=\"https://tokenlists.org\">Browse lists</ExternalLink>\n      </div>\n    </Column>\n  )\n}\n\nexport default ListSelect\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/SearchModal/CurrencySearch.tsx",["884"],"import { Currency, ETHER, Token } from '@nguyenphu27/sdk'\nimport React, { KeyboardEvent, RefObject, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react'\nimport { Text, CloseIcon } from '@nguyenphu27/uikit'\nimport { useSelector } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\nimport { FixedSizeList } from 'react-window'\nimport { ThemeContext } from 'styled-components'\nimport AutoSizer from 'react-virtualized-auto-sizer'\nimport useI18n from 'hooks/useI18n'\nimport { useActiveWeb3React } from '../../hooks'\nimport { AppState } from '../../state'\nimport { useAllTokens, useToken } from '../../hooks/Tokens'\nimport { useSelectedListInfo } from '../../state/lists/hooks'\nimport { LinkStyledButton } from '../Shared'\nimport { isAddress } from '../../utils'\nimport Card from '../Card'\nimport Column from '../Column'\nimport ListLogo from '../ListLogo'\nimport QuestionHelper from '../QuestionHelper'\nimport Row, { RowBetween } from '../Row'\nimport CommonBases from './CommonBases'\nimport CurrencyList from './CurrencyList'\nimport { filterTokens } from './filtering'\nimport SortButton from './SortButton'\nimport { useTokenComparator } from './sorting'\nimport { PaddedColumn, SearchInput, Separator } from './styleds'\n\ninterface CurrencySearchProps {\n  isOpen: boolean\n  onDismiss: () => void\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n  onChangeList: () => void\n}\n\nexport function CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showCommonBases,\n  onDismiss,\n  isOpen,\n  onChangeList,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const theme = useContext(ThemeContext)\n\n  const fixedList = useRef<FixedSizeList>()\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const [invertSearchOrder, setInvertSearchOrder] = useState<boolean>(false)\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const isAddressSearch = isAddress(searchQuery)\n  const searchToken = useToken(searchQuery)\n\n  const showETH: boolean = useMemo(() => {\n    const s = searchQuery.toLowerCase().trim()\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\n  }, [searchQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    if (isAddressSearch) return searchToken ? [searchToken] : []\n    return filterTokens(Object.values(allTokens), searchQuery)\n  }, [isAddressSearch, searchToken, allTokens, searchQuery])\n\n  const filteredSortedTokens: Token[] = useMemo(() => {\n    if (searchToken) return [searchToken]\n    const sorted = filteredTokens.sort(tokenComparator)\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n    if (symbolMatch.length > 1) return sorted\n\n    return [\n      ...(searchToken ? [searchToken] : []),\n      // sort any exact symbol matches first\n      ...sorted.filter((token) => token.symbol?.toLowerCase() === symbolMatch[0]),\n      ...sorted.filter((token) => token.symbol?.toLowerCase() !== symbolMatch[0]),\n    ]\n  }, [filteredTokens, searchQuery, searchToken, tokenComparator])\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      onDismiss()\n      if (audioPlay) {\n        const audio = document.getElementById('bgMusic') as HTMLAudioElement\n        if (audio) {\n          audio.play()\n        }\n      }\n    },\n    [onDismiss, onCurrencySelect, audioPlay]\n  )\n\n  // clear the input on open\n  useEffect(() => {\n    if (isOpen) setSearchQuery('')\n  }, [isOpen])\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = searchQuery.toLowerCase().trim()\n        if (s === 'bnb') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === searchQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, searchQuery]\n  )\n\n  const selectedListInfo = useSelectedListInfo()\n  const TranslateString = useI18n()\n  return (\n    <Column style={{ width: '100%', flex: '1 1' }}>\n      <PaddedColumn gap=\"14px\">\n        <RowBetween>\n          <Text>\n            {TranslateString(82, 'Select a token')}\n            <QuestionHelper\n              text={TranslateString(\n                128,\n                'Find a token by searching for its name or symbol or by pasting its address below.'\n              )}\n            />\n          </Text>\n          <CloseIcon onClick={onDismiss} />\n        </RowBetween>\n        <SearchInput\n          type=\"text\"\n          id=\"token-search-input\"\n          placeholder={t('tokenSearchPlaceholder')}\n          value={searchQuery}\n          ref={inputRef as RefObject<HTMLInputElement>}\n          onChange={handleInput}\n          onKeyDown={handleEnter}\n        />\n        {showCommonBases && (\n          <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\n        )}\n        <RowBetween>\n          <Text fontSize=\"14px\">{TranslateString(126, 'Token name')}</Text>\n          <SortButton ascending={invertSearchOrder} toggleSortOrder={() => setInvertSearchOrder((iso) => !iso)} />\n        </RowBetween>\n      </PaddedColumn>\n\n      <Separator />\n\n      <div style={{ flex: '1' }}>\n        <AutoSizer disableWidth>\n          {({ height }) => (\n            <CurrencyList\n              height={height}\n              showETH={showETH}\n              currencies={filteredSortedTokens}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n            />\n          )}\n        </AutoSizer>\n      </div>\n\n      {null && (\n        <>\n          <Separator />\n          <Card>\n            <RowBetween>\n              {selectedListInfo.current ? (\n                <Row>\n                  {selectedListInfo.current.logoURI ? (\n                    <ListLogo\n                      style={{ marginRight: 12 }}\n                      logoURI={selectedListInfo.current.logoURI}\n                      alt={`${selectedListInfo.current.name} list logo`}\n                    />\n                  ) : null}\n                  <Text id=\"currency-search-selected-list-name\">{selectedListInfo.current.name}</Text>\n                </Row>\n              ) : null}\n              <LinkStyledButton\n                style={{ fontWeight: 500, color: theme.colors.textSubtle, fontSize: 16 }}\n                onClick={onChangeList}\n                id=\"currency-search-change-list-button\"\n              >\n                {selectedListInfo.current ? TranslateString(180, 'Change') : TranslateString(1152, 'Select a list')}\n              </LinkStyledButton>\n            </RowBetween>\n          </Card>\n        </>\n      )}\n    </Column>\n  )\n}\n\nexport default CurrencySearch\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/utils/isZero.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/utils/maxAmountSpend.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useWrapCallback.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useSwapCallback.ts",["885"],"import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@nguyenphu27/sdk'\nimport { useMemo } from 'react'\nimport { BIPS_BASE, DEFAULT_DEADLINE_FROM_NOW, INITIAL_ALLOWED_SLIPPAGE } from '../constants'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { calculateGasMargin, getRouterContract, isAddress, shortenAddress } from '../utils'\nimport isZero from '../utils/isZero'\nimport { useActiveWeb3React } from './index'\nimport useENS from './useENS'\n\n enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param deadline the deadline for the trade\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  deadline: number = DEFAULT_DEADLINE_FROM_NOW, // in seconds from now\n  recipientAddressOrName: string | null // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId) return []\n\n    const contract: Contract | null = getRouterContract(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      // @ts-ignore\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(Math.floor(allowedSlippage)), BIPS_BASE),\n        recipient,\n        ttl: deadline,\n      })\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        // @ts-ignore\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(Math.floor(allowedSlippage)), BIPS_BASE),\n          recipient,\n          ttl: deadline,\n        })\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  deadline: number = DEFAULT_DEADLINE_FROM_NOW, // in seconds from now\n  recipientAddressOrName: string | null // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, deadline, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.info('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.info('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.info('Call threw error', call, callError)\n                    let errorMessage: string\n                    switch (callError.reason) {\n                      case 'UniswapV2Router: INSUFFICIENT_OUTPUT_AMOUNT':\n                      case 'UniswapV2Router: EXCESSIVE_INPUT_AMOUNT':\n                        errorMessage =\n                          'This transaction will not succeed either due to price movement or fee on transfer. Try increasing your slippage tolerance.'\n                        break\n                      default:\n                        errorMessage = `The transaction cannot succeed due to error: ${callError.reason}. This is probably an issue with one of the tokens you are swapping.`\n                    }\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          })\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1])\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? shortenAddress(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction])\n}\n\nexport default useSwapCallback","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useHttpLocations.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/Loader/index.tsx",["886"],"import React from 'react'\n\nimport styled, { keyframes } from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function Loader({ size = '16px', stroke, ...rest }: { size?: string; stroke?: string }) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/pancake/CoinLogo.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/Popups/TransactionPopup.tsx",["887"],"import React, { useContext } from 'react'\nimport { AlertCircle, CheckCircle } from 'react-feather'\nimport { Text } from '@nguyenphu27/uikit'\nimport styled, { ThemeContext } from 'styled-components'\nimport { useActiveWeb3React } from '../../hooks'\nimport { getBscScanLink } from '../../utils'\nimport { ExternalLink } from '../Shared'\nimport { AutoColumn } from '../Column'\nimport { AutoRow } from '../Row'\n\nconst RowNoFlex = styled(AutoRow)`\n  flex-wrap: nowrap;\n`\n\nexport default function TransactionPopup({\n  hash,\n  success,\n  summary,\n}: {\n  hash: string\n  success?: boolean\n  summary?: string\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const theme = useContext(ThemeContext)\n\n  return (\n    <RowNoFlex>\n      <div style={{ paddingRight: 16 }}>\n        {success ? (\n          <CheckCircle color={theme.colors.success} size={24} />\n        ) : (\n          <AlertCircle color={theme.colors.failure} size={24} />\n        )}\n      </div>\n      <AutoColumn gap=\"8px\">\n        <Text>{summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Text>\n        {chainId && <ExternalLink href={getBscScanLink(chainId, hash, 'transaction')}>View on bscscan</ExternalLink>}\n      </AutoColumn>\n    </RowNoFlex>\n  )\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/Popups/ListUpdatePopup.tsx",["888"],"import React, { useCallback, useMemo } from 'react'\nimport { diffTokenLists, TokenList } from '@uniswap/token-lists'\nimport { Button, Text } from '@nguyenphu27/uikit'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from '../../state'\nimport { useRemovePopup } from '../../state/application/hooks'\nimport { acceptListUpdate } from '../../state/lists/actions'\nimport listVersionLabel from '../../utils/listVersionLabel'\nimport { AutoColumn } from '../Column'\nimport { AutoRow } from '../Row'\n\nexport default function ListUpdatePopup({\n  popKey,\n  listUrl,\n  oldList,\n  newList,\n  auto,\n}: {\n  popKey: string\n  listUrl: string\n  oldList: TokenList\n  newList: TokenList\n  auto: boolean\n}) {\n  const removePopup = useRemovePopup()\n  const removeThisPopup = useCallback(() => removePopup(popKey), [popKey, removePopup])\n  const dispatch = useDispatch<AppDispatch>()\n\n  const handleAcceptUpdate = useCallback(() => {\n    if (auto) return\n    dispatch(acceptListUpdate(listUrl))\n    removeThisPopup()\n  }, [auto, dispatch, listUrl, removeThisPopup])\n\n  const { added: tokensAdded, changed: tokensChanged, removed: tokensRemoved } = useMemo(() => {\n    return diffTokenLists(oldList.tokens, newList.tokens)\n  }, [newList.tokens, oldList.tokens])\n  const numTokensChanged = useMemo(\n    () =>\n      Object.keys(tokensChanged).reduce((memo, chainId: any) => memo + Object.keys(tokensChanged[chainId]).length, 0),\n    [tokensChanged]\n  )\n\n  return (\n    <AutoRow>\n      <AutoColumn style={{ flex: '1' }} gap=\"8px\">\n        {auto ? (\n          <Text>\n            The token list &quot;{oldList.name}&quot; has been updated to{' '}\n            <strong>{listVersionLabel(newList.version)}</strong>.\n          </Text>\n        ) : (\n          <>\n            <div>\n              <Text fontSize=\"14px\">\n                An update is available for the token list &quot;{oldList.name}&quot; (\n                {listVersionLabel(oldList.version)} to {listVersionLabel(newList.version)}).\n              </Text>\n              <ul>\n                {tokensAdded.length > 0 ? (\n                  <li>\n                    {tokensAdded.map((token, i) => (\n                      <React.Fragment key={`${token.chainId}-${token.address}`}>\n                        <strong title={token.address}>{token.symbol}</strong>\n                        {i === tokensAdded.length - 1 ? null : ', '}\n                      </React.Fragment>\n                    ))}{' '}\n                    added\n                  </li>\n                ) : null}\n                {tokensRemoved.length > 0 ? (\n                  <li>\n                    {tokensRemoved.map((token, i) => (\n                      <React.Fragment key={`${token.chainId}-${token.address}`}>\n                        <strong title={token.address}>{token.symbol}</strong>\n                        {i === tokensRemoved.length - 1 ? null : ', '}\n                      </React.Fragment>\n                    ))}{' '}\n                    removed\n                  </li>\n                ) : null}\n                {numTokensChanged > 0 ? <li>{numTokensChanged} tokens updated</li> : null}\n              </ul>\n            </div>\n            <AutoRow>\n              <div style={{ flexGrow: 1, marginRight: 12 }}>\n                <Button onClick={handleAcceptUpdate}>Accept update</Button>\n              </div>\n              <div style={{ flexGrow: 1 }}>\n                <Button onClick={removeThisPopup}>Dismiss</Button>\n              </div>\n            </AutoRow>\n          </>\n        )}\n      </AutoColumn>\n    </AutoRow>\n  )\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/utils/listVersionLabel.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/PageHeader/SettingsModal.tsx",["889"],"import React from 'react'\nimport { Modal } from '@nguyenphu27/uikit'\nimport SlippageToleranceSetting from './SlippageToleranceSetting'\nimport TransactionDeadlineSetting from './TransactionDeadlineSetting'\nimport AudioSetting from './AudioSetting'\n\ntype SettingsModalProps = {\n  onDismiss?: () => void\n  translateString: (translationId: number, fallback: string) => string\n}\n\n// TODO: Fix UI Kit typings\nconst defaultOnDismiss = () => null\n\nconst SettingsModal = ({ onDismiss = defaultOnDismiss, translateString }: SettingsModalProps) => {\n  return (\n    <Modal title={translateString(1200, 'Settings')} onDismiss={onDismiss}>\n      <SlippageToleranceSetting translateString={translateString} />\n      <TransactionDeadlineSetting translateString={translateString} />\n      <AudioSetting translateString={translateString} />\n    </Modal>\n  )\n}\n\nexport default SettingsModal\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/PageHeader/RecentTransactionsModal.tsx",["890"],"import React, { useMemo } from 'react'\nimport { CheckmarkCircleIcon, ErrorIcon, Flex, LinkExternal, Text, Modal, Button } from '@nguyenphu27/uikit'\nimport { useActiveWeb3React } from 'hooks'\nimport { getBscScanLink } from 'utils'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport Loader from 'components/Loader'\n\ntype RecentTransactionsModalProps = {\n  onDismiss?: () => void\n  translateString: (translationId: number, fallback: string) => string\n}\n\n// TODO: Fix UI Kit typings\nconst defaultOnDismiss = () => null\n\nconst newTransactionsFirst = (a: TransactionDetails, b: TransactionDetails) => b.addedTime - a.addedTime\n\nconst getRowStatus = (sortedRecentTransaction: TransactionDetails) => {\n  const { hash, receipt } = sortedRecentTransaction\n\n  if (!hash) {\n    return { icon: <Loader />, color: 'text' }\n  }\n\n  if (hash && receipt?.status === 1) {\n    return { icon: <CheckmarkCircleIcon color=\"success\" />, color: 'success' }\n  }\n\n  return { icon: <ErrorIcon color=\"failure\" />, color: 'failure' }\n}\n\nconst RecentTransactionsModal = ({ onDismiss = defaultOnDismiss, translateString }: RecentTransactionsModalProps) => {\n  const { account, chainId } = useActiveWeb3React()\n  const allTransactions = useAllTransactions()\n\n  // Logic taken from Web3Status/index.tsx line 175\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  return (\n    <Modal title={translateString(1202, 'Recent transactions')} onDismiss={onDismiss}>\n      {!account && (\n        <Flex justifyContent=\"center\" flexDirection=\"column\" alignItems=\"center\">\n          <Text mb=\"8px\" bold>\n            Please connect your wallet to view your recent transactions\n          </Text>\n          <Button variant=\"tertiary\" scale=\"sm\" onClick={onDismiss}>\n            Close\n          </Button>\n        </Flex>\n      )}\n      {account && chainId && sortedRecentTransactions.length === 0 && (\n        <Flex justifyContent=\"center\" flexDirection=\"column\" alignItems=\"center\">\n          <Text mb=\"8px\" bold>\n            No recent transactions\n          </Text>\n          <Button variant=\"tertiary\" scale=\"sm\" onClick={onDismiss}>\n            Close\n          </Button>\n        </Flex>\n      )}\n      {account &&\n        chainId &&\n        sortedRecentTransactions.map((sortedRecentTransaction) => {\n          const { hash, summary } = sortedRecentTransaction\n          const { icon, color } = getRowStatus(sortedRecentTransaction)\n\n          return (\n            <>\n              <Flex key={hash} alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n                <LinkExternal href={getBscScanLink(chainId, hash, 'transaction')} color={color}>\n                  {summary ?? hash}\n                </LinkExternal>\n                {icon}\n              </Flex>\n            </>\n          )\n        })}\n    </Modal>\n  )\n}\n\nexport default RecentTransactionsModal\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/SearchModal/sorting.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/SearchModal/filtering.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useToggle.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/Modal/index.tsx",["891"],"import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { animated, useTransition } from 'react-spring'\nimport { DialogOverlay, DialogContent } from '@reach/dialog'\nimport { isMobile } from 'react-device-detect'\nimport '@reach/dialog/styles.css'\nimport { transparentize } from 'polished'\n\nconst AnimatedDialogOverlay = animated(DialogOverlay)\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst StyledDialogOverlay = styled(AnimatedDialogOverlay)`\n  &[data-reach-dialog-overlay] {\n    z-index: 2;\n    background-color: transparent;\n    overflow: hidden;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    background-color: rgba(0, 0, 0, 0.3);\n  }\n`\n\nconst AnimatedDialogContent = animated(DialogContent)\n// destructure to not pass custom props to Dialog DOM element\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst StyledDialogContent = styled(({ minHeight, maxHeight, mobile, isOpen, ...rest }) => (\n  <AnimatedDialogContent {...rest} />\n)).attrs({\n  'aria-label': 'dialog',\n})`\n  &[data-reach-dialog-content] {\n    margin: 0 0 2rem 0;\n    border: 1px solid ${({ theme }) => theme.colors.invertedContrast};\n    background-color: ${({ theme }) => theme.colors.invertedContrast};\n    box-shadow: 0 4px 8px 0 ${transparentize(0.95, '#191326')};\n    padding: 0px;\n    width: 80%;\n    overflow: hidden;\n\n    align-self: ${({ mobile }) => (mobile ? 'flex-end' : 'center')};\n\n    max-width: 420px;\n    ${({ maxHeight }) =>\n      maxHeight &&\n      css`\n        max-height: ${maxHeight}vh;\n      `}\n    ${({ minHeight }) =>\n      minHeight &&\n      css`\n        min-height: ${minHeight}vh;\n      `}\n    display: flex;\n    border-radius: 20px;\n\n    ${({ theme }) => theme.mediaQueries.lg} {\n      width: 65vw;\n    }\n    ${({ theme }) => theme.mediaQueries.sm} {\n      width: 85vw;\n    }\n  }\n`\n\ninterface ModalProps {\n  isOpen: boolean\n  onDismiss: () => void\n  minHeight?: number | false\n  maxHeight?: number\n  initialFocusRef?: React.RefObject<any>\n  children?: React.ReactNode\n}\n\nexport default function Modal({\n  isOpen,\n  onDismiss,\n  minHeight = false,\n  maxHeight = 50,\n  initialFocusRef,\n  children,\n}: ModalProps) {\n  const fadeTransition = useTransition(isOpen, null, {\n    config: { duration: 200 },\n    from: { opacity: 0 },\n    enter: { opacity: 1 },\n    leave: { opacity: 0 },\n  })\n\n  return (\n    <>\n      {fadeTransition.map(\n        ({ item, key, props }) =>\n          item && (\n            <StyledDialogOverlay key={key} style={props} onDismiss={onDismiss} initialFocusRef={initialFocusRef}>\n              <StyledDialogContent\n                aria-label=\"dialog content\"\n                minHeight={minHeight}\n                maxHeight={maxHeight}\n                mobile={isMobile}\n              >\n                {/* prevents the automatic focusing of inputs on mobile by the reach dialog */}\n                {/* eslint-disable */}\n                {!initialFocusRef && isMobile ? <div tabIndex={1} /> : null}\n                {/* eslint-enable */}\n                {children}\n              </StyledDialogContent>\n            </StyledDialogOverlay>\n          )\n      )}\n    </>\n  )\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useApproveCallback.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/SearchModal/styleds.tsx",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/SearchModal/SortButton.tsx",["892"],"import React from 'react'\nimport { Text } from '@nguyenphu27/uikit'\nimport styled from 'styled-components'\nimport { RowFixed } from '../Row'\n\nexport const FilterWrapper = styled(RowFixed)`\n  padding: 8px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  color: ${({ theme }) => theme.colors.text};\n  border-radius: 8px;\n  user-select: none;\n  & > * {\n    user-select: none;\n  }\n  :hover {\n    cursor: pointer;\n  }\n`\n\nexport default function SortButton({\n  toggleSortOrder,\n  ascending\n}: {\n  toggleSortOrder: () => void\n  ascending: boolean\n}) {\n  return (\n    <FilterWrapper onClick={toggleSortOrder}>\n      <Text fontSize=\"14px\">{ascending ? '↑' : '↓'}</Text>\n    </FilterWrapper>\n  )\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/SearchModal/CurrencyList.tsx",["893"],"import { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@nguyenphu27/sdk'\nimport React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { FixedSizeList } from 'react-window'\nimport styled from 'styled-components'\nimport { Text } from '@nguyenphu27/uikit'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useSelectedTokenList, WrappedTokenInfo } from '../../state/lists/hooks'\nimport { useAddUserToken, useRemoveUserAddedToken } from '../../state/user/hooks'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport { LinkStyledButton } from '../Shared'\nimport { useIsUserAddedToken } from '../../hooks/Tokens'\nimport Column from '../Column'\nimport { RowFixed } from '../Row'\nimport CurrencyLogo from '../CurrencyLogo'\nimport { MouseoverTooltip } from '../Tooltip'\nimport { FadedSpan, MenuItem } from './styleds'\nimport Loader from '../Loader'\nimport { isTokenOnList } from '../../utils'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst Tag = styled.div`\n  background-color: ${({ theme }) => theme.colors.tertiary};\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n  border-radius: 4px;\n  padding: 0.25rem 0.3rem 0.25rem 0.3rem;\n  max-width: 6rem;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  justify-self: flex-end;\n  margin-right: 4px;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst TagContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`\n\nfunction TokenTags({ currency }: { currency: Currency }) {\n  if (!(currency instanceof WrappedTokenInfo)) {\n    return <span />\n  }\n\n  const { tags } = currency\n  if (!tags || tags.length === 0) return <span />\n\n  const tag = tags[0]\n\n  return (\n    <TagContainer>\n      <MouseoverTooltip text={tag.description}>\n        <Tag key={tag.id}>{tag.name}</Tag>\n      </MouseoverTooltip>\n      {tags.length > 1 ? (\n        <MouseoverTooltip\n          text={tags\n            .slice(1)\n            .map(({ name, description }) => `${name}: ${description}`)\n            .join('; \\n')}\n        >\n          <Tag>...</Tag>\n        </MouseoverTooltip>\n      ) : null}\n    </TagContainer>\n  )\n}\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account, chainId } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useSelectedTokenList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  const removeToken = useRemoveUserAddedToken()\n  const addToken = useAddUserToken()\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <Text title={currency.name}>{currency.symbol}</Text>\n        <FadedSpan>\n          {!isOnSelectedList && customAdded && !(currency instanceof WrappedTokenInfo) ? (\n            <Text>\n              Added by user\n              <LinkStyledButton\n                onClick={(event) => {\n                  event.stopPropagation()\n                  if (chainId && currency instanceof Token) removeToken(chainId, currency.address)\n                }}\n              >\n                (Remove)\n              </LinkStyledButton>\n            </Text>\n          ) : null}\n          {!isOnSelectedList && !customAdded && !(currency instanceof WrappedTokenInfo) ? (\n            <Text>\n              Found by address\n              <LinkStyledButton\n                onClick={(event) => {\n                  event.stopPropagation()\n                  if (currency instanceof Token) addToken(currency)\n                }}\n              >\n                (Add)\n              </LinkStyledButton>\n            </Text>\n          ) : null}\n        </FadedSpan>\n      </Column>\n      <TokenTags currency={currency} />\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <Loader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n}: {\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n}) {\n  const itemData = useMemo(() => (showETH ? [Currency.ETHER, ...currencies] : [...currencies]), [currencies, showETH])\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [onCurrencySelect, otherCurrency, selectedCurrency]\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/SearchModal/CommonBases.tsx",["894"],"import React from 'react'\nimport { Text } from '@nguyenphu27/uikit'\nimport { ChainId, Currency, currencyEquals, ETHER, Token } from '@nguyenphu27/sdk'\nimport styled from 'styled-components'\n\nimport useI18n from 'hooks/useI18n'\nimport { SUGGESTED_BASES } from '../../constants'\nimport { AutoColumn } from '../Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { AutoRow } from '../Row'\nimport CurrencyLogo from '../CurrencyLogo'\n\nconst BaseWrapper = styled.div<{ disable?: boolean }>`\n  border: 1px solid ${({ theme, disable }) => (disable ? 'transparent' : theme.colors.tertiary)};\n  border-radius: 10px;\n  display: flex;\n  padding: 6px;\n\n  align-items: center;\n  :hover {\n    cursor: ${({ disable }) => !disable && 'pointer'};\n    background-color: ${({ theme, disable }) => !disable && theme.colors.invertedContrast};\n  }\n\n  background-color: ${({ theme, disable }) => disable && theme.colors.tertiary};\n  opacity: ${({ disable }) => disable && '0.4'};\n`\n\nexport default function CommonBases({\n  chainId,\n  onSelect,\n  selectedCurrency,\n}: {\n  chainId?: ChainId\n  selectedCurrency?: Currency | null\n  onSelect: (currency: Currency) => void\n}) {\n  const TranslateString = useI18n()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow>\n        <Text fontSize=\"14px\">Common bases</Text>\n        <QuestionHelper text={TranslateString(1204, 'These tokens are commonly paired with other tokens.')} />\n      </AutoRow>\n      <AutoRow gap=\"4px\">\n        <BaseWrapper\n          onClick={() => {\n            if (!selectedCurrency || !currencyEquals(selectedCurrency, ETHER)) {\n              onSelect(ETHER)\n            }\n          }}\n          disable={selectedCurrency === ETHER}\n        >\n          <CurrencyLogo currency={ETHER} style={{ marginRight: 8 }} />\n          <Text>BNB</Text>\n        </BaseWrapper>\n        {(chainId ? SUGGESTED_BASES[chainId] : []).map((token: Token) => {\n          const selected = selectedCurrency instanceof Token && selectedCurrency.address === token.address\n          return (\n            <BaseWrapper onClick={() => !selected && onSelect(token)} disable={selected} key={token.address}>\n              <CurrencyLogo currency={token} style={{ marginRight: 8 }} />\n              <Text>{token.symbol}</Text>\n            </BaseWrapper>\n          )\n        })}\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useOnClickOutside.tsx",["895"],"import { RefObject, useEffect, useRef } from 'react'\n\nexport function useOnClickOutside<T extends HTMLElement>(\n  node: RefObject<T | undefined>,\n  handler: undefined | (() => void)\n) {\n  const handlerRef = useRef<undefined | (() => void)>(handler)\n  useEffect(() => {\n    handlerRef.current = handler\n  }, [handler])\n\n  useEffect(() => {\n    const handleClickOutside = (e: MouseEvent) => {\n      if (node.current?.contains(e.target as Node) ?? false) {\n        return\n      }\n      if (handlerRef.current) handlerRef.current()\n    }\n\n    document.addEventListener('mousedown', handleClickOutside)\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside)\n    }\n  }, [node])\n}\n\nexport default useOnClickOutside\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/hooks/useENSContentHash.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/QuestionHelper/index.tsx",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/ConnectWalletButton/index.tsx",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/transactions/hooks.tsx",["896"],"import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { useActiveWeb3React } from '../../hooks'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions'\nimport { TransactionDetails } from './reducer'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: { summary?: string; approval?: { tokenAddress: string; spender: string } }\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      { summary, approval }: { summary?: string; approval?: { tokenAddress: string; spender: string } } = {}\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary }))\n    },\n    [dispatch, chainId, account]\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress]\n  )\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/Logo/index.tsx",["897"],"import React, { useState } from 'react'\nimport { HelpCircle } from 'react-feather'\n\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\n\nexport interface LogoProps {\n  alt?: string\n  style?: any\n  className?: string\n  srcs: string[]\n}\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\n */\nexport default function Logo({ srcs, alt, ...rest }: LogoProps) {\n  const [, refresh] = useState<number>(0)\n\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\n\n  if (src) {\n    return (\n      <img\n        {...rest}\n        alt={alt}\n        src={src}\n        onError={() => {\n          if (src) BAD_SRCS[src] = true\n          refresh((i) => i + 1)\n        }}\n      />\n    )\n  }\n\n  return <HelpCircle {...rest} />\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/data/Allowances.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/PageHeader/AudioSetting.tsx",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/ListLogo/index.tsx",["898"],"import React from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\n\nimport Logo from '../Logo'\n\nconst StyledListLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function ListLogo({\n  logoURI,\n  style,\n  size = '24px',\n  alt\n}: {\n  logoURI: string\n  size?: string\n  style?: React.CSSProperties\n  alt?: string\n}) {\n  const srcs: string[] = useHttpLocations(logoURI)\n\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/PageHeader/TransactionDeadlineSetting.tsx",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/PageHeader/SlippageToleranceSetting.tsx",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/SafeMoonWarningModal/index.tsx",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/ProgressSteps/index.tsx",["899"],"import React from 'react'\nimport styled from 'styled-components'\nimport { transparentize } from 'polished'\nimport { RowBetween } from '../Row'\nimport { AutoColumn } from '../Column'\n\nconst Wrapper = styled(AutoColumn)`\n  margin-top: 1.25rem;\n`\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n  color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.text : confirmed ? theme.colors.success : '#FFFFFF'};\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background-color: ;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed }) => transparentize(0.5, prevConfirmed ? theme.colors.success : theme.colors.primary)} 0%,\n    ${({ theme, prevConfirmed }) => (prevConfirmed ? theme.colors.primary : theme.colors.backgroundDisabled)} 80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps }: ProgressCirclesProps) {\n  return (\n    <Wrapper justify=\"center\">\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={!steps[i - 1] && i !== 0}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={!steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </Wrapper>\n  )\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/Tooltip/index.tsx",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/Popover/index.tsx",["900"],"import { Placement } from '@popperjs/core'\nimport { transparentize } from 'polished'\nimport React, { useCallback, useState } from 'react'\nimport { usePopper } from 'react-popper'\nimport styled from 'styled-components'\nimport Portal from '@reach/portal'\nimport useInterval from '../../hooks/useInterval'\n\nconst PopoverContainer = styled.div<{ show: boolean }>`\n  z-index: 9999;\n\n  visibility: ${(props) => (props.show ? 'visible' : 'hidden')};\n  opacity: ${(props) => (props.show ? 1 : 0)};\n  transition: visibility 150ms linear, opacity 150ms linear;\n\n  background: ${({ theme }) => theme.colors.invertedContrast};\n  border: 1px solid ${({ theme }) => theme.colors.tertiary};\n  box-shadow: 0 4px 8px 0 ${transparentize(0.9, '#2F80ED')};\n  color: ${({ theme }) => theme.colors.textSubtle};\n  border-radius: 8px;\n`\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nconst Arrow = styled.div`\n  width: 8px;\n  height: 8px;\n  z-index: 9998;\n\n  ::before {\n    position: absolute;\n    width: 8px;\n    height: 8px;\n    z-index: 9998;\n\n    content: '';\n    border: 1px solid ${({ theme }) => theme.colors.tertiary};\n    transform: rotate(45deg);\n    background: ${({ theme }) => theme.colors.invertedContrast};\n  }\n\n  &.arrow-top {\n    bottom: -5px;\n    ::before {\n      border-top: none;\n      border-left: none;\n    }\n  }\n\n  &.arrow-bottom {\n    top: -5px;\n    ::before {\n      border-bottom: none;\n      border-right: none;\n    }\n  }\n\n  &.arrow-left {\n    right: -5px;\n\n    ::before {\n      border-bottom: none;\n      border-left: none;\n    }\n  }\n\n  &.arrow-right {\n    left: -5px;\n    ::before {\n      border-right: none;\n      border-top: none;\n    }\n  }\n`\n\nexport interface PopoverProps {\n  content: React.ReactNode\n  show: boolean\n  children: React.ReactNode\n  placement?: Placement\n}\n\nexport default function Popover({ content, show, children, placement = 'auto' }: PopoverProps) {\n  const [referenceElement, setReferenceElement] = useState<HTMLDivElement | null>(null)\n  const [popperElement, setPopperElement] = useState<HTMLDivElement | null>(null)\n  const [arrowElement, setArrowElement] = useState<HTMLDivElement | null>(null)\n  const { styles, update, attributes } = usePopper(referenceElement, popperElement, {\n    placement,\n    strategy: 'fixed',\n    modifiers: [\n      { name: 'offset', options: { offset: [8, 8] } },\n      { name: 'arrow', options: { element: arrowElement } },\n    ],\n  })\n  const updateCallback = useCallback(() => {\n    if (update) {\n      update()\n    }\n  }, [update])\n  useInterval(updateCallback, show ? 100 : null)\n\n  return (\n    <>\n      <ReferenceElement ref={setReferenceElement as any}>{children}</ReferenceElement>\n      <Portal>\n        <PopoverContainer show={show} ref={setPopperElement as any} style={styles.popper} {...attributes.popper}>\n          {content}\n          <Arrow\n            className={`arrow-${attributes.popper?.['data-popper-placement'] ?? ''}`}\n            ref={setArrowElement as any}\n            style={styles.arrow}\n            {...attributes.arrow}\n          />\n        </PopoverContainer>\n      </Portal>\n    </>\n  )\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/burn/hooks.ts",["901"],"import { Currency, CurrencyAmount, JSBI, Pair, Percent, TokenAmount } from '@nguyenphu27/sdk'\nimport { useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { usePair } from '../../data/Reserves'\nimport { useTotalSupply } from '../../data/TotalSupply'\n\nimport { useActiveWeb3React } from '../../hooks'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks'\nimport { useTokenBalances } from '../wallet/hooks'\nimport { Field, typeInput } from './actions'\n\nexport function useBurnState(): AppState['burn'] {\n  return useSelector<AppState, AppState['burn']>(state => state.burn)\n}\n\nexport function useDerivedBurnInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined\n): {\n  pair?: Pair | null\n  parsedAmounts: {\n    [Field.LIQUIDITY_PERCENT]: Percent\n    [Field.LIQUIDITY]?: TokenAmount\n    [Field.CURRENCY_A]?: CurrencyAmount\n    [Field.CURRENCY_B]?: CurrencyAmount\n  }\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue } = useBurnState()\n\n  // pair + totalsupply\n  const [, pair] = usePair(currencyA, currencyB)\n\n  // balances\n  const relevantTokenBalances = useTokenBalances(account ?? undefined, [pair?.liquidityToken])\n  const userLiquidity: undefined | TokenAmount = relevantTokenBalances?.[pair?.liquidityToken?.address ?? '']\n\n  const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n  const tokens = {\n    [Field.CURRENCY_A]: tokenA,\n    [Field.CURRENCY_B]: tokenB,\n    [Field.LIQUIDITY]: pair?.liquidityToken\n  }\n\n  // liquidity values\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n  const liquidityValueA =\n    pair &&\n    totalSupply &&\n    userLiquidity &&\n    tokenA &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalSupply.raw, userLiquidity.raw)\n      ? new TokenAmount(tokenA, pair.getLiquidityValue(tokenA, totalSupply, userLiquidity, false).raw)\n      : undefined\n  const liquidityValueB =\n    pair &&\n    totalSupply &&\n    userLiquidity &&\n    tokenB &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalSupply.raw, userLiquidity.raw)\n      ? new TokenAmount(tokenB, pair.getLiquidityValue(tokenB, totalSupply, userLiquidity, false).raw)\n      : undefined\n  const liquidityValues: { [Field.CURRENCY_A]?: TokenAmount; [Field.CURRENCY_B]?: TokenAmount } = {\n    [Field.CURRENCY_A]: liquidityValueA,\n    [Field.CURRENCY_B]: liquidityValueB\n  }\n\n  let percentToRemove: Percent = new Percent('0', '100')\n  // user specified a %\n  if (independentField === Field.LIQUIDITY_PERCENT) {\n    percentToRemove = new Percent(typedValue, '100')\n  }\n  // user specified a specific amount of liquidity tokens\n  else if (independentField === Field.LIQUIDITY) {\n    if (pair?.liquidityToken) {\n      const independentAmount = tryParseAmount(typedValue, pair.liquidityToken)\n      if (independentAmount && userLiquidity && !independentAmount.greaterThan(userLiquidity)) {\n        percentToRemove = new Percent(independentAmount.raw, userLiquidity.raw)\n      }\n    }\n  }\n  // user specified a specific amount of token a or b\n  else if (tokens[independentField]) {\n      const independentAmount = tryParseAmount(typedValue, tokens[independentField])\n      const liquidityValue = liquidityValues[independentField]\n      if (independentAmount && liquidityValue && !independentAmount.greaterThan(liquidityValue)) {\n        percentToRemove = new Percent(independentAmount.raw, liquidityValue.raw)\n      }\n    }\n\n  const parsedAmounts: {\n    [Field.LIQUIDITY_PERCENT]: Percent\n    [Field.LIQUIDITY]?: TokenAmount\n    [Field.CURRENCY_A]?: TokenAmount\n    [Field.CURRENCY_B]?: TokenAmount\n  } = {\n    [Field.LIQUIDITY_PERCENT]: percentToRemove,\n    [Field.LIQUIDITY]:\n      userLiquidity && percentToRemove && percentToRemove.greaterThan('0')\n        ? new TokenAmount(userLiquidity.token, percentToRemove.multiply(userLiquidity.raw).quotient)\n        : undefined,\n    [Field.CURRENCY_A]:\n      tokenA && percentToRemove && percentToRemove.greaterThan('0') && liquidityValueA\n        ? new TokenAmount(tokenA, percentToRemove.multiply(liquidityValueA.raw).quotient)\n        : undefined,\n    [Field.CURRENCY_B]:\n      tokenB && percentToRemove && percentToRemove.greaterThan('0') && liquidityValueB\n        ? new TokenAmount(tokenB, percentToRemove.multiply(liquidityValueB.raw).quotient)\n        : undefined\n  }\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (!parsedAmounts[Field.LIQUIDITY] || !parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? 'Enter an amount'\n  }\n\n  return { pair, parsedAmounts, error }\n}\n\nexport function useBurnActionHandlers(): {\n  onUserInput: (field: Field, typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch]\n  )\n\n  return {\n    onUserInput\n  }\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/utils/useDebouncedChangeHandler.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/pages/AddLiquidity/ConfirmAddModalBottom.tsx",["902"],"import { Currency, CurrencyAmount, Fraction, Percent } from '@nguyenphu27/sdk'\nimport React from 'react'\nimport { Button, Text } from '@nguyenphu27/uikit'\nimport { TranslateString } from 'utils/translateTextHelpers'\nimport { RowBetween, RowFixed } from '../../components/Row'\nimport CurrencyLogo from '../../components/CurrencyLogo'\nimport { Field } from '../../state/mint/actions'\n\nexport function ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  return (\n    <>\n      <RowBetween>\n        <Text>{currencies[Field.CURRENCY_A]?.symbol} Deposited</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{currencies[Field.CURRENCY_B]?.symbol} Deposited</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>Rates</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>Share of Pool:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button mt=\"20px\" onClick={onAdd}>\n        {noLiquidity ? 'Create Pool & Supply' : 'Confirm Supply'}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/swap/confirmPriceImpactWithoutFee.ts",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/swap/TradePrice.tsx",["903"],"import React from 'react'\nimport { Price } from '@nguyenphu27/sdk'\nimport { SyncAltIcon, Text } from '@nguyenphu27/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text fontSize=\"14px\" style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <SyncAltIcon width=\"20px\" color=\"primary\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/swap/AdvancedSwapDetailsDropdown.tsx",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/swap/ConfirmSwapModal.tsx",["904"],"import { currencyEquals, Trade } from '@nguyenphu27/sdk'\nimport React, { useCallback, useMemo } from 'react'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent\n} from '../TransactionConfirmationModal'\nimport SwapModalFooter from './SwapModalFooter'\nimport SwapModalHeader from './SwapModalHeader'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\n\nexport default function ConfirmSwapModal({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  recipient,\n  swapErrorMessage,\n  isOpen,\n  attemptingTxn,\n  txHash\n}: {\n  isOpen: boolean\n  trade: Trade | undefined\n  originalTrade: Trade | undefined\n  attemptingTxn: boolean\n  txHash: string | undefined\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  onDismiss: () => void\n}) {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade]\n  )\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = `Swapping ${trade?.inputAmount?.toSignificant(6)} ${\n    trade?.inputAmount?.currency?.symbol\n  } for ${trade?.outputAmount?.toSignificant(6)} ${trade?.outputAmount?.currency?.symbol}`\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent\n          title=\"Confirm Swap\"\n          onDismiss={onDismiss}\n          topContent={modalHeader}\n          bottomContent={modalBottom}\n        />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage]\n  )\n\n  return (\n    <TransactionConfirmationModal\n      isOpen={isOpen}\n      onDismiss={onDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n    />\n  )\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/Slider/index.tsx",["905"],"import React, { useCallback } from 'react'\nimport styled from 'styled-components'\n\nconst StyledRangeInput = styled.input<{ size: number }>`\n  -webkit-appearance: none; /* Hides the slider so that custom slider can be made */\n  width: 100%; /* Specific width is required for Firefox. */\n  background: transparent; /* Otherwise white in Chrome */\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n  }\n\n  &::-moz-focus-outer {\n    border: 0;\n  }\n\n  &::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    height: ${({ size }) => size}px;\n    width: ${({ size }) => size}px;\n    background-color: #565a69;\n    border-radius: 100%;\n    border: none;\n    transform: translateY(-50%);\n    color: ${({ theme }) => theme.colors.invertedContrast};\n\n    &:hover,\n    &:focus {\n      box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 16px 24px rgba(0, 0, 0, 0.06),\n        0px 24px 32px rgba(0, 0, 0, 0.04);\n    }\n  }\n\n  &::-moz-range-thumb {\n    height: ${({ size }) => size}px;\n    width: ${({ size }) => size}px;\n    background-color: #565a69;\n    border-radius: 100%;\n    border: none;\n    color: ${({ theme }) => theme.colors.invertedContrast};\n\n    &:hover,\n    &:focus {\n      box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 16px 24px rgba(0, 0, 0, 0.06),\n        0px 24px 32px rgba(0, 0, 0, 0.04);\n    }\n  }\n\n  &::-ms-thumb {\n    height: ${({ size }) => size}px;\n    width: ${({ size }) => size}px;\n    background-color: #565a69;\n    border-radius: 100%;\n    color: ${({ theme }) => theme.colors.invertedContrast};\n\n    &:hover,\n    &:focus {\n      box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 16px 24px rgba(0, 0, 0, 0.06),\n        0px 24px 32px rgba(0, 0, 0, 0.04);\n    }\n  }\n\n  &::-webkit-slider-runnable-track {\n    background: linear-gradient(\n      90deg,\n      ${({ theme }) => theme.colors.primaryDark},\n      ${({ theme }) => theme.colors.tertiary}\n    );\n    height: 2px;\n  }\n\n  &::-moz-range-track {\n    background: linear-gradient(\n      90deg,\n      ${({ theme }) => theme.colors.primaryDark},\n      ${({ theme }) => theme.colors.tertiary}\n    );\n    height: 2px;\n  }\n\n  &::-ms-track {\n    width: 100%;\n    border-color: transparent;\n    color: transparent;\n\n    background: ${({ theme }) => theme.colors.primaryDark};\n    height: 2px;\n  }\n  &::-ms-fill-lower {\n    background: ${({ theme }) => theme.colors.primaryDark};\n  }\n  &::-ms-fill-upper {\n    background: ${({ theme }) => theme.colors.tertiary};\n  }\n`\n\ninterface InputSliderProps {\n  value: number\n  onChange: (value: number) => void\n  step?: number\n  min?: number\n  max?: number\n  size?: number\n}\n\nexport default function Slider({ value, onChange, min = 0, step = 1, max = 100, size = 28 }: InputSliderProps) {\n  const changeCallback = useCallback(\n    e => {\n      onChange(parseInt(e.target.value))\n    },\n    [onChange]\n  )\n\n  return (\n    <StyledRangeInput\n      size={size}\n      type=\"range\"\n      value={value}\n      style={{ width: '90%', marginLeft: 15, marginRight: 15, padding: '15px 0' }}\n      onChange={changeCallback}\n      aria-labelledby=\"input slider\"\n      step={step}\n      min={min}\n      max={max}\n    />\n  )\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/CurrencyInputPanel/index.tsx",["906"],"import React, { useState, useCallback } from 'react'\nimport { Currency, Pair } from '@nguyenphu27/sdk'\nimport { Button, ChevronDownIcon, Text } from '@nguyenphu27/uikit'\nimport styled from 'styled-components'\nimport { darken } from 'polished'\nimport useI18n from 'hooks/useI18n'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\nimport CurrencyLogo from '../CurrencyLogo'\nimport DoubleCurrencyLogo from '../DoubleLogo'\nimport { RowBetween } from '../Row'\nimport { Input as NumericalInput } from '../NumericalInput'\nimport { useActiveWeb3React } from '../../hooks'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelect = styled.button<{ selected: boolean }>`\n  align-items: center;\n  height: 34px;\n  font-size: 16px;\n  font-weight: 500;\n  background-color: transparent;\n  color: ${({ selected, theme }) => (selected ? theme.colors.text : '#FFFFFF')};\n  border-radius: 12px;\n  outline: none;\n  cursor: pointer;\n  user-select: none;\n  border: none;\n  padding: 0 0.5rem;\n  :focus,\n  :hover {\n    background-color: ${({ theme }) => darken(0.05, theme.colors.input)};\n  }\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n  span:hover {\n    cursor: pointer;\n    color: ${({ theme }) => darken(0.2, theme.colors.textSubtle)};\n  }\n`\nconst Aligner = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  background-color: ${({ theme }) => theme.colors.input};\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect?: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n  showCommonBases?: boolean\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n  showCommonBases,\n}: CurrencyInputPanelProps) {\n  const [modalOpen, setModalOpen] = useState(false)\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const TranslateString = useI18n()\n  const translatedLabel = label || TranslateString(132, 'Input')\n  const handleDismissSearch = useCallback(() => {\n    setModalOpen(false)\n  }, [setModalOpen])\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency && selectedCurrencyBalance\n                    ? `Balance: ${selectedCurrencyBalance?.toSignificant(6)}`\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelect\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                setModalOpen(true)\n              }\n            }}\n          >\n            <Aligner>\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length\n                      )}`\n                    : currency?.symbol) || TranslateString(1196, 'Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Aligner>\n          </CurrencySelect>\n        </InputRow>\n      </Container>\n      {!disableCurrencySelect && onCurrencySelect && (\n        <CurrencySearchModal\n          isOpen={modalOpen}\n          onDismiss={handleDismissSearch}\n          onCurrencySelect={onCurrencySelect}\n          selectedCurrency={currency}\n          otherSelectedCurrency={otherCurrency}\n          showCommonBases={showCommonBases}\n        />\n      )}\n    </InputPanel>\n  )\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/TransactionConfirmationModal/index.tsx",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/state/mint/hooks.ts",["907"],"import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@nguyenphu27/sdk'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { PairState, usePair } from '../../data/Reserves'\nimport { useTotalSupply } from '../../data/TotalSupply'\n\nimport { useActiveWeb3React } from '../../hooks'\nimport { TranslateString } from '../../utils/translateTextHelpers'\nimport { wrappedCurrency, wrappedCurrencyAmount } from '../../utils/wrappedCurrency'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB]\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = {\n    [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n    [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n  }\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? TranslateString(136, 'Invalid pair')\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? TranslateString(84, 'Enter an amount')\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n\nexport function useMintActionHandlers(\n  noLiquidity: boolean | undefined\n): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity]\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity]\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/SyrupWarningModal/index.tsx",["908"],"import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text } from '@nguyenphu27/uikit'\nimport { AlertTriangle } from 'react-feather'\nimport Modal from '../Modal'\nimport { AutoRow, RowBetween } from '../Row'\nimport { AutoColumn } from '../Column'\n\nconst WarningContainer = styled.div`\n  max-width: 420px;\n  width: 100%;\n  padding: 1rem;\n  background: rgba(242, 150, 2, 0.05);\n  border: 1px solid #f3841e;\n  border-radius: 20px;\n  overflow: auto;\n`\n\nconst StyledWarningIcon = styled(AlertTriangle)`\n  stroke: ${({ theme }) => theme.colors.failure};\n`\n\nexport default function SyrupWarningModal({\n  isOpen,\n  transactionType,\n  onConfirm,\n}: {\n  isOpen: boolean\n  transactionType: string | null\n  onConfirm: () => void\n}) {\n  const [understandChecked, setUnderstandChecked] = useState(false)\n  const toggleUnderstand = useCallback(() => setUnderstandChecked((uc) => !uc), [])\n\n  const handleDismiss = useCallback(() => null, [])\n  return (\n    <Modal isOpen={isOpen} onDismiss={handleDismiss} maxHeight={90}>\n      <WarningContainer className=\"token-warning-container\">\n        <AutoColumn gap=\"lg\">\n          <AutoRow gap=\"6px\">\n            <StyledWarningIcon />\n            <Text color=\"failure\">Syrup Warning</Text>\n          </AutoRow>\n          {transactionType !== '' && (\n            <>\n              <Text color=\"failure\">\n                Please be careful when <strong>{transactionType}</strong> SYRUP.\n              </Text>\n              <Text color=\"failure\">\n                {transactionType === 'Buying'\n                  ? 'You will not receive CAKE rewards for holding purchased SYRUP.'\n                  : 'You will need to buy back the same amount of SYRUP to be able to convert back to CAKE.'}\n              </Text>\n            </>\n          )}\n          <RowBetween>\n            <div>\n              <label htmlFor=\"understand-checkbox\" style={{ cursor: 'pointer', userSelect: 'none' }}>\n                <input\n                  id=\"understand-checkbox\"\n                  type=\"checkbox\"\n                  className=\"understand-checkbox\"\n                  checked={understandChecked}\n                  onChange={toggleUnderstand}\n                />{' '}\n                <Text as=\"span\">I understand</Text>\n              </label>\n            </div>\n            <Button\n              disabled={!understandChecked}\n              variant=\"danger\"\n              style={{ width: '140px' }}\n              onClick={() => {\n                setUnderstandChecked(false)\n                onConfirm()\n              }}\n            >\n              Continue\n            </Button>\n          </RowBetween>\n        </AutoColumn>\n      </WarningContainer>\n    </Modal>\n  )\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/TokenWarningModal/index.tsx",["909"],"import { Token } from '@nguyenphu27/sdk'\nimport { transparentize } from 'polished'\nimport { Button, Text } from '@nguyenphu27/uikit'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { AlertTriangle } from 'react-feather'\nimport useI18n from 'hooks/useI18n'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useAllTokens } from '../../hooks/Tokens'\nimport { getBscScanLink, shortenAddress } from '../../utils'\nimport { ExternalLink } from '../Shared'\nimport CurrencyLogo from '../CurrencyLogo'\nimport Modal from '../Modal'\nimport { AutoRow, RowBetween } from '../Row'\nimport { AutoColumn } from '../Column'\n\nconst Wrapper = styled.div<{ error: boolean }>`\n  background: ${({ theme }) => transparentize(0.6, theme.colors.tertiary)};\n  padding: 0.75rem;\n  border-radius: 20px;\n`\n\nconst WarningContainer = styled.div`\n  max-width: 420px;\n  width: 100%;\n  padding: 1rem;\n  background: rgba(242, 150, 2, 0.05);\n  border: 1px solid #f3841e;\n  border-radius: 20px;\n  overflow: auto;\n`\n\nconst StyledWarningIcon = styled(AlertTriangle)`\n  stroke: ${({ theme }) => theme.colors.failure};\n`\n\ninterface TokenWarningCardProps {\n  token?: Token\n}\n\nfunction TokenWarningCard({ token }: TokenWarningCardProps) {\n  const { chainId } = useActiveWeb3React()\n  const TranslateString = useI18n()\n  const tokenSymbol = token?.symbol?.toLowerCase() ?? ''\n  const tokenName = token?.name?.toLowerCase() ?? ''\n\n  const allTokens = useAllTokens()\n\n  const duplicateNameOrSymbol = useMemo(() => {\n    if (!token || !chainId) return false\n\n    return Object.keys(allTokens).some((tokenAddress) => {\n      const userToken = allTokens[tokenAddress]\n      if (userToken.equals(token)) {\n        return false\n      }\n      return userToken.symbol?.toLowerCase() === tokenSymbol || userToken.name?.toLowerCase() === tokenName\n    })\n  }, [token, chainId, allTokens, tokenSymbol, tokenName])\n\n  if (!token) return null\n\n  return (\n    <Wrapper error={duplicateNameOrSymbol}>\n      <AutoRow gap=\"6px\">\n        <AutoColumn gap=\"24px\">\n          <CurrencyLogo currency={token} size=\"16px\" />\n          <div> </div>\n        </AutoColumn>\n        <AutoColumn gap=\"10px\" justify=\"flex-start\">\n          <Text>\n            {token && token.name && token.symbol && token.name !== token.symbol\n              ? `${token.name} (${token.symbol})`\n              : token.name || token.symbol}{' '}\n          </Text>\n          {chainId && (\n            <ExternalLink style={{ fontWeight: 400 }} href={getBscScanLink(chainId, token.address, 'token')}>\n              <Text title={token.address}>\n                {shortenAddress(token.address)} {TranslateString(116, '(View on BscScan)')}\n              </Text>\n            </ExternalLink>\n          )}\n        </AutoColumn>\n      </AutoRow>\n    </Wrapper>\n  )\n}\n\nexport default function TokenWarningModal({\n  isOpen,\n  tokens,\n  onConfirm,\n}: {\n  isOpen: boolean\n  tokens: Token[]\n  onConfirm: () => void\n}) {\n  const [understandChecked, setUnderstandChecked] = useState(false)\n  const toggleUnderstand = useCallback(() => setUnderstandChecked((uc) => !uc), [])\n  const TranslateString = useI18n()\n\n  const handleDismiss = useCallback(() => null, [])\n  return (\n    <Modal isOpen={isOpen} onDismiss={handleDismiss} maxHeight={90}>\n      <WarningContainer className=\"token-warning-container\">\n        <AutoColumn gap=\"lg\">\n          <AutoRow gap=\"6px\">\n            <StyledWarningIcon />\n            <Text color=\"failure\">{TranslateString(1128, 'Token imported')}</Text>\n          </AutoRow>\n          <Text>\n            {TranslateString(\n              1130,\n              'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.'\n            )}\n          </Text>\n          <Text>\n            {TranslateString(\n              1132,\n              'This interface can load arbitrary tokens by token addresses. Please take extra caution and do your research when interacting with arbitrary BEP20 tokens.'\n            )}\n          </Text>\n          <Text>{TranslateString(1134, 'If you purchase an arbitrary token, you may be unable to sell it back.')}</Text>\n          {tokens.map((token) => {\n            return <TokenWarningCard key={token.address} token={token} />\n          })}\n          <RowBetween>\n            <div>\n              <label htmlFor=\"understand-checkbox\" style={{ cursor: 'pointer', userSelect: 'none' }}>\n                <input\n                  id=\"understand-checkbox\"\n                  type=\"checkbox\"\n                  className=\"understand-checkbox\"\n                  checked={understandChecked}\n                  onChange={toggleUnderstand}\n                />{' '}\n                <Text as=\"span\" ml=\"4px\">\n                  {TranslateString(148, 'I understand')}\n                </Text>\n              </label>\n            </div>\n            <Button\n              disabled={!understandChecked}\n              variant=\"danger\"\n              style={{ width: '140px' }}\n              className=\"token-dismiss-button\"\n              onClick={() => {\n                onConfirm()\n              }}\n            >\n              {TranslateString(150, 'Continue')}\n            </Button>\n          </RowBetween>\n        </AutoColumn>\n      </WarningContainer>\n    </Modal>\n  )\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/AddressInputPanel/index.tsx",["910"],"import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@nguyenphu27/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useENS from '../../hooks/useENS'\nimport { useActiveWeb3React } from '../../hooks'\nimport { ExternalLink } from '../Shared'\nimport { AutoColumn } from '../Column'\nimport { RowBetween } from '../Row'\nimport { getBscScanLink } from '../../utils'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.invertedContrast)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n  const TranslateString = useI18n()\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange]\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text color=\"textSubtle\" fontWeight={500} fontSize=\"14px\">\n                {TranslateString(1138, 'Recipient')}\n              </Text>\n              {address && chainId && (\n                <ExternalLink href={getBscScanLink(chainId, name ?? address, 'address')} style={{ fontSize: '14px' }}>\n                  {TranslateString(116, '(View on BscScan)')}\n                </ExternalLink>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={TranslateString(1140, 'Wallet Address or ENS name')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/swap/AdvancedSwapDetails.tsx",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/swap/SwapModalFooter.tsx",["911"],"import { Trade, TradeType } from '@nguyenphu27/sdk'\nimport React, { useMemo, useState } from 'react'\nimport { Text, Button } from '@nguyenphu27/uikit'\nimport { Repeat } from 'react-feather'\n\nimport useI18n from 'hooks/useI18n'\nimport { Field } from '../../state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from '../../utils/prices'\nimport { AutoColumn } from '../Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from '../Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(() => computeSlippageAdjustedAmounts(trade, allowedSlippage), [\n    allowedSlippage,\n    trade,\n  ])\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n  const TranslateString = useI18n()\n\n  return (\n    <>\n      <AutoColumn gap=\"0px\">\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">Price</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '8px',\n              fontWeight: 500,\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <Repeat size={14} />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? TranslateString(1210, 'Minimum received')\n                : TranslateString(220, 'Maximum sold')}\n            </Text>\n            <QuestionHelper\n              text={TranslateString(\n                202,\n                'Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.'\n              )}\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">{TranslateString(226, 'Price Impact')}</Text>\n            <QuestionHelper\n              text={TranslateString(224, 'The difference between the market price and your price due to trade size.')}\n            />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">{TranslateString(228, 'Liquidity Provider Fee')}</Text>\n            <QuestionHelper\n              text={TranslateString(\n                999,\n                'For each trade a 0.2% fee is paid. 0.17% goes to liquidity providers and 0.03% goes to the PancakeSwap treasury.'\n              )}\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </AutoColumn>\n\n      <AutoRow>\n        <Button\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          variant={severity > 2 ? 'danger' : 'primary'}\n          mt=\"10px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/swap/SwapModalHeader.tsx",["912"],"import React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\nimport { Trade, TradeType } from '@nguyenphu27/sdk'\nimport { Button, Text } from '@nguyenphu27/uikit'\nimport { ArrowDown, AlertTriangle } from 'react-feather'\nimport { Field } from '../../state/swap/actions'\nimport { isAddress, shortenAddress } from '../../utils'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\nimport { AutoColumn } from '../Column'\nimport CurrencyLogo from '../CurrencyLogo'\nimport { RowBetween, RowFixed } from '../Row'\nimport { SwapShowAcceptChanges } from './styleds'\n\nconst PriceInfoText = styled(Text)`\n  font-style: italic;\n  line-height: 1.3;\n\n  span {\n    color: ${({ theme }) => theme.colors.primary};\n    font-weight: 600;\n  }\n`\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const slippageAdjustedAmounts = useMemo(() => computeSlippageAdjustedAmounts(trade, allowedSlippage), [\n    trade,\n    allowedSlippage,\n  ])\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  const theme = useContext(ThemeContext)\n\n  return (\n    <AutoColumn gap=\"md\" style={{ marginTop: '20px' }}>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <Text\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? theme.colors.primary : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </Text>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" style={{ marginLeft: '10px', fontWeight: 500 }}>\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDown size=\"16\" color={theme.colors.textSubtle} style={{ marginLeft: '4px', minWidth: '16px' }} />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <Text\n            fontSize=\"24px\"\n            style={{ marginLeft: '10px', fontWeight: 500 }}\n            color={\n              priceImpactSeverity > 2\n                ? theme.colors.failure\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? theme.colors.primary\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </Text>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" style={{ marginLeft: '10px', fontWeight: 500 }}>\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <AlertTriangle size={20} style={{ marginRight: '8px', minWidth: 24 }} />\n              <Text color=\"primary\"> Price Updated</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>Accept</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '16px 0 0' }}>\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\n          <PriceInfoText>\n            {`Output is estimated. You will receive at least `}\n            <span>\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\n            </span>\n            {' or the transaction will revert.'}\n          </PriceInfoText>\n        ) : (\n          <PriceInfoText>\n            {`Input is estimated. You will sell at most `}\n            <span>\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\n            </span>\n            {' or the transaction will revert.'}\n          </PriceInfoText>\n        )}\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '16px 0 0' }}>\n          <Text>\n            Output will be sent to{' '}\n            <b title={recipient}>{isAddress(recipient) ? shortenAddress(recipient) : recipient}</b>\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/TransactionConfirmationModal/ConfirmationModalContent.tsx",["913"],"import React from 'react'\nimport { Wrapper, Section, BottomSection, ContentHeader } from './helpers'\n\ntype ConfirmationModalContentProps = {\n  title: string\n  onDismiss: () => void\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}\n\nconst ConfirmationModalContent = ({ title, bottomContent, onDismiss, topContent }: ConfirmationModalContentProps) => {\n  return (\n    <Wrapper>\n      <Section>\n        <ContentHeader onDismiss={onDismiss}>{title}</ContentHeader>\n        {topContent()}\n      </Section>\n      <BottomSection gap=\"12px\">{bottomContent()}</BottomSection>\n    </Wrapper>\n  )\n}\n\nexport default ConfirmationModalContent\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/TransactionConfirmationModal/ConfirmationPendingContent.tsx",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/TransactionConfirmationModal/TransactionErrorContent.tsx",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/TransactionConfirmationModal/TransactionSubmittedContent.tsx",["914"],"import { ChainId } from '@nguyenphu27/sdk'\nimport React, { useContext } from 'react'\nimport { ThemeContext } from 'styled-components'\nimport { Button, LinkExternal } from '@nguyenphu27/uikit'\nimport { ArrowUpCircle } from 'react-feather'\nimport { AutoColumn } from '../Column'\nimport { getBscScanLink } from '../../utils'\nimport { Wrapper, Section, ConfirmedIcon, ContentHeader } from './helpers'\n\ntype TransactionSubmittedContentProps = {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n}\n\nconst TransactionSubmittedContent = ({ onDismiss, chainId, hash }: TransactionSubmittedContentProps) => {\n  const theme = useContext(ThemeContext)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ContentHeader onDismiss={onDismiss}>Transaction submitted</ContentHeader>\n        <ConfirmedIcon>\n          <ArrowUpCircle strokeWidth={0.5} size={97} color={theme.colors.primary} />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"8px\" justify=\"center\">\n          {chainId && hash && (\n            <LinkExternal href={getBscScanLink(chainId, hash, 'transaction')}>View on BscScan</LinkExternal>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            Close\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport default TransactionSubmittedContent\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/TransactionConfirmationModal/TransactionConfirmationModal.tsx",["915"],"import React from 'react'\nimport Modal from '../Modal'\nimport { useActiveWeb3React } from '../../hooks'\nimport ConfirmationPendingContent from './ConfirmationPendingContent'\nimport TransactionSubmittedContent from './TransactionSubmittedContent'\n\ninterface ConfirmationModalProps {\n  isOpen: boolean\n  onDismiss: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n}\n\nconst TransactionConfirmationModal = ({\n  isOpen,\n  onDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content\n}: ConfirmationModalProps) => {\n  const { chainId } = useActiveWeb3React()\n\n  if (!chainId) return null\n\n  // confirmation screen\n  return (\n    <Modal isOpen={isOpen} onDismiss={onDismiss} maxHeight={90}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent onDismiss={onDismiss} pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent chainId={chainId} hash={hash} onDismiss={onDismiss} />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/Pane/index.tsx",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/NumericalInput/index.tsx",["916"],"import React from 'react'\nimport styled from 'styled-components'\nimport { escapeRegExp } from '../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because uniswap exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title=\"Token Amount\"\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/swap/SwapRoute.tsx",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/swap/FormattedPriceImpact.tsx",[],"/home/marc/workspace/EatTheBlocks/pancake-swap-exchange/pancake-swap-exchange-testnet/src/components/TransactionConfirmationModal/helpers.tsx",["917"],"import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\nimport { Heading, IconButton, CloseIcon } from '@nguyenphu27/uikit'\nimport { AutoColumn, ColumnCenter } from '../Column'\n\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  overflow-y: auto;\n`\nexport const Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nexport const ConfirmedIcon = styled(ColumnCenter)`\n  padding: 40px 0;\n`\n\nexport const BottomSection = styled(Section)`\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n`\n\n/**\n * TODO: Remove this when modal system from the UI Kit is implemented\n */\nconst StyledContentHeader = styled.div`\n  align-items: center;\n  display: flex;\n\n  & > ${Heading} {\n    flex: 1;\n  }\n`\n\ntype ContentHeaderProps = {\n  children: ReactNode\n  onDismiss: () => void\n}\n\nexport const ContentHeader = ({ children, onDismiss }: ContentHeaderProps) => (\n  <StyledContentHeader>\n    <Heading>{children}</Heading>\n    <IconButton onClick={onDismiss} variant=\"text\">\n      <CloseIcon color=\"primary\" />\n    </IconButton>\n  </StyledContentHeader>\n)\n",{"ruleId":null,"fatal":true,"severity":2,"message":"918","line":16,"column":20},{"ruleId":null,"fatal":true,"severity":2,"message":"919","line":15,"column":47},{"ruleId":null,"fatal":true,"severity":2,"message":"920","line":56,"column":26},{"ruleId":null,"fatal":true,"severity":2,"message":"921","line":35,"column":47},{"ruleId":null,"fatal":true,"severity":2,"message":"922","line":8,"column":9},{"ruleId":null,"fatal":true,"severity":2,"message":"923","line":6,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"924","line":6,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"925","line":5,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"926","line":55,"column":45},{"ruleId":null,"fatal":true,"severity":2,"message":"927","line":5,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"928","line":6,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"929","line":20,"column":3},{"ruleId":"930","message":"931","line":5,"column":1,"endLine":5,"endColumn":49,"severity":2,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"932","line":7,"column":12},{"ruleId":null,"fatal":true,"severity":2,"message":"933","line":92,"column":30},{"ruleId":null,"fatal":true,"severity":2,"message":"934","line":58,"column":5},{"ruleId":null,"fatal":true,"severity":2,"message":"935","line":56,"column":91},{"ruleId":null,"fatal":true,"severity":2,"message":"936","line":23,"column":24},{"ruleId":null,"fatal":true,"severity":2,"message":"937","line":23,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"938","line":11,"column":12},{"ruleId":null,"fatal":true,"severity":2,"message":"939","line":14,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"940","line":15,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"941","line":20,"column":36},{"ruleId":null,"fatal":true,"severity":2,"message":"942","line":23,"column":31},{"ruleId":null,"fatal":true,"severity":2,"message":"943","line":24,"column":80},{"ruleId":null,"fatal":true,"severity":2,"message":"944","line":5,"column":12},{"ruleId":null,"fatal":true,"severity":2,"message":"945","line":5,"column":12},{"ruleId":null,"fatal":true,"severity":2,"message":"946","line":5,"column":12},{"ruleId":null,"fatal":true,"severity":2,"message":"947","line":26,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"948","line":4,"column":38},{"ruleId":null,"fatal":true,"severity":2,"message":"949","line":15,"column":24},{"ruleId":null,"fatal":true,"severity":2,"message":"950","line":82,"column":51},{"ruleId":null,"fatal":true,"severity":2,"message":"951","line":47,"column":91},{"ruleId":null,"fatal":true,"severity":2,"message":"952","line":7,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"953","line":13,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"954","line":5,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"955","line":34,"column":46},{"ruleId":"956","message":"957","line":6,"column":1,"endLine":6,"endColumn":44,"severity":2,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"958","line":19,"column":12},{"ruleId":null,"fatal":true,"severity":2,"message":"959","line":7,"column":24},{"ruleId":null,"fatal":true,"severity":2,"message":"960","line":4,"column":32},{"ruleId":null,"fatal":true,"severity":2,"message":"961","line":14,"column":6},{"ruleId":null,"fatal":true,"severity":2,"message":"962","line":43,"column":38},{"ruleId":null,"fatal":true,"severity":2,"message":"963","line":20,"column":42},{"ruleId":null,"fatal":true,"severity":2,"message":"964","line":8,"column":63},{"ruleId":null,"fatal":true,"severity":2,"message":"965","line":23,"column":28},{"ruleId":null,"fatal":true,"severity":2,"message":"966","line":35,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"967","line":54,"column":13},{"ruleId":null,"fatal":true,"severity":2,"message":"968","line":21,"column":53},{"ruleId":null,"fatal":true,"severity":2,"message":"969","line":6,"column":57},{"ruleId":null,"fatal":true,"severity":2,"message":"970","line":36,"column":49},{"ruleId":null,"fatal":true,"severity":2,"message":"971","line":11,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"972","line":6,"column":45},{"ruleId":null,"fatal":true,"severity":2,"message":"973","line":30,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"974","line":52,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"975","line":10,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"976","line":23,"column":51},{"ruleId":null,"fatal":true,"severity":2,"message":"977","line":89,"column":52},{"ruleId":null,"fatal":true,"severity":2,"message":"978","line":30,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"979","line":20,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"980","line":14,"column":44},{"ruleId":null,"fatal":true,"severity":2,"message":"981","line":21,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"982","line":20,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"983","line":9,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"984","line":11,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"985","line":69,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"986","line":25,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"987","line":91,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"988","line":13,"column":41},{"ruleId":null,"fatal":true,"severity":2,"message":"989","line":3,"column":37},{"ruleId":null,"fatal":true,"severity":2,"message":"990","line":40,"column":47},{"ruleId":null,"fatal":true,"severity":2,"message":"991","line":8,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"992","line":19,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"993","line":15,"column":38},{"ruleId":null,"fatal":true,"severity":2,"message":"994","line":80,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"995","line":14,"column":42},{"ruleId":null,"fatal":true,"severity":2,"message":"996","line":18,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"997","line":8,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"998","line":39,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"999","line":100,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"1000","line":57,"column":42},{"ruleId":null,"fatal":true,"severity":2,"message":"1001","line":17,"column":42},{"ruleId":null,"fatal":true,"severity":2,"message":"1002","line":29,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"1003","line":95,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"1004","line":38,"column":35},{"ruleId":null,"fatal":true,"severity":2,"message":"1005","line":28,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"1006","line":32,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"1007","line":6,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"1008","line":12,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"1009","line":9,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"1010","line":5,"column":41},{"ruleId":null,"fatal":true,"severity":2,"message":"1011","line":39,"column":3},"Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 14 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 15 |\u001b[39m \u001b[36mif\u001b[39m (\u001b[32m'ethereum'\u001b[39m \u001b[36min\u001b[39m window) {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 16 |\u001b[39m   (window\u001b[33m.\u001b[39methereum \u001b[36mas\u001b[39m any)\u001b[33m.\u001b[39mautoRefreshOnNetworkChange \u001b[33m=\u001b[39m \u001b[36mfalse\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 17 |\u001b[39m }\u001b[0m\n\u001b[0m \u001b[90m 18 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 19 |\u001b[39m window\u001b[33m.\u001b[39maddEventListener(\u001b[32m'error'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m","Parsing error: Const declarations require an initialization value\n\n\u001b[0m \u001b[90m 13 |\u001b[39m   \u001b[36mconst\u001b[39m { library } \u001b[33m=\u001b[39m useActiveWeb3React()\u001b[0m\n\u001b[0m \u001b[90m 14 |\u001b[39m   \u001b[36mconst\u001b[39m dispatch \u001b[33m=\u001b[39m useDispatch\u001b[33m<\u001b[39m\u001b[33mAppDispatch\u001b[39m\u001b[33m>\u001b[39m()\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 15 |\u001b[39m   \u001b[36mconst\u001b[39m lists \u001b[33m=\u001b[39m useSelector\u001b[33m<\u001b[39m\u001b[33mAppState\u001b[39m\u001b[33m,\u001b[39m \u001b[33mAppState\u001b[39m[\u001b[32m'lists'\u001b[39m][\u001b[32m'byUrl'\u001b[39m]\u001b[33m>\u001b[39m((state) \u001b[33m=>\u001b[39m state\u001b[33m.\u001b[39mlists\u001b[33m.\u001b[39mbyUrl)\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 16 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 17 |\u001b[39m   \u001b[36mconst\u001b[39m isWindowVisible \u001b[33m=\u001b[39m useIsWindowVisible()\u001b[0m\n\u001b[0m \u001b[90m 18 |\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \"]\"\n\n\u001b[0m \u001b[90m 54 |\u001b[39m \u001b[90m */\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 55 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mfunction\u001b[39m activeListeningKeys(\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 56 |\u001b[39m   allListeners\u001b[33m:\u001b[39m \u001b[33mAppState\u001b[39m[\u001b[32m'multicall'\u001b[39m][\u001b[32m'callListeners'\u001b[39m]\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 57 |\u001b[39m   chainId\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m number\u001b[0m\n\u001b[0m \u001b[90m 58 |\u001b[39m )\u001b[33m:\u001b[39m { [callKey\u001b[33m:\u001b[39m string]\u001b[33m:\u001b[39m number } {\u001b[0m\n\u001b[0m \u001b[90m 59 |\u001b[39m   \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mallListeners \u001b[33m||\u001b[39m \u001b[33m!\u001b[39mchainId) \u001b[36mreturn\u001b[39m {}\u001b[0m","Parsing error: Const declarations require an initialization value\n\n\u001b[0m \u001b[90m 33 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 34 |\u001b[39m   \u001b[36mconst\u001b[39m dispatch \u001b[33m=\u001b[39m useDispatch\u001b[33m<\u001b[39m\u001b[33mAppDispatch\u001b[39m\u001b[33m>\u001b[39m()\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 35 |\u001b[39m   \u001b[36mconst\u001b[39m state \u001b[33m=\u001b[39m useSelector\u001b[33m<\u001b[39m\u001b[33mAppState\u001b[39m\u001b[33m,\u001b[39m \u001b[33mAppState\u001b[39m[\u001b[32m'transactions'\u001b[39m]\u001b[33m>\u001b[39m((s) \u001b[33m=>\u001b[39m s\u001b[33m.\u001b[39mtransactions)\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 36 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 37 |\u001b[39m   \u001b[90m// eslint-disable-next-line react-hooks/exhaustive-deps\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 38 |\u001b[39m   \u001b[36mconst\u001b[39m transactions \u001b[33m=\u001b[39m chainId \u001b[33m?\u001b[39m state[chainId] \u001b[33m?\u001b[39m\u001b[33m?\u001b[39m {} \u001b[33m:\u001b[39m {}\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  6 |\u001b[39m       txn\u001b[33m:\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  7 |\u001b[39m         hash\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  8 |\u001b[39m         success\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  9 |\u001b[39m         summary\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m 10 |\u001b[39m       }\u001b[0m\n\u001b[0m \u001b[90m 11 |\u001b[39m     }\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 4 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m fetchTokenList\u001b[33m:\u001b[39m \u001b[33mReadonly\u001b[39m\u001b[33m<\u001b[39m{\u001b[0m\n\u001b[0m \u001b[90m 5 |\u001b[39m   pending\u001b[33m:\u001b[39m \u001b[33mActionCreatorWithPayload\u001b[39m\u001b[33m<\u001b[39m{ url\u001b[33m:\u001b[39m string\u001b[33m;\u001b[39m requestId\u001b[33m:\u001b[39m string }\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 6 |\u001b[39m   fulfilled\u001b[33m:\u001b[39m \u001b[33mActionCreatorWithPayload\u001b[39m\u001b[33m<\u001b[39m{ url\u001b[33m:\u001b[39m string\u001b[33m;\u001b[39m tokenList\u001b[33m:\u001b[39m \u001b[33mTokenList\u001b[39m\u001b[33m;\u001b[39m requestId\u001b[33m:\u001b[39m string }\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 7 |\u001b[39m   rejected\u001b[33m:\u001b[39m \u001b[33mActionCreatorWithPayload\u001b[39m\u001b[33m<\u001b[39m{ url\u001b[33m:\u001b[39m string\u001b[33m;\u001b[39m errorMessage\u001b[33m:\u001b[39m string\u001b[33m;\u001b[39m requestId\u001b[33m:\u001b[39m string }\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 8 |\u001b[39m }\u001b[33m>\u001b[39m \u001b[33m=\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 9 |\u001b[39m   pending\u001b[33m:\u001b[39m createAction(\u001b[32m'lists/fetchTokenList/pending'\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 4 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mLanguageObject\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 5 |\u001b[39m   code\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 6 |\u001b[39m   language\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 7 |\u001b[39m }\u001b[0m\n\u001b[0m \u001b[90m 8 |\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mLanguageState\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 9 |\u001b[39m   selectedLanguage\u001b[33m:\u001b[39m \u001b[33mLanguageObject\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 3 |\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mTranslationState\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 4 |\u001b[39m   translations\u001b[33m:\u001b[39m \u001b[33mArray\u001b[39m\u001b[33m<\u001b[39m\u001b[33many\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 5 |\u001b[39m   setTranslations\u001b[33m:\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mDispatch\u001b[39m\u001b[33m<\u001b[39m\u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mSetStateAction\u001b[39m\u001b[33m<\u001b[39m\u001b[33mArray\u001b[39m\u001b[33m<\u001b[39m\u001b[33many\u001b[39m\u001b[33m>>>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 6 |\u001b[39m }\u001b[0m\n\u001b[0m \u001b[90m 7 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 8 |\u001b[39m \u001b[36mconst\u001b[39m defaultTranslationState\u001b[33m:\u001b[39m \u001b[33mTranslationState\u001b[39m \u001b[33m=\u001b[39m {\u001b[0m","Parsing error: Unexpected token, expected \"]\"\n\n\u001b[0m \u001b[90m 53 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 54 |\u001b[39m \u001b[90m// get the list of active popups\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 55 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mfunction\u001b[39m useActivePopups()\u001b[33m:\u001b[39m \u001b[33mAppState\u001b[39m[\u001b[32m'application'\u001b[39m][\u001b[32m'popupList'\u001b[39m] {\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 56 |\u001b[39m   \u001b[36mconst\u001b[39m list \u001b[33m=\u001b[39m useSelector((state\u001b[33m:\u001b[39m \u001b[33mAppState\u001b[39m) \u001b[33m=>\u001b[39m state\u001b[33m.\u001b[39mapplication\u001b[33m.\u001b[39mpopupList)\u001b[0m\n\u001b[0m \u001b[90m 57 |\u001b[39m   \u001b[36mreturn\u001b[39m useMemo(() \u001b[33m=>\u001b[39m list\u001b[33m.\u001b[39mfilter(item \u001b[33m=>\u001b[39m item\u001b[33m.\u001b[39mshow)\u001b[33m,\u001b[39m [list])\u001b[0m\n\u001b[0m \u001b[90m 58 |\u001b[39m }\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 3 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mCall\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 4 |\u001b[39m   address\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 5 |\u001b[39m   callData\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 6 |\u001b[39m }\u001b[0m\n\u001b[0m \u001b[90m 7 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 8 |\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mADDRESS_REGEX\u001b[39m \u001b[33m=\u001b[39m \u001b[33m/\u001b[39m\u001b[33m^\u001b[39m\u001b[35m0\u001b[39mx[a\u001b[33m-\u001b[39mfA\u001b[33m-\u001b[39m\u001b[33mF0\u001b[39m\u001b[33m-\u001b[39m\u001b[35m9\u001b[39m]{\u001b[35m40\u001b[39m}$\u001b[33m/\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 4 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mSerializableTransactionReceipt\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 5 |\u001b[39m   to\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 6 |\u001b[39m   \u001b[36mfrom\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 7 |\u001b[39m   contractAddress\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m 8 |\u001b[39m   transactionIndex\u001b[33m:\u001b[39m number\u001b[0m\n\u001b[0m \u001b[90m 9 |\u001b[39m   blockHash\u001b[33m:\u001b[39m string\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 18 |\u001b[39m     [key\u001b[33m:\u001b[39m string]\u001b[33m:\u001b[39m any\u001b[0m\n\u001b[0m \u001b[90m 19 |\u001b[39m   }\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 |\u001b[39m   transactions\u001b[33m:\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 21 |\u001b[39m     [key\u001b[33m:\u001b[39m string]\u001b[33m:\u001b[39m any\u001b[0m\n\u001b[0m \u001b[90m 22 |\u001b[39m   }\u001b[0m\n\u001b[0m \u001b[90m 23 |\u001b[39m }\u001b[0m","import/no-unresolved","Definition for rule 'import/no-unresolved' was not found.","Parsing error: Unexpected token, expected \":\"\n\n\u001b[0m \u001b[90m  5 |\u001b[39m \u001b[90m// a list of tokens by chain\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  6 |\u001b[39m type \u001b[33mChainTokenList\u001b[39m \u001b[33m=\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  7 |\u001b[39m   readonly [chainId \u001b[36min\u001b[39m \u001b[33mChainId\u001b[39m]\u001b[33m:\u001b[39m \u001b[33mToken\u001b[39m[]\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  8 |\u001b[39m }\u001b[0m\n\u001b[0m \u001b[90m  9 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mCAKE\u001b[39m \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mToken\u001b[39m(\u001b[0m","Parsing error: Unexpected token, expected \"]\"\n\n\u001b[0m \u001b[90m 90 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 91 |\u001b[39m   \u001b[90m// get the max amounts user can add\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 92 |\u001b[39m   \u001b[36mconst\u001b[39m maxAmounts\u001b[33m:\u001b[39m { [field \u001b[36min\u001b[39m \u001b[33mField\u001b[39m]\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mTokenAmount\u001b[39m } \u001b[33m=\u001b[39m [\u001b[33mField\u001b[39m\u001b[33m.\u001b[39m\u001b[33mCURRENCY_A\u001b[39m\u001b[33m,\u001b[39m \u001b[33mField\u001b[39m\u001b[33m.\u001b[39m\u001b[33mCURRENCY_B\u001b[39m]\u001b[33m.\u001b[39mreduce(\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 93 |\u001b[39m     (accumulator\u001b[33m,\u001b[39m field) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 94 |\u001b[39m       \u001b[36mreturn\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 95 |\u001b[39m         \u001b[33m...\u001b[39maccumulator\u001b[33m,\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 56 |\u001b[39m   \u001b[36mconst\u001b[39m [transactionWarning\u001b[33m,\u001b[39m setTransactionWarning] \u001b[33m=\u001b[39m useState\u001b[33m<\u001b[39m{\u001b[0m\n\u001b[0m \u001b[90m 57 |\u001b[39m     selectedToken\u001b[33m:\u001b[39m string \u001b[33m|\u001b[39m \u001b[36mnull\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 58 |\u001b[39m     purchaseType\u001b[33m:\u001b[39m string \u001b[33m|\u001b[39m \u001b[36mnull\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 59 |\u001b[39m   }\u001b[33m>\u001b[39m({\u001b[0m\n\u001b[0m \u001b[90m 60 |\u001b[39m     selectedToken\u001b[33m:\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 61 |\u001b[39m     purchaseType\u001b[33m:\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m,\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 54 |\u001b[39m     fetchingV2PairBalances \u001b[33m||\u001b[39m v2Pairs\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mlength \u001b[33m<\u001b[39m liquidityTokensWithBalances\u001b[33m.\u001b[39mlength \u001b[33m||\u001b[39m v2Pairs\u001b[33m?\u001b[39m\u001b[33m.\u001b[39msome((\u001b[33mV2Pair\u001b[39m) \u001b[33m=>\u001b[39m \u001b[33m!\u001b[39m\u001b[33mV2Pair\u001b[39m)\u001b[0m\n\u001b[0m \u001b[90m 55 |\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 56 |\u001b[39m   \u001b[36mconst\u001b[39m allV2PairsWithLiquidity \u001b[33m=\u001b[39m v2Pairs\u001b[33m.\u001b[39mmap(([\u001b[33m,\u001b[39m pair]) \u001b[33m=>\u001b[39m pair)\u001b[33m.\u001b[39mfilter((v2Pair)\u001b[33m:\u001b[39m v2Pair is \u001b[33mPair\u001b[39m \u001b[33m=>\u001b[39m \u001b[33mBoolean\u001b[39m(v2Pair))\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                                                                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 57 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 58 |\u001b[39m   \u001b[36mreturn\u001b[39m (\u001b[0m\n\u001b[0m \u001b[90m 59 |\u001b[39m     \u001b[33m<\u001b[39m\u001b[33mContainer\u001b[39m\u001b[33m>\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \"}\"\n\n\u001b[0m \u001b[90m 21 |\u001b[39m     \u001b[33m<\u001b[39m\u001b[33mUikitMenu\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 22 |\u001b[39m       links\u001b[33m=\u001b[39m{links}\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 23 |\u001b[39m       account\u001b[33m=\u001b[39m{account \u001b[36mas\u001b[39m string}\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 24 |\u001b[39m       login\u001b[33m=\u001b[39m{login}\u001b[0m\n\u001b[0m \u001b[90m 25 |\u001b[39m       logout\u001b[33m=\u001b[39m{logout}\u001b[0m\n\u001b[0m \u001b[90m 26 |\u001b[39m       isDark\u001b[33m=\u001b[39m{isDark}\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 21 |\u001b[39m   }\u001b[0m\n\u001b[0m \u001b[90m 22 |\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 23 |\u001b[39m   callResults\u001b[33m:\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 24 |\u001b[39m     [chainId\u001b[33m:\u001b[39m number]\u001b[33m:\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 25 |\u001b[39m       [callKey\u001b[33m:\u001b[39m string]\u001b[33m:\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 26 |\u001b[39m         data\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string \u001b[33m|\u001b[39m \u001b[36mnull\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \":\"\n\n\u001b[0m \u001b[90m  9 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mListsState\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 11 |\u001b[39m   readonly byUrl\u001b[33m:\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 12 |\u001b[39m     readonly [url\u001b[33m:\u001b[39m string]\u001b[33m:\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 13 |\u001b[39m       readonly current\u001b[33m:\u001b[39m \u001b[33mTokenList\u001b[39m \u001b[33m|\u001b[39m \u001b[36mnull\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 14 |\u001b[39m       readonly pendingUpdate\u001b[33m:\u001b[39m \u001b[33mTokenList\u001b[39m \u001b[33m|\u001b[39m \u001b[36mnull\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 12 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mTransactionDetails\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 13 |\u001b[39m   hash\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 14 |\u001b[39m   approval\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m { tokenAddress\u001b[33m:\u001b[39m string\u001b[33m;\u001b[39m spender\u001b[33m:\u001b[39m string }\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 15 |\u001b[39m   summary\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m 16 |\u001b[39m   receipt\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mSerializableTransactionReceipt\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 17 |\u001b[39m   lastCheckedBlockNumber\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m number\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 13 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mApplicationState\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 14 |\u001b[39m   blockNumber\u001b[33m:\u001b[39m { [chainId\u001b[33m:\u001b[39m number]\u001b[33m:\u001b[39m number }\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 15 |\u001b[39m   popupList\u001b[33m:\u001b[39m \u001b[33mPopupList\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 16 |\u001b[39m   walletModalOpen\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m \u001b[90m 17 |\u001b[39m   settingsMenuOpen\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m \u001b[90m 18 |\u001b[39m }\u001b[0m","Parsing error: Unexpected token, expected \"]\"\n\n\u001b[0m \u001b[90m 18 |\u001b[39m }\u001b[0m\n\u001b[0m \u001b[90m 19 |\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 |\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mBSCSCAN_PREFIXES\u001b[39m\u001b[33m:\u001b[39m { [chainId \u001b[36min\u001b[39m \u001b[33mChainId\u001b[39m]\u001b[33m:\u001b[39m string } \u001b[33m=\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 21 |\u001b[39m   \u001b[35m56\u001b[39m\u001b[33m:\u001b[39m \u001b[32m''\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 22 |\u001b[39m   \u001b[35m97\u001b[39m\u001b[33m:\u001b[39m \u001b[32m'testnet.'\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 23 |\u001b[39m }\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 21 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mdefault\u001b[39m \u001b[36mfunction\u001b[39m contenthashToUri(contenthash\u001b[33m:\u001b[39m string)\u001b[33m:\u001b[39m string {\u001b[0m\n\u001b[0m \u001b[90m 22 |\u001b[39m   \u001b[36mconst\u001b[39m buff \u001b[33m=\u001b[39m hexToUint8Array(contenthash)\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 23 |\u001b[39m   \u001b[36mconst\u001b[39m codec \u001b[33m=\u001b[39m getCodec(buff \u001b[36mas\u001b[39m \u001b[33mBuffer\u001b[39m) \u001b[90m// the typing is wrong for @types/multicodec\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 24 |\u001b[39m   \u001b[36mswitch\u001b[39m (codec) {\u001b[0m\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36mcase\u001b[39m \u001b[32m'ipfs-ns'\u001b[39m\u001b[33m:\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 26 |\u001b[39m       \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m rmPrefix(buff \u001b[36mas\u001b[39m \u001b[33mBuffer\u001b[39m)\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 22 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mfunction\u001b[39m getNetworkLibrary()\u001b[33m:\u001b[39m \u001b[33mWeb3Provider\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 23 |\u001b[39m   \u001b[90m// eslint-disable-next-line no-return-assign\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m   \u001b[36mreturn\u001b[39m (networkLibrary \u001b[33m=\u001b[39m networkLibrary \u001b[33m?\u001b[39m\u001b[33m?\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mWeb3Provider\u001b[39m(network\u001b[33m.\u001b[39mprovider \u001b[36mas\u001b[39m any))\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                                                                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 25 |\u001b[39m }\u001b[0m\n\u001b[0m \u001b[90m 26 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 27 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m injected \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mInjectedConnector\u001b[39m({\u001b[0m","Parsing error: Unexpected token, expected \":\"\n\n\u001b[0m \u001b[90m 3 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 4 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mBurnState\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 5 |\u001b[39m   readonly independentField\u001b[33m:\u001b[39m \u001b[33mField\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 6 |\u001b[39m   readonly typedValue\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m 7 |\u001b[39m }\u001b[0m\n\u001b[0m \u001b[90m 8 |\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \":\"\n\n\u001b[0m \u001b[90m 3 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 4 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mMintState\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 5 |\u001b[39m   readonly independentField\u001b[33m:\u001b[39m \u001b[33mField\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 6 |\u001b[39m   readonly typedValue\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m 7 |\u001b[39m   readonly otherTypedValue\u001b[33m:\u001b[39m string \u001b[90m// for the case when there's no liquidity\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 8 |\u001b[39m }\u001b[0m","Parsing error: Unexpected token, expected \":\"\n\n\u001b[0m \u001b[90m 3 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 4 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mSwapState\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 5 |\u001b[39m   readonly independentField\u001b[33m:\u001b[39m \u001b[33mField\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 6 |\u001b[39m   readonly typedValue\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m 7 |\u001b[39m   readonly [\u001b[33mField\u001b[39m\u001b[33m.\u001b[39m\u001b[33mINPUT\u001b[39m]\u001b[33m:\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 8 |\u001b[39m     readonly currencyId\u001b[33m:\u001b[39m string \u001b[33m|\u001b[39m undefined\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 24 |\u001b[39m   lastUpdateVersionTimestamp\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m number\u001b[0m\n\u001b[0m \u001b[90m 25 |\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 26 |\u001b[39m   userDarkMode\u001b[33m:\u001b[39m boolean \u001b[33m|\u001b[39m \u001b[36mnull\u001b[39m \u001b[90m// the user's choice for dark mode or light mode\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 27 |\u001b[39m   matchesDarkMode\u001b[33m:\u001b[39m boolean \u001b[90m// whether the dark mode media query matches\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 28 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 29 |\u001b[39m   userExpertMode\u001b[33m:\u001b[39m boolean\u001b[0m","Parsing error: Unexpected token, expected \"]\"\n\n\u001b[0m \u001b[90m 2 |\u001b[39m \u001b[36mimport\u001b[39m \u001b[33mMULTICALL_ABI\u001b[39m \u001b[36mfrom\u001b[39m \u001b[32m'./abi.json'\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 3 |\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 4 |\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMULTICALL_NETWORKS\u001b[39m\u001b[33m:\u001b[39m { [chainId \u001b[36min\u001b[39m \u001b[33mChainId\u001b[39m]\u001b[33m:\u001b[39m string } \u001b[33m=\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 5 |\u001b[39m   [\u001b[33mChainId\u001b[39m\u001b[33m.\u001b[39m\u001b[33mMAINNET\u001b[39m]\u001b[33m:\u001b[39m \u001b[32m'0x1Ee38d535d541c55C9dae27B12edf090C608E6Fb'\u001b[39m\u001b[33m,\u001b[39m \u001b[90m// TODO\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 6 |\u001b[39m   [\u001b[33mChainId\u001b[39m\u001b[33m.\u001b[39m\u001b[33mTESTNET\u001b[39m]\u001b[33m:\u001b[39m \u001b[32m'0x301907b5835a2d723Fe3e9E8C5Bc5375d5c1236A'\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 7 |\u001b[39m }\u001b[0m","Parsing error: Unexpected token, expected \"]\"\n\n\u001b[0m \u001b[90m 13 |\u001b[39m   price\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 14 |\u001b[39m }\u001b[33m:\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 15 |\u001b[39m   currencies\u001b[33m:\u001b[39m { [field \u001b[36min\u001b[39m \u001b[33mField\u001b[39m]\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mCurrency\u001b[39m }\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 16 |\u001b[39m   noLiquidity\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m \u001b[90m 17 |\u001b[39m   poolTokenPercentage\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mPercent\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 18 |\u001b[39m   price\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mPrice\u001b[39m\u001b[0m","Parsing error: Const declarations require an initialization value\n\n\u001b[0m \u001b[90m 80 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mfunction\u001b[39m useAudioModeManager()\u001b[33m:\u001b[39m [boolean\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m] {\u001b[0m\n\u001b[0m \u001b[90m 81 |\u001b[39m   \u001b[36mconst\u001b[39m dispatch \u001b[33m=\u001b[39m useDispatch\u001b[33m<\u001b[39m\u001b[33mAppDispatch\u001b[39m\u001b[33m>\u001b[39m()\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 82 |\u001b[39m   \u001b[36mconst\u001b[39m audioPlay \u001b[33m=\u001b[39m useSelector\u001b[33m<\u001b[39m\u001b[33mAppState\u001b[39m\u001b[33m,\u001b[39m \u001b[33mAppState\u001b[39m[\u001b[32m'user'\u001b[39m][\u001b[32m'audioPlay'\u001b[39m]\u001b[33m>\u001b[39m((state) \u001b[33m=>\u001b[39m state\u001b[33m.\u001b[39muser\u001b[33m.\u001b[39maudioPlay)\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 83 |\u001b[39m   \u001b[36mconst\u001b[39m toggleSetAudioMode \u001b[33m=\u001b[39m useCallback(() \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 84 |\u001b[39m     \u001b[36mif\u001b[39m (audioPlay) {\u001b[0m\n\u001b[0m \u001b[90m 85 |\u001b[39m       dispatch(muteAudio())\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 45 |\u001b[39m     fetchingV2PairBalances \u001b[33m||\u001b[39m v2Pairs\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mlength \u001b[33m<\u001b[39m liquidityTokensWithBalances\u001b[33m.\u001b[39mlength \u001b[33m||\u001b[39m v2Pairs\u001b[33m?\u001b[39m\u001b[33m.\u001b[39msome((\u001b[33mV2Pair\u001b[39m) \u001b[33m=>\u001b[39m \u001b[33m!\u001b[39m\u001b[33mV2Pair\u001b[39m)\u001b[0m\n\u001b[0m \u001b[90m 46 |\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 47 |\u001b[39m   \u001b[36mconst\u001b[39m allV2PairsWithLiquidity \u001b[33m=\u001b[39m v2Pairs\u001b[33m.\u001b[39mmap(([\u001b[33m,\u001b[39m pair]) \u001b[33m=>\u001b[39m pair)\u001b[33m.\u001b[39mfilter((v2Pair)\u001b[33m:\u001b[39m v2Pair is \u001b[33mPair\u001b[39m \u001b[33m=>\u001b[39m \u001b[33mBoolean\u001b[39m(v2Pair))\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                                                                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 48 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 49 |\u001b[39m   \u001b[36mreturn\u001b[39m (\u001b[0m\n\u001b[0m \u001b[90m 50 |\u001b[39m     \u001b[33m<\u001b[39m\u001b[33mCard\u001b[39m\u001b[33m>\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  5 |\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mNetworkConnectorArguments\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  6 |\u001b[39m   urls\u001b[33m:\u001b[39m { [chainId\u001b[33m:\u001b[39m number]\u001b[33m:\u001b[39m string }\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  7 |\u001b[39m   defaultChainId\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m number\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  8 |\u001b[39m }\u001b[0m\n\u001b[0m \u001b[90m  9 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 |\u001b[39m \u001b[90m// taken from ethers.js, compatible interface with web3 provider\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 11 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m replaceSwapState \u001b[33m=\u001b[39m createAction\u001b[33m<\u001b[39m{\u001b[0m\n\u001b[0m \u001b[90m 12 |\u001b[39m   field\u001b[33m:\u001b[39m \u001b[33mField\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 13 |\u001b[39m   typedValue\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 14 |\u001b[39m   inputCurrencyId\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m 15 |\u001b[39m   outputCurrencyId\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m 16 |\u001b[39m   recipient\u001b[33m:\u001b[39m string \u001b[33m|\u001b[39m \u001b[36mnull\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 3 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mSerializedToken\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 4 |\u001b[39m   chainId\u001b[33m:\u001b[39m number\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 5 |\u001b[39m   address\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 6 |\u001b[39m   decimals\u001b[33m:\u001b[39m number\u001b[0m\n\u001b[0m \u001b[90m 7 |\u001b[39m   symbol\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m 8 |\u001b[39m   name\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m","Parsing error: Missing semicolon\n\n\u001b[0m \u001b[90m 32 |\u001b[39m         ) {\u001b[0m\n\u001b[0m \u001b[90m 33 |\u001b[39m           \u001b[36mif\u001b[39m (connector \u001b[36minstanceof\u001b[39m \u001b[33mWalletConnectConnector\u001b[39m) {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m             \u001b[36mconst\u001b[39m walletConnector \u001b[33m=\u001b[39m connector \u001b[36mas\u001b[39m \u001b[33mWalletConnectConnector\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 35 |\u001b[39m             walletConnector\u001b[33m.\u001b[39mwalletConnectProvider \u001b[33m=\u001b[39m \u001b[36mnull\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 36 |\u001b[39m           }\u001b[0m\n\u001b[0m \u001b[90m 37 |\u001b[39m           toastError(\u001b[32m'Authorization Error'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'Please authorize to access your account'\u001b[39m)\u001b[0m","import/no-cycle","Definition for rule 'import/no-cycle' was not found.","Parsing error: Unexpected token, expected \":\"\n\n\u001b[0m \u001b[90m 17 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 18 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mResult\u001b[39m \u001b[36mextends\u001b[39m \u001b[33mReadonlyArray\u001b[39m\u001b[33m<\u001b[39m\u001b[33many\u001b[39m\u001b[33m>\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 |\u001b[39m   readonly [key\u001b[33m:\u001b[39m string]\u001b[33m:\u001b[39m any\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 20 |\u001b[39m }\u001b[0m\n\u001b[0m \u001b[90m 21 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 22 |\u001b[39m type \u001b[33mMethodArg\u001b[39m \u001b[33m=\u001b[39m string \u001b[33m|\u001b[39m number \u001b[33m|\u001b[39m \u001b[33mBigNumber\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \"]\"\n\n\u001b[0m \u001b[90m  5 |\u001b[39m \u001b[36mimport\u001b[39m { \u001b[33mAppState\u001b[39m } \u001b[36mfrom\u001b[39m \u001b[32m'../index'\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  6 |\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  7 |\u001b[39m type \u001b[33mTagDetails\u001b[39m \u001b[33m=\u001b[39m \u001b[33mTags\u001b[39m[keyof \u001b[33mTags\u001b[39m]\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  8 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mTagInfo\u001b[39m \u001b[36mextends\u001b[39m \u001b[33mTagDetails\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  9 |\u001b[39m   id\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m 10 |\u001b[39m }\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 2 |\u001b[39m \u001b[36mimport\u001b[39m { \u001b[33mBox\u001b[39m } \u001b[36mfrom\u001b[39m \u001b[32m'rebass/styled-components'\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 3 |\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 4 |\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mRow\u001b[39m \u001b[33m=\u001b[39m styled(\u001b[33mBox\u001b[39m)\u001b[33m<\u001b[39m{ align\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[33m;\u001b[39m padding\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[33m;\u001b[39m border\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[33m;\u001b[39m borderRadius\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string }\u001b[33m>\u001b[39m\u001b[32m`\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 5 |\u001b[39m \u001b[32m  width: 100%;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 6 |\u001b[39m \u001b[32m  display: flex;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 7 |\u001b[39m \u001b[32m  padding: 0;\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 12 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 13 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mAutoColumn\u001b[39m \u001b[33m=\u001b[39m styled\u001b[33m.\u001b[39mdiv\u001b[33m<\u001b[39m{\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 14 |\u001b[39m   gap\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[32m'sm'\u001b[39m \u001b[33m|\u001b[39m \u001b[32m'md'\u001b[39m \u001b[33m|\u001b[39m \u001b[32m'lg'\u001b[39m \u001b[33m|\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 15 |\u001b[39m   justify\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[32m'stretch'\u001b[39m \u001b[33m|\u001b[39m \u001b[32m'center'\u001b[39m \u001b[33m|\u001b[39m \u001b[32m'start'\u001b[39m \u001b[33m|\u001b[39m \u001b[32m'end'\u001b[39m \u001b[33m|\u001b[39m \u001b[32m'flex-start'\u001b[39m \u001b[33m|\u001b[39m \u001b[32m'flex-end'\u001b[39m \u001b[33m|\u001b[39m \u001b[32m'space-between'\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 16 |\u001b[39m }\u001b[33m>\u001b[39m\u001b[32m`\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 17 |\u001b[39m \u001b[32m  display: grid;\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 41 |\u001b[39m             \u001b[33m...\u001b[39mbasePairs\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 42 |\u001b[39m           ]\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 43 |\u001b[39m             \u001b[33m.\u001b[39mfilter((tokens)\u001b[33m:\u001b[39m tokens is [\u001b[33mToken\u001b[39m\u001b[33m,\u001b[39m \u001b[33mToken\u001b[39m] \u001b[33m=>\u001b[39m \u001b[33mBoolean\u001b[39m(tokens[\u001b[35m0\u001b[39m] \u001b[33m&&\u001b[39m tokens[\u001b[35m1\u001b[39m]))\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 44 |\u001b[39m             \u001b[33m.\u001b[39mfilter(([t0\u001b[33m,\u001b[39m t1]) \u001b[33m=>\u001b[39m t0\u001b[33m.\u001b[39maddress \u001b[33m!==\u001b[39m t1\u001b[33m.\u001b[39maddress)\u001b[0m\n\u001b[0m \u001b[90m 45 |\u001b[39m             \u001b[90m// This filter will remove all the pairs that are not supported by the CUSTOM_BASES settings\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 46 |\u001b[39m             \u001b[90m// This option is currently not used on Pancake swap\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \"]\"\n\n\u001b[0m \u001b[90m 18 |\u001b[39m \u001b[36mimport\u001b[39m { computeSlippageAdjustedAmounts } \u001b[36mfrom\u001b[39m \u001b[32m'../../utils/prices'\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 19 |\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mfunction\u001b[39m useSwapState()\u001b[33m:\u001b[39m \u001b[33mAppState\u001b[39m[\u001b[32m'swap'\u001b[39m] {\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 21 |\u001b[39m   \u001b[36mreturn\u001b[39m useSelector\u001b[33m<\u001b[39m\u001b[33mAppState\u001b[39m\u001b[33m,\u001b[39m \u001b[33mAppState\u001b[39m[\u001b[32m'swap'\u001b[39m]\u001b[33m>\u001b[39m((state) \u001b[33m=>\u001b[39m state\u001b[33m.\u001b[39mswap)\u001b[0m\n\u001b[0m \u001b[90m 22 |\u001b[39m }\u001b[0m\n\u001b[0m \u001b[90m 23 |\u001b[39m\u001b[0m","Parsing error: Missing semicolon\n\n\u001b[0m \u001b[90m  6 |\u001b[39m \u001b[36mconst\u001b[39m replaceDynamicString \u001b[33m=\u001b[39m (foundTranslation\u001b[33m:\u001b[39m string\u001b[33m,\u001b[39m fallback\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  7 |\u001b[39m   \u001b[90m// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  8 |\u001b[39m   \u001b[36mconst\u001b[39m stringToReplace \u001b[33m=\u001b[39m variableRegex\u001b[33m.\u001b[39mexec(foundTranslation)\u001b[33m!\u001b[39m[\u001b[35m0\u001b[39m]\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  9 |\u001b[39m   \u001b[36mconst\u001b[39m indexToReplace \u001b[33m=\u001b[39m foundTranslation\u001b[33m.\u001b[39msplit(\u001b[32m' '\u001b[39m)\u001b[33m.\u001b[39mindexOf(stringToReplace)\u001b[0m\n\u001b[0m \u001b[90m 10 |\u001b[39m   \u001b[36mconst\u001b[39m fallbackValueAtIndex \u001b[33m=\u001b[39m fallback\u001b[33m.\u001b[39msplit(\u001b[32m' '\u001b[39m)[indexToReplace]\u001b[0m\n\u001b[0m \u001b[90m 11 |\u001b[39m   \u001b[36mreturn\u001b[39m foundTranslation\u001b[33m.\u001b[39mreplace(stringToReplace\u001b[33m,\u001b[39m fallbackValueAtIndex)\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 21 |\u001b[39m         \u001b[33m?\u001b[39m uncheckedAddresses\u001b[0m\n\u001b[0m \u001b[90m 22 |\u001b[39m             \u001b[33m.\u001b[39mmap(isAddress)\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 23 |\u001b[39m             \u001b[33m.\u001b[39mfilter((a)\u001b[33m:\u001b[39m a is string \u001b[33m=>\u001b[39m a \u001b[33m!==\u001b[39m \u001b[36mfalse\u001b[39m)\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 24 |\u001b[39m             \u001b[33m.\u001b[39msort()\u001b[0m\n\u001b[0m \u001b[90m 25 |\u001b[39m         \u001b[33m:\u001b[39m []\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 26 |\u001b[39m     [uncheckedAddresses]\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 33 |\u001b[39m   pair\u001b[33m:\u001b[39m \u001b[33mPair\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 34 |\u001b[39m   \u001b[90m// eslint-disable-next-line react/no-unused-prop-types\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 35 |\u001b[39m   showUnwrapped\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 36 |\u001b[39m   \u001b[90m// eslint-disable-next-line react/no-unused-prop-types\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 37 |\u001b[39m   removeOnly\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m \u001b[90m 38 |\u001b[39m }\u001b[0m","Parsing error: Unexpected token, expected \"]\"\n\n\u001b[0m \u001b[90m 52 |\u001b[39m   trade\u001b[33m:\u001b[39m \u001b[33mTrade\u001b[39m \u001b[33m|\u001b[39m undefined\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 53 |\u001b[39m   allowedSlippage\u001b[33m:\u001b[39m number\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 54 |\u001b[39m )\u001b[33m:\u001b[39m { [field \u001b[36min\u001b[39m \u001b[33mField\u001b[39m]\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mCurrencyAmount\u001b[39m } {\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 55 |\u001b[39m   \u001b[36mconst\u001b[39m pct \u001b[33m=\u001b[39m basisPointsToPercent(allowedSlippage)\u001b[0m\n\u001b[0m \u001b[90m 56 |\u001b[39m   \u001b[36mreturn\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 57 |\u001b[39m     [\u001b[33mField\u001b[39m\u001b[33m.\u001b[39m\u001b[33mINPUT\u001b[39m]\u001b[33m:\u001b[39m trade\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mmaximumAmountIn(pct)\u001b[33m,\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 19 |\u001b[39m \u001b[32m`\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 20 |\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 21 |\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mStyledChildrenFlex\u001b[39m \u001b[33m=\u001b[39m styled(\u001b[33mFlex\u001b[39m)\u001b[33m<\u001b[39m{ isExpanded\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m boolean }\u001b[33m>\u001b[39m\u001b[32m`\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 22 |\u001b[39m \u001b[32m  overflow: hidden;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 23 |\u001b[39m \u001b[32m  height: ${({ isExpanded }) => (isExpanded ? '100%' : '0px')};\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 24 |\u001b[39m \u001b[32m  padding-bottom: ${({ isExpanded }) => (isExpanded ? '16px' : '0px')};\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 4 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 5 |\u001b[39m \u001b[90m// A button that triggers some onClick result, but looks like a link.\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 6 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mLinkStyledButton\u001b[39m \u001b[33m=\u001b[39m styled\u001b[33m.\u001b[39mbutton\u001b[33m<\u001b[39m{ disabled\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m boolean }\u001b[33m>\u001b[39m\u001b[32m`\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 7 |\u001b[39m \u001b[32m  border: none;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 8 |\u001b[39m \u001b[32m  text-decoration: none;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 9 |\u001b[39m \u001b[32m  background: none;\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 34 |\u001b[39m \u001b[32m`\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 35 |\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 36 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mErrorText\u001b[39m \u001b[33m=\u001b[39m styled(\u001b[33mText\u001b[39m)\u001b[33m<\u001b[39m{ severity\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[35m0\u001b[39m \u001b[33m|\u001b[39m \u001b[35m1\u001b[39m \u001b[33m|\u001b[39m \u001b[35m2\u001b[39m \u001b[33m|\u001b[39m \u001b[35m3\u001b[39m \u001b[33m|\u001b[39m \u001b[35m4\u001b[39m }\u001b[33m>\u001b[39m\u001b[32m`\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 37 |\u001b[39m \u001b[32m  color: ${({ theme, severity }) =>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 38 |\u001b[39m \u001b[32m    severity === 3 || severity === 4\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 39 |\u001b[39m \u001b[32m      ? theme.colors.failure\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  9 |\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mCurrencySearchModalProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 10 |\u001b[39m   isOpen\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 11 |\u001b[39m   onDismiss\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 12 |\u001b[39m   selectedCurrency\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mCurrency\u001b[39m \u001b[33m|\u001b[39m \u001b[36mnull\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 13 |\u001b[39m   onCurrencySelect\u001b[33m:\u001b[39m (currency\u001b[33m:\u001b[39m \u001b[33mCurrency\u001b[39m) \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 14 |\u001b[39m   otherSelectedCurrency\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mCurrency\u001b[39m \u001b[33m|\u001b[39m \u001b[36mnull\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 4 |\u001b[39m \u001b[36mimport\u001b[39m \u001b[33mCurrencyLogo\u001b[39m \u001b[36mfrom\u001b[39m \u001b[32m'../CurrencyLogo'\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 5 |\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 6 |\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mWrapper\u001b[39m \u001b[33m=\u001b[39m styled\u001b[33m.\u001b[39mdiv\u001b[33m<\u001b[39m{ margin\u001b[33m:\u001b[39m boolean\u001b[33m;\u001b[39m sizeraw\u001b[33m:\u001b[39m number }\u001b[33m>\u001b[39m\u001b[32m`\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 7 |\u001b[39m \u001b[32m  position: relative;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 8 |\u001b[39m \u001b[32m  display: flex;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 9 |\u001b[39m \u001b[32m  flex-direction: row;\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 28 |\u001b[39m }\u001b[33m:\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 29 |\u001b[39m   currency\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mCurrency\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 30 |\u001b[39m   size\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 31 |\u001b[39m   style\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mCSSProperties\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 32 |\u001b[39m }) {\u001b[0m\n\u001b[0m \u001b[90m 33 |\u001b[39m   \u001b[36mconst\u001b[39m uriLocations \u001b[33m=\u001b[39m useHttpLocations(currency \u001b[36minstanceof\u001b[39m \u001b[33mWrappedTokenInfo\u001b[39m \u001b[33m?\u001b[39m currency\u001b[33m.\u001b[39mlogoURI \u001b[33m:\u001b[39m undefined)\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 50 |\u001b[39m }\u001b[33m:\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 51 |\u001b[39m   removeAfterMs\u001b[33m:\u001b[39m number \u001b[33m|\u001b[39m \u001b[36mnull\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m   content\u001b[33m:\u001b[39m \u001b[33mPopupContent\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 53 |\u001b[39m   popKey\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m 54 |\u001b[39m }) {\u001b[0m\n\u001b[0m \u001b[90m 55 |\u001b[39m   \u001b[36mconst\u001b[39m removePopup \u001b[33m=\u001b[39m useRemovePopup()\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  8 |\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mPageHeaderProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  9 |\u001b[39m   title\u001b[33m:\u001b[39m \u001b[33mReactNode\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m   description\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mReactNode\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 11 |\u001b[39m   children\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mReactNode\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 12 |\u001b[39m }\u001b[0m\n\u001b[0m \u001b[90m 13 |\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \"{\"\n\n\u001b[0m \u001b[90m 21 |\u001b[39m }\u001b[0m\n\u001b[0m \u001b[90m 22 |\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 23 |\u001b[39m \u001b[36mfunction\u001b[39m isDefined\u001b[33m<\u001b[39m\u001b[33mT\u001b[39m\u001b[33m>\u001b[39m(x\u001b[33m:\u001b[39m \u001b[33mT\u001b[39m \u001b[33m|\u001b[39m \u001b[36mnull\u001b[39m \u001b[33m|\u001b[39m undefined)\u001b[33m:\u001b[39m x is \u001b[33mT\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 24 |\u001b[39m   \u001b[36mreturn\u001b[39m x \u001b[33m!==\u001b[39m \u001b[36mnull\u001b[39m \u001b[33m&&\u001b[39m x \u001b[33m!==\u001b[39m undefined\u001b[0m\n\u001b[0m \u001b[90m 25 |\u001b[39m }\u001b[0m\n\u001b[0m \u001b[90m 26 |\u001b[39m\u001b[0m","Parsing error: Const declarations require an initialization value\n\n\u001b[0m \u001b[90m 87 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 88 |\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mListRow\u001b[39m \u001b[33m=\u001b[39m memo(\u001b[36mfunction\u001b[39m \u001b[33mListRow\u001b[39m({ listUrl\u001b[33m,\u001b[39m onBack }\u001b[33m:\u001b[39m { listUrl\u001b[33m:\u001b[39m string\u001b[33m;\u001b[39m onBack\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m }) {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 89 |\u001b[39m   \u001b[36mconst\u001b[39m listsByUrl \u001b[33m=\u001b[39m useSelector\u001b[33m<\u001b[39m\u001b[33mAppState\u001b[39m\u001b[33m,\u001b[39m \u001b[33mAppState\u001b[39m[\u001b[32m'lists'\u001b[39m][\u001b[32m'byUrl'\u001b[39m]\u001b[33m>\u001b[39m((state) \u001b[33m=>\u001b[39m state\u001b[33m.\u001b[39mlists\u001b[33m.\u001b[39mbyUrl)\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 90 |\u001b[39m   \u001b[36mconst\u001b[39m selectedListUrl \u001b[33m=\u001b[39m useSelectedListUrl()\u001b[0m\n\u001b[0m \u001b[90m 91 |\u001b[39m   \u001b[36mconst\u001b[39m dispatch \u001b[33m=\u001b[39m useDispatch\u001b[33m<\u001b[39m\u001b[33mAppDispatch\u001b[39m\u001b[33m>\u001b[39m()\u001b[0m\n\u001b[0m \u001b[90m 92 |\u001b[39m   \u001b[36mconst\u001b[39m { current\u001b[33m:\u001b[39m list\u001b[33m,\u001b[39m pendingUpdate\u001b[33m:\u001b[39m pending } \u001b[33m=\u001b[39m listsByUrl[listUrl]\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 28 |\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mCurrencySearchProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 29 |\u001b[39m   isOpen\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 30 |\u001b[39m   onDismiss\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 31 |\u001b[39m   selectedCurrency\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mCurrency\u001b[39m \u001b[33m|\u001b[39m \u001b[36mnull\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 32 |\u001b[39m   onCurrencySelect\u001b[33m:\u001b[39m (currency\u001b[33m:\u001b[39m \u001b[33mCurrency\u001b[39m) \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 33 |\u001b[39m   otherSelectedCurrency\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mCurrency\u001b[39m \u001b[33m|\u001b[39m \u001b[36mnull\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 18 |\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mSwapCall\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 19 |\u001b[39m   contract\u001b[33m:\u001b[39m \u001b[33mContract\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 |\u001b[39m   parameters\u001b[33m:\u001b[39m \u001b[33mSwapParameters\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 21 |\u001b[39m }\u001b[0m\n\u001b[0m \u001b[90m 22 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 23 |\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mSuccessfulCall\u001b[39m {\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 12 |\u001b[39m \u001b[32m`\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 13 |\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 14 |\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mStyledSVG\u001b[39m \u001b[33m=\u001b[39m styled\u001b[33m.\u001b[39msvg\u001b[33m<\u001b[39m{ size\u001b[33m:\u001b[39m string\u001b[33m;\u001b[39m stroke\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string }\u001b[33m>\u001b[39m\u001b[32m`\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 15 |\u001b[39m \u001b[32m  animation: 2s ${rotate} linear infinite;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 16 |\u001b[39m \u001b[32m  height: ${({ size }) => size};\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 17 |\u001b[39m \u001b[32m  width: ${({ size }) => size};\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 19 |\u001b[39m }\u001b[33m:\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 20 |\u001b[39m   hash\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 21 |\u001b[39m   success\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 22 |\u001b[39m   summary\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m 23 |\u001b[39m }) {\u001b[0m\n\u001b[0m \u001b[90m 24 |\u001b[39m   \u001b[36mconst\u001b[39m { chainId } \u001b[33m=\u001b[39m useActiveWeb3React()\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 18 |\u001b[39m }\u001b[33m:\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 19 |\u001b[39m   popKey\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 |\u001b[39m   listUrl\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 21 |\u001b[39m   oldList\u001b[33m:\u001b[39m \u001b[33mTokenList\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 22 |\u001b[39m   newList\u001b[33m:\u001b[39m \u001b[33mTokenList\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 23 |\u001b[39m   auto\u001b[33m:\u001b[39m boolean\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  7 |\u001b[39m type \u001b[33mSettingsModalProps\u001b[39m \u001b[33m=\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  8 |\u001b[39m   onDismiss\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  9 |\u001b[39m   translateString\u001b[33m:\u001b[39m (translationId\u001b[33m:\u001b[39m number\u001b[33m,\u001b[39m fallback\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 |\u001b[39m }\u001b[0m\n\u001b[0m \u001b[90m 11 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 12 |\u001b[39m \u001b[90m// TODO: Fix UI Kit typings\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  9 |\u001b[39m type \u001b[33mRecentTransactionsModalProps\u001b[39m \u001b[33m=\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 10 |\u001b[39m   onDismiss\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 11 |\u001b[39m   translateString\u001b[33m:\u001b[39m (translationId\u001b[33m:\u001b[39m number\u001b[33m,\u001b[39m fallback\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 12 |\u001b[39m }\u001b[0m\n\u001b[0m \u001b[90m 13 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 14 |\u001b[39m \u001b[90m// TODO: Fix UI Kit typings\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 67 |\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mModalProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 68 |\u001b[39m   isOpen\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 69 |\u001b[39m   onDismiss\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 70 |\u001b[39m   minHeight\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m number \u001b[33m|\u001b[39m \u001b[36mfalse\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 71 |\u001b[39m   maxHeight\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m number\u001b[0m\n\u001b[0m \u001b[90m 72 |\u001b[39m   initialFocusRef\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mRefObject\u001b[39m\u001b[33m<\u001b[39m\u001b[33many\u001b[39m\u001b[33m>\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 23 |\u001b[39m }\u001b[33m:\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 24 |\u001b[39m   toggleSortOrder\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 25 |\u001b[39m   ascending\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 26 |\u001b[39m }) {\u001b[0m\n\u001b[0m \u001b[90m 27 |\u001b[39m   \u001b[36mreturn\u001b[39m (\u001b[0m\n\u001b[0m \u001b[90m 28 |\u001b[39m     \u001b[33m<\u001b[39m\u001b[33mFilterWrapper\u001b[39m onClick\u001b[33m=\u001b[39m{toggleSortOrder}\u001b[33m>\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 89 |\u001b[39m }\u001b[33m:\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 90 |\u001b[39m   currency\u001b[33m:\u001b[39m \u001b[33mCurrency\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 91 |\u001b[39m   onSelect\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 92 |\u001b[39m   isSelected\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m \u001b[90m 93 |\u001b[39m   otherSelected\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m \u001b[90m 94 |\u001b[39m   style\u001b[33m:\u001b[39m \u001b[33mCSSProperties\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 11 |\u001b[39m \u001b[36mimport\u001b[39m \u001b[33mCurrencyLogo\u001b[39m \u001b[36mfrom\u001b[39m \u001b[32m'../CurrencyLogo'\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 12 |\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 13 |\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mBaseWrapper\u001b[39m \u001b[33m=\u001b[39m styled\u001b[33m.\u001b[39mdiv\u001b[33m<\u001b[39m{ disable\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m boolean }\u001b[33m>\u001b[39m\u001b[32m`\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 14 |\u001b[39m \u001b[32m  border: 1px solid ${({ theme, disable }) => (disable ? 'transparent' : theme.colors.tertiary)};\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 15 |\u001b[39m \u001b[32m  border-radius: 10px;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 16 |\u001b[39m \u001b[32m  display: flex;\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 1 |\u001b[39m \u001b[36mimport\u001b[39m { \u001b[33mRefObject\u001b[39m\u001b[33m,\u001b[39m useEffect\u001b[33m,\u001b[39m useRef } \u001b[36mfrom\u001b[39m \u001b[32m'react'\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 3 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mfunction\u001b[39m useOnClickOutside\u001b[33m<\u001b[39m\u001b[33mT\u001b[39m \u001b[36mextends\u001b[39m \u001b[33mHTMLElement\u001b[39m\u001b[33m>\u001b[39m(\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 4 |\u001b[39m   node\u001b[33m:\u001b[39m \u001b[33mRefObject\u001b[39m\u001b[33m<\u001b[39m\u001b[33mT\u001b[39m \u001b[33m|\u001b[39m undefined\u001b[33m>\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 5 |\u001b[39m   handler\u001b[33m:\u001b[39m undefined \u001b[33m|\u001b[39m (() \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m)\u001b[0m\n\u001b[0m \u001b[90m 6 |\u001b[39m ) {\u001b[0m","Parsing error: Const declarations require an initialization value\n\n\u001b[0m \u001b[90m 38 |\u001b[39m   \u001b[36mconst\u001b[39m { chainId } \u001b[33m=\u001b[39m useActiveWeb3React()\u001b[0m\n\u001b[0m \u001b[90m 39 |\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 40 |\u001b[39m   \u001b[36mconst\u001b[39m state \u001b[33m=\u001b[39m useSelector\u001b[33m<\u001b[39m\u001b[33mAppState\u001b[39m\u001b[33m,\u001b[39m \u001b[33mAppState\u001b[39m[\u001b[32m'transactions'\u001b[39m]\u001b[33m>\u001b[39m((s) \u001b[33m=>\u001b[39m s\u001b[33m.\u001b[39mtransactions)\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 41 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 42 |\u001b[39m   \u001b[36mreturn\u001b[39m chainId \u001b[33m?\u001b[39m state[chainId] \u001b[33m?\u001b[39m\u001b[33m?\u001b[39m {} \u001b[33m:\u001b[39m {}\u001b[0m\n\u001b[0m \u001b[90m 43 |\u001b[39m }\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  6 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mLogoProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  7 |\u001b[39m   alt\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  8 |\u001b[39m   style\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m any\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  9 |\u001b[39m   className\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m 10 |\u001b[39m   srcs\u001b[33m:\u001b[39m string[]\u001b[0m\n\u001b[0m \u001b[90m 11 |\u001b[39m }\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 17 |\u001b[39m }\u001b[33m:\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 18 |\u001b[39m   logoURI\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 |\u001b[39m   size\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 20 |\u001b[39m   style\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mCSSProperties\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 21 |\u001b[39m   alt\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m 22 |\u001b[39m }) {\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 13 |\u001b[39m \u001b[32m`\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 14 |\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 15 |\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mCircle\u001b[39m \u001b[33m=\u001b[39m styled\u001b[33m.\u001b[39mdiv\u001b[33m<\u001b[39m{ confirmed\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m boolean\u001b[33m;\u001b[39m disabled\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m boolean }\u001b[33m>\u001b[39m\u001b[32m`\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 16 |\u001b[39m \u001b[32m  min-width: 20px;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 17 |\u001b[39m \u001b[32m  min-height: 20px;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 18 |\u001b[39m \u001b[32m  background-color: ${({ theme, confirmed, disabled }) =>\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 78 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mPopoverProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 79 |\u001b[39m   content\u001b[33m:\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mReactNode\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m   show\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 81 |\u001b[39m   children\u001b[33m:\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mReactNode\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 82 |\u001b[39m   placement\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mPlacement\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 83 |\u001b[39m }\u001b[0m","Parsing error: Unexpected token, expected \"]\"\n\n\u001b[0m \u001b[90m 12 |\u001b[39m \u001b[36mimport\u001b[39m { \u001b[33mField\u001b[39m\u001b[33m,\u001b[39m typeInput } \u001b[36mfrom\u001b[39m \u001b[32m'./actions'\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 13 |\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 14 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mfunction\u001b[39m useBurnState()\u001b[33m:\u001b[39m \u001b[33mAppState\u001b[39m[\u001b[32m'burn'\u001b[39m] {\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 15 |\u001b[39m   \u001b[36mreturn\u001b[39m useSelector\u001b[33m<\u001b[39m\u001b[33mAppState\u001b[39m\u001b[33m,\u001b[39m \u001b[33mAppState\u001b[39m[\u001b[32m'burn'\u001b[39m]\u001b[33m>\u001b[39m(state \u001b[33m=>\u001b[39m state\u001b[33m.\u001b[39mburn)\u001b[0m\n\u001b[0m \u001b[90m 16 |\u001b[39m }\u001b[0m\n\u001b[0m \u001b[90m 17 |\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 16 |\u001b[39m }\u001b[33m:\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 17 |\u001b[39m   noLiquidity\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m   price\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mFraction\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 19 |\u001b[39m   currencies\u001b[33m:\u001b[39m { [field \u001b[36min\u001b[39m \u001b[33mField\u001b[39m]\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mCurrency\u001b[39m }\u001b[0m\n\u001b[0m \u001b[90m 20 |\u001b[39m   parsedAmounts\u001b[33m:\u001b[39m { [field \u001b[36min\u001b[39m \u001b[33mField\u001b[39m]\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mCurrencyAmount\u001b[39m }\u001b[0m\n\u001b[0m \u001b[90m 21 |\u001b[39m   poolTokenPercentage\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mPercent\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  6 |\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mTradePriceProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  7 |\u001b[39m   price\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mPrice\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  8 |\u001b[39m   showInverted\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  9 |\u001b[39m   setShowInverted\u001b[33m:\u001b[39m (showInverted\u001b[33m:\u001b[39m boolean) \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 |\u001b[39m }\u001b[0m\n\u001b[0m \u001b[90m 11 |\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 37 |\u001b[39m }\u001b[33m:\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 38 |\u001b[39m   isOpen\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m   trade\u001b[33m:\u001b[39m \u001b[33mTrade\u001b[39m \u001b[33m|\u001b[39m undefined\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 40 |\u001b[39m   originalTrade\u001b[33m:\u001b[39m \u001b[33mTrade\u001b[39m \u001b[33m|\u001b[39m undefined\u001b[0m\n\u001b[0m \u001b[90m 41 |\u001b[39m   attemptingTxn\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m \u001b[90m 42 |\u001b[39m   txHash\u001b[33m:\u001b[39m string \u001b[33m|\u001b[39m undefined\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  98 |\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mInputSliderProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  99 |\u001b[39m   value\u001b[33m:\u001b[39m number\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 100 |\u001b[39m   onChange\u001b[33m:\u001b[39m (value\u001b[33m:\u001b[39m number) \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m     |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 101 |\u001b[39m   step\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m number\u001b[0m\n\u001b[0m \u001b[90m 102 |\u001b[39m   min\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m number\u001b[0m\n\u001b[0m \u001b[90m 103 |\u001b[39m   max\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m number\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 55 |\u001b[39m \u001b[32m  justify-content: space-between;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 56 |\u001b[39m \u001b[32m`\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 57 |\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mInputPanel\u001b[39m \u001b[33m=\u001b[39m styled\u001b[33m.\u001b[39mdiv\u001b[33m<\u001b[39m{ hideInput\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m boolean }\u001b[33m>\u001b[39m\u001b[32m`\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 58 |\u001b[39m \u001b[32m  display: flex;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 59 |\u001b[39m \u001b[32m  flex-flow: column nowrap;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 60 |\u001b[39m \u001b[32m  position: relative;\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \"]\"\n\n\u001b[0m \u001b[90m 15 |\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mZERO\u001b[39m \u001b[33m=\u001b[39m \u001b[33mJSBI\u001b[39m\u001b[33m.\u001b[39m\u001b[33mBigInt\u001b[39m(\u001b[35m0\u001b[39m)\u001b[0m\n\u001b[0m \u001b[90m 16 |\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 17 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mfunction\u001b[39m useMintState()\u001b[33m:\u001b[39m \u001b[33mAppState\u001b[39m[\u001b[32m'mint'\u001b[39m] {\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 18 |\u001b[39m   \u001b[36mreturn\u001b[39m useSelector\u001b[33m<\u001b[39m\u001b[33mAppState\u001b[39m\u001b[33m,\u001b[39m \u001b[33mAppState\u001b[39m[\u001b[32m'mint'\u001b[39m]\u001b[33m>\u001b[39m((state) \u001b[33m=>\u001b[39m state\u001b[33m.\u001b[39mmint)\u001b[0m\n\u001b[0m \u001b[90m 19 |\u001b[39m }\u001b[0m\n\u001b[0m \u001b[90m 20 |\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 27 |\u001b[39m }\u001b[33m:\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 28 |\u001b[39m   isOpen\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 29 |\u001b[39m   transactionType\u001b[33m:\u001b[39m string \u001b[33m|\u001b[39m \u001b[36mnull\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 30 |\u001b[39m   onConfirm\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 31 |\u001b[39m }) {\u001b[0m\n\u001b[0m \u001b[90m 32 |\u001b[39m   \u001b[36mconst\u001b[39m [understandChecked\u001b[33m,\u001b[39m setUnderstandChecked] \u001b[33m=\u001b[39m useState(\u001b[36mfalse\u001b[39m)\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 93 |\u001b[39m }\u001b[33m:\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 94 |\u001b[39m   isOpen\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 95 |\u001b[39m   tokens\u001b[33m:\u001b[39m \u001b[33mToken\u001b[39m[]\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 96 |\u001b[39m   onConfirm\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 97 |\u001b[39m }) {\u001b[0m\n\u001b[0m \u001b[90m 98 |\u001b[39m   \u001b[36mconst\u001b[39m [understandChecked\u001b[33m,\u001b[39m setUnderstandChecked] \u001b[33m=\u001b[39m useState(\u001b[36mfalse\u001b[39m)\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 36 |\u001b[39m \u001b[32m`\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 37 |\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 38 |\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mInput\u001b[39m \u001b[33m=\u001b[39m styled\u001b[33m.\u001b[39minput\u001b[33m<\u001b[39m{ error\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m boolean }\u001b[33m>\u001b[39m\u001b[32m`\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 39 |\u001b[39m \u001b[32m  font-size: 1.25rem;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 40 |\u001b[39m \u001b[32m  outline: none;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 41 |\u001b[39m \u001b[32m  border: none;\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 26 |\u001b[39m }\u001b[33m:\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 27 |\u001b[39m   trade\u001b[33m:\u001b[39m \u001b[33mTrade\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 28 |\u001b[39m   allowedSlippage\u001b[33m:\u001b[39m number\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 29 |\u001b[39m   onConfirm\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 30 |\u001b[39m   swapErrorMessage\u001b[33m:\u001b[39m string \u001b[33m|\u001b[39m undefined\u001b[0m\n\u001b[0m \u001b[90m 31 |\u001b[39m   disabledConfirm\u001b[33m:\u001b[39m boolean\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 30 |\u001b[39m }\u001b[33m:\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 31 |\u001b[39m   trade\u001b[33m:\u001b[39m \u001b[33mTrade\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 32 |\u001b[39m   allowedSlippage\u001b[33m:\u001b[39m number\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 33 |\u001b[39m   recipient\u001b[33m:\u001b[39m string \u001b[33m|\u001b[39m \u001b[36mnull\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 34 |\u001b[39m   showAcceptChanges\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m \u001b[90m 35 |\u001b[39m   onAcceptChanges\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 4 |\u001b[39m type \u001b[33mConfirmationModalContentProps\u001b[39m \u001b[33m=\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 5 |\u001b[39m   title\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 6 |\u001b[39m   onDismiss\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 7 |\u001b[39m   topContent\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mReactNode\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 8 |\u001b[39m   bottomContent\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mReactNode\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 9 |\u001b[39m }\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 10 |\u001b[39m type \u001b[33mTransactionSubmittedContentProps\u001b[39m \u001b[33m=\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 11 |\u001b[39m   onDismiss\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 12 |\u001b[39m   hash\u001b[33m:\u001b[39m string \u001b[33m|\u001b[39m undefined\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 13 |\u001b[39m   chainId\u001b[33m:\u001b[39m \u001b[33mChainId\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 14 |\u001b[39m }\u001b[0m\n\u001b[0m \u001b[90m 15 |\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  7 |\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mConfirmationModalProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  8 |\u001b[39m   isOpen\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  9 |\u001b[39m   onDismiss\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 |\u001b[39m   hash\u001b[33m:\u001b[39m string \u001b[33m|\u001b[39m undefined\u001b[0m\n\u001b[0m \u001b[90m 11 |\u001b[39m   content\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mReactNode\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 12 |\u001b[39m   attemptingTxn\u001b[33m:\u001b[39m boolean\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 3 |\u001b[39m \u001b[36mimport\u001b[39m { escapeRegExp } \u001b[36mfrom\u001b[39m \u001b[32m'../../utils'\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 4 |\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 5 |\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mStyledInput\u001b[39m \u001b[33m=\u001b[39m styled\u001b[33m.\u001b[39minput\u001b[33m<\u001b[39m{ error\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m boolean\u001b[33m;\u001b[39m fontSize\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[33m;\u001b[39m align\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string }\u001b[33m>\u001b[39m\u001b[32m`\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 6 |\u001b[39m \u001b[32m  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 7 |\u001b[39m \u001b[32m  width: 0;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 8 |\u001b[39m \u001b[32m  position: relative;\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 37 |\u001b[39m type \u001b[33mContentHeaderProps\u001b[39m \u001b[33m=\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 38 |\u001b[39m   children\u001b[33m:\u001b[39m \u001b[33mReactNode\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m   onDismiss\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 40 |\u001b[39m }\u001b[0m\n\u001b[0m \u001b[90m 41 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 42 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mContentHeader\u001b[39m \u001b[33m=\u001b[39m ({ children\u001b[33m,\u001b[39m onDismiss }\u001b[33m:\u001b[39m \u001b[33mContentHeaderProps\u001b[39m) \u001b[33m=>\u001b[39m (\u001b[0m"]